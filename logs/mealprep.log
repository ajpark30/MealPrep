[INFO ] 2019-04-25 17:38:38.647 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-25 17:38:38.660 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-04-25 17:38:38.660 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-04-25 17:38:41.550 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-25 17:38:41.551 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-25 17:51:31.828 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-25 17:51:31.842 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-04-25 17:51:31.842 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-04-25 17:51:34.729 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-25 17:51:34.730 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-25 18:33:02.003 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-25 18:33:02.018 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-04-25 18:33:02.019 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-04-25 18:33:04.798 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-25 18:33:04.799 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-25 18:37:16.875 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-25 18:37:16.884 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-04-25 18:37:16.885 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-04-25 18:37:19.652 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 5, grocerylistName= Week 5, ingredientId= 3, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 6, grocerylistName= Week 2, ingredientId= 3, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 8, grocerylistName= Week 2, ingredientId= 2, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 9, grocerylistName= Week 3, ingredientId= 3, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-25 18:37:19.729 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-25 18:37:19.729 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-04-25 18:37:19.729 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-04-25 18:37:19.799 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-25 18:37:19.800 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-25 18:37:19.900 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-25 18:37:19.901 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-04-25 18:37:19.901 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-25 18:37:19.941 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 18:37:19.942 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 18:37:19.942 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-25 18:37:19.960 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 18:37:19.960 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 18:37:19.976 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 18:37:20.019 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-25 18:37:20.026 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-25 18:37:20.081 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-25 18:37:20.082 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-25 18:37:20.082 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-25 18:37:20.099 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=7, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Braised Pork Belly', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 18:37:20.162 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-25 18:37:20.162 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-04-25 18:37:20.163 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:37:20.179 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-25 18:37:20.180 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:37:20.191 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-25 18:37:20.192 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-25 18:37:20.192 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:37:20.207 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-25 18:37:20.207 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-25T18:37:20.163}
[INFO ] 2019-04-25 18:37:20.236 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId=200, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-25T18:37:20.163}
[INFO ] 2019-04-25 18:37:20.237 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId=200, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-25T18:37:20.163}
[INFO ] 2019-04-25 18:37:20.279 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-25 18:37:20.280 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-04-25 18:37:20.281 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:37:20.307 [main] GenericDao - **********Query by Last Name Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}]
[INFO ] 2019-04-25 18:37:20.307 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-25 18:37:20.332 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-25 18:37:20.332 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-25 18:37:20.375 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-25 18:37:20.376 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-25 18:37:20.388 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-25 18:37:20.436 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-25 18:37:20.437 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-04-25 18:37:20.437 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-25 18:37:20.508 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=4, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Swedish Meatballs', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=6, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Lamb Shank', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=7, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Braised Pork Belly', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=8, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Beef Wellington', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=9, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pad Thai', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Bibimbap', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=11, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Fried Chicken', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-25 18:37:20.575 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-25 18:37:20.575 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-04-25 18:37:20.575 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:37:20.585 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-25 18:37:20.585 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-25T18:37:20.575}
[INFO ] 2019-04-25 18:37:20.585 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-25T18:37:20.575}
[INFO ] 2019-04-25 18:37:20.603 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId=201, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-25T18:37:20.575}
[INFO ] 2019-04-25 18:37:20.603 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-04-25 18:37:20.603 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-04-25 18:37:20.624 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=8, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Beef Wellington', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=9, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pad Thai', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=201, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-25T18:37:21}]
[INFO ] 2019-04-25 18:37:20.624 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-04-25 18:37:20.624 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-04-25 18:37:20.643 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Bibimbap', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=11, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Fried Chicken', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-25 18:37:20.643 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Macaroni and Cheese', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 18:37:20.663 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Macaroni and Cheese', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 18:37:20.742 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-25 18:37:20.743 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-04-25 18:37:20.743 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:37:20.749 [main] GenericDao - **********Query by ID Found: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-25 18:37:20.749 [main] GenericDao - **********Attempting to delete: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-25 18:37:20.751 [main] GenericDao - **********Successfully deleted: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-25 18:37:20.759 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:37:20.763 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-25 18:37:20.808 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-25 18:37:20.808 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-25 18:37:20.809 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:37:20.818 [main] GenericDao - **********Query by ID Found: User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}
[INFO ] 2019-04-25 18:37:20.862 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-25 18:37:20.862 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-04-25 18:37:20.863 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:37:20.937 [main] GenericDao - **********Get All Query Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}, User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}]
[INFO ] 2019-04-25 18:37:20.988 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-25 18:37:20.988 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-04-25 18:37:20.989 [main] UserTest - -------Locale date time: 2019-04-25T18:37:20.989----------
[INFO ] 2019-04-25 18:37:20.989 [main] GenericDao - **********Attempting to insert a Entity: User{userId='0', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-25 18:37:20.996 [main] GenericDao - **********Entity inserted: User{userId='248', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-25 18:37:20.997 [main] GenericDao - **********Query database by using an ID: 248, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:37:21.003 [main] GenericDao - **********Query by ID Found: User{userId='248', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-25 18:37:21.036 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-25 18:37:21.037 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-04-25 18:37:21.037 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId='0', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-25 18:37:21.045 [main] GenericDao - **********Saved|Updated entity: User{userId='249', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-25 18:37:21.045 [main] GenericDao - **********Query database by using an ID: 249, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:37:21.049 [main] GenericDao - **********Query by ID Found: User{userId='249', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-25 18:37:21.049 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:37:21.058 [main] GenericDao - **********Query by ID Found: User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}
[INFO ] 2019-04-25 18:37:21.059 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-04-25 18:37:21.059 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-25 18:37:21.069 [main] GenericDao - **********Saved|Updated entity: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-25 18:37:21.070 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:37:21.085 [main] GenericDao - **********Query by ID Found: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-25 18:37:21.128 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-25 18:37:21.129 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-04-25 18:37:21.129 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:37:21.146 [main] GenericDao - **********Query by Last Name Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}]
[INFO ] 2019-04-25 18:37:21.146 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:37:21.174 [main] GenericDao - **********Query by Last Name Found: [User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}]
[INFO ] 2019-04-25 18:37:21.214 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-25 18:37:21.215 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-04-25 18:37:21.215 [main] GenericDao - **********Attempting to insert a Entity: User{userId='0', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-25 18:37:21.220 [main] GenericDao - **********Entity inserted: User{userId='250', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-25 18:37:21.220 [main] GenericDao - **********Query database by using an ID: 250, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:37:21.225 [main] GenericDao - **********Query by ID Found: User{userId='250', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-25 18:38:03.925 [http-nio-8080-exec-6] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-25 18:39:42.905 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-25 18:39:42.917 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-04-25 18:39:42.918 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-04-25 18:39:45.531 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 5, grocerylistName= Week 5, ingredientId= 3, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 6, grocerylistName= Week 2, ingredientId= 3, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 8, grocerylistName= Week 2, ingredientId= 2, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 9, grocerylistName= Week 3, ingredientId= 3, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-25 18:39:45.672 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-25 18:39:45.672 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-04-25 18:39:45.673 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-04-25 18:39:45.754 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-25 18:39:45.755 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-25 18:39:45.853 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-25 18:39:45.854 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-04-25 18:39:45.855 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-25 18:39:45.902 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 18:39:45.905 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 18:39:45.906 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-25 18:39:45.923 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 18:39:45.924 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 18:39:45.949 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 18:39:45.995 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-25 18:39:46.001 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-25 18:39:46.048 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-25 18:39:46.049 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-25 18:39:46.049 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-25 18:39:46.068 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=7, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Braised Pork Belly', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 18:39:46.127 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-25 18:39:46.127 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-04-25 18:39:46.128 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:39:46.144 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-25 18:39:46.145 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:39:46.157 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-25 18:39:46.158 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-25 18:39:46.158 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:39:46.170 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-25 18:39:46.171 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-25T18:39:46.128}
[INFO ] 2019-04-25 18:39:46.200 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId=203, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-25T18:39:46.128}
[INFO ] 2019-04-25 18:39:46.200 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId=203, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-25T18:39:46.128}
[INFO ] 2019-04-25 18:39:46.239 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-25 18:39:46.239 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-04-25 18:39:46.240 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:39:46.272 [main] GenericDao - **********Query by Last Name Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}]
[INFO ] 2019-04-25 18:39:46.273 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-25 18:39:46.298 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-25 18:39:46.298 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-25 18:39:46.350 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-25 18:39:46.351 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-25 18:39:46.365 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-25 18:39:46.402 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-25 18:39:46.403 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-04-25 18:39:46.403 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-25 18:39:46.447 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=4, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Swedish Meatballs', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=6, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Lamb Shank', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=7, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Braised Pork Belly', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=8, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Beef Wellington', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=9, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pad Thai', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Bibimbap', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=11, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Fried Chicken', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-25 18:39:46.490 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-25 18:39:46.490 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-04-25 18:39:46.491 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:39:46.503 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-25 18:39:46.503 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-25T18:39:46.491}
[INFO ] 2019-04-25 18:39:46.504 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-25T18:39:46.491}
[INFO ] 2019-04-25 18:39:46.516 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId=204, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-25T18:39:46.491}
[INFO ] 2019-04-25 18:39:46.517 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-04-25 18:39:46.517 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-04-25 18:39:46.537 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=8, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Beef Wellington', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=9, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pad Thai', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=204, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-25T18:39:46}]
[INFO ] 2019-04-25 18:39:46.538 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-04-25 18:39:46.538 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-04-25 18:39:46.562 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Bibimbap', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=11, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Fried Chicken', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-25 18:39:46.563 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Macaroni and Cheese', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 18:39:46.576 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Macaroni and Cheese', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 18:39:46.676 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-25 18:39:46.677 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-04-25 18:39:46.677 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:39:46.697 [main] GenericDao - **********Query by ID Found: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-25 18:39:46.700 [main] GenericDao - **********Attempting to delete: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-25 18:39:46.705 [main] GenericDao - **********Successfully deleted: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-25 18:39:46.712 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:39:46.727 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-25 18:39:46.790 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-25 18:39:46.790 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-25 18:39:46.790 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:39:46.804 [main] GenericDao - **********Query by ID Found: User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}
[INFO ] 2019-04-25 18:39:46.852 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-25 18:39:46.853 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-04-25 18:39:46.853 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:39:46.939 [main] GenericDao - **********Get All Query Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}, User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}]
[INFO ] 2019-04-25 18:39:46.984 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-25 18:39:46.985 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-04-25 18:39:46.985 [main] UserTest - -------Locale date time: 2019-04-25T18:39:46.985----------
[INFO ] 2019-04-25 18:39:46.985 [main] GenericDao - **********Attempting to insert a Entity: User{userId='0', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-25 18:39:46.996 [main] GenericDao - **********Entity inserted: User{userId='251', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-25 18:39:46.996 [main] GenericDao - **********Query database by using an ID: 251, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:39:47.005 [main] GenericDao - **********Query by ID Found: User{userId='251', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-25 18:39:47.047 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-25 18:39:47.047 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-04-25 18:39:47.048 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId='0', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-25 18:39:47.053 [main] GenericDao - **********Saved|Updated entity: User{userId='252', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-25 18:39:47.053 [main] GenericDao - **********Query database by using an ID: 252, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:39:47.057 [main] GenericDao - **********Query by ID Found: User{userId='252', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-25 18:39:47.057 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:39:47.064 [main] GenericDao - **********Query by ID Found: User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}
[INFO ] 2019-04-25 18:39:47.065 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-04-25 18:39:47.065 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-25 18:39:47.073 [main] GenericDao - **********Saved|Updated entity: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-25 18:39:47.073 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:39:47.080 [main] GenericDao - **********Query by ID Found: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-25 18:39:47.127 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-25 18:39:47.127 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-04-25 18:39:47.127 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:39:47.144 [main] GenericDao - **********Query by Last Name Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}]
[INFO ] 2019-04-25 18:39:47.144 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:39:47.172 [main] GenericDao - **********Query by Last Name Found: [User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}]
[INFO ] 2019-04-25 18:39:47.219 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-25 18:39:47.220 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-04-25 18:39:47.221 [main] GenericDao - **********Attempting to insert a Entity: User{userId='0', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-25 18:39:47.227 [main] GenericDao - **********Entity inserted: User{userId='253', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-25 18:39:47.228 [main] GenericDao - **********Query database by using an ID: 253, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:39:47.233 [main] GenericDao - **********Query by ID Found: User{userId='253', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-25 18:40:57.400 [http-nio-8080-exec-7] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:41:04.341 [http-nio-8080-exec-7] GenericDao - **********Query by Last Name Found: [User{userId='9', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='AdminMan'}]
[INFO ] 2019-04-25 18:41:04.341 [http-nio-8080-exec-7] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-04-25 18:52:30.722 [http-nio-8080-exec-6] GenericDao - **********Query Using Last Name:  week 1, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:52:30.794 [http-nio-8080-exec-6] GenericDao - **********Query by Last Name Found: []
[INFO ] 2019-04-25 18:53:24.708 [http-nio-8080-exec-8] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-04-25 18:53:24.775 [http-nio-8080-exec-8] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 3, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 3, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 5, grocerylistName= Week 5, ingredientId= 3, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 6, grocerylistName= Week 6, ingredientId= 3, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 8, grocerylistName= Week 1, ingredientId= 2, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 9, grocerylistName= Week 1, ingredientId= 3, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-25 18:57:05.521 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-25 18:57:05.531 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-04-25 18:57:05.531 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-04-25 18:57:08.150 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 5, grocerylistName= Week 5, ingredientId= 3, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 6, grocerylistName= Week 2, ingredientId= 3, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 8, grocerylistName= Week 2, ingredientId= 2, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 9, grocerylistName= Week 3, ingredientId= 3, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-25 18:57:08.302 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-25 18:57:08.302 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-04-25 18:57:08.302 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-04-25 18:57:08.369 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-25 18:57:08.370 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-25 18:57:08.456 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-25 18:57:08.457 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-04-25 18:57:08.457 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-25 18:57:08.494 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 18:57:08.494 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 18:57:08.495 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-25 18:57:08.510 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 18:57:08.510 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 18:57:08.528 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 18:57:08.551 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-25 18:57:08.558 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-25 18:57:08.600 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-25 18:57:08.601 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-25 18:57:08.601 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-25 18:57:08.620 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=7, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Braised Pork Belly', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 18:57:08.666 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-25 18:57:08.666 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-04-25 18:57:08.667 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:57:08.683 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-25 18:57:08.683 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:57:08.694 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-25 18:57:08.694 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-25 18:57:08.694 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:57:08.705 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-25 18:57:08.705 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-25T18:57:08.667}
[INFO ] 2019-04-25 18:57:08.728 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId=206, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-25T18:57:08.667}
[INFO ] 2019-04-25 18:57:08.729 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId=206, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-25T18:57:08.667}
[INFO ] 2019-04-25 18:57:08.776 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-25 18:57:08.777 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-04-25 18:57:08.777 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:57:08.806 [main] GenericDao - **********Query by Last Name Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}]
[INFO ] 2019-04-25 18:57:08.806 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-25 18:57:08.829 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-25 18:57:08.830 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-25 18:57:08.885 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-25 18:57:08.886 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-25 18:57:08.898 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-25 18:57:08.938 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-25 18:57:08.938 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-04-25 18:57:08.939 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-25 18:57:08.989 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=4, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Swedish Meatballs', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=6, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Lamb Shank', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=7, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Braised Pork Belly', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=8, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Beef Wellington', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=9, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pad Thai', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Bibimbap', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=11, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Fried Chicken', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-25 18:57:09.034 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-25 18:57:09.035 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-04-25 18:57:09.036 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:57:09.049 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-25 18:57:09.049 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-25T18:57:09.035}
[INFO ] 2019-04-25 18:57:09.050 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-25T18:57:09.035}
[INFO ] 2019-04-25 18:57:09.059 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId=207, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-25T18:57:09.035}
[INFO ] 2019-04-25 18:57:09.059 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-04-25 18:57:09.059 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-04-25 18:57:09.080 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=8, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Beef Wellington', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=9, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pad Thai', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=207, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-25T18:57:09}]
[INFO ] 2019-04-25 18:57:09.080 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-04-25 18:57:09.080 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-04-25 18:57:09.092 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Bibimbap', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=11, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Fried Chicken', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-25 18:57:09.093 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Macaroni and Cheese', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 18:57:09.103 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Macaroni and Cheese', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 18:57:09.155 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-25 18:57:09.155 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-04-25 18:57:09.155 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:57:09.160 [main] GenericDao - **********Query by ID Found: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-25 18:57:09.160 [main] GenericDao - **********Attempting to delete: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-25 18:57:09.162 [main] GenericDao - **********Successfully deleted: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-25 18:57:09.166 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:57:09.170 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-25 18:57:09.212 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-25 18:57:09.212 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-25 18:57:09.213 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:57:09.222 [main] GenericDao - **********Query by ID Found: User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}
[INFO ] 2019-04-25 18:57:09.267 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-25 18:57:09.267 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-04-25 18:57:09.268 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:57:09.337 [main] GenericDao - **********Get All Query Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}, User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}]
[INFO ] 2019-04-25 18:57:09.378 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-25 18:57:09.378 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-04-25 18:57:09.378 [main] UserTest - -------Locale date time: 2019-04-25T18:57:09.378----------
[INFO ] 2019-04-25 18:57:09.379 [main] GenericDao - **********Attempting to insert a Entity: User{userId='0', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-25 18:57:09.391 [main] GenericDao - **********Entity inserted: User{userId='254', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-25 18:57:09.391 [main] GenericDao - **********Query database by using an ID: 254, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:57:09.398 [main] GenericDao - **********Query by ID Found: User{userId='254', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-25 18:57:09.441 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-25 18:57:09.442 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-04-25 18:57:09.443 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId='0', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-25 18:57:09.448 [main] GenericDao - **********Saved|Updated entity: User{userId='255', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-25 18:57:09.449 [main] GenericDao - **********Query database by using an ID: 255, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:57:09.453 [main] GenericDao - **********Query by ID Found: User{userId='255', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-25 18:57:09.453 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:57:09.463 [main] GenericDao - **********Query by ID Found: User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}
[INFO ] 2019-04-25 18:57:09.464 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-04-25 18:57:09.464 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-25 18:57:09.472 [main] GenericDao - **********Saved|Updated entity: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-25 18:57:09.473 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:57:09.483 [main] GenericDao - **********Query by ID Found: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-25 18:57:09.517 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-25 18:57:09.517 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-04-25 18:57:09.517 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:57:09.531 [main] GenericDao - **********Query by Last Name Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}]
[INFO ] 2019-04-25 18:57:09.532 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:57:09.554 [main] GenericDao - **********Query by Last Name Found: [User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}]
[INFO ] 2019-04-25 18:57:09.596 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-25 18:57:09.596 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-04-25 18:57:09.597 [main] GenericDao - **********Attempting to insert a Entity: User{userId='0', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-25 18:57:09.601 [main] GenericDao - **********Entity inserted: User{userId='256', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-25 18:57:09.601 [main] GenericDao - **********Query database by using an ID: 256, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 18:57:09.606 [main] GenericDao - **********Query by ID Found: User{userId='256', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-25 19:03:55.915 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-25 19:03:55.924 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-04-25 19:03:55.925 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-04-25 19:03:58.477 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 5, grocerylistName= Week 5, ingredientId= 3, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 6, grocerylistName= Week 2, ingredientId= 3, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 8, grocerylistName= Week 2, ingredientId= 2, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 9, grocerylistName= Week 3, ingredientId= 3, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-25 19:03:58.602 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-25 19:03:58.603 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-04-25 19:03:58.603 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-04-25 19:03:58.675 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-25 19:03:58.675 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-25 19:03:58.758 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-25 19:03:58.758 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-04-25 19:03:58.758 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-25 19:03:58.796 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 19:03:58.797 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 19:03:58.797 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-25 19:03:58.812 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 19:03:58.812 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 19:03:58.831 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 19:03:58.853 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-25 19:03:58.858 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-25 19:03:58.908 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-25 19:03:58.909 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-25 19:03:58.909 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-25 19:03:58.927 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=7, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Braised Pork Belly', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 19:03:58.969 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-25 19:03:58.969 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-04-25 19:03:58.970 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 19:03:58.987 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-25 19:03:58.987 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 19:03:58.998 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-25 19:03:58.998 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-25 19:03:58.999 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 19:03:59.015 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-25 19:03:59.016 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-25T19:03:58.970}
[INFO ] 2019-04-25 19:03:59.046 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId=209, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-25T19:03:58.970}
[INFO ] 2019-04-25 19:03:59.046 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId=209, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-25T19:03:58.970}
[INFO ] 2019-04-25 19:03:59.092 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-25 19:03:59.093 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-04-25 19:03:59.094 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 19:03:59.123 [main] GenericDao - **********Query by Last Name Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}]
[INFO ] 2019-04-25 19:03:59.124 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-25 19:03:59.145 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-25 19:03:59.145 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-25 19:03:59.190 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-25 19:03:59.190 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-25 19:03:59.200 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-25 19:03:59.245 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-25 19:03:59.246 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-04-25 19:03:59.246 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-25 19:03:59.297 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=4, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Swedish Meatballs', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=6, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Lamb Shank', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=7, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Braised Pork Belly', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=8, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Beef Wellington', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=9, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pad Thai', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Bibimbap', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=11, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Fried Chicken', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-25 19:03:59.339 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-25 19:03:59.339 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-04-25 19:03:59.339 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 19:03:59.353 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-25 19:03:59.354 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-25T19:03:59.339}
[INFO ] 2019-04-25 19:03:59.354 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-25T19:03:59.339}
[INFO ] 2019-04-25 19:03:59.363 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId=210, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-25T19:03:59.339}
[INFO ] 2019-04-25 19:03:59.364 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-04-25 19:03:59.364 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-04-25 19:03:59.382 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=8, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Beef Wellington', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=9, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pad Thai', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=210, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-25T19:03:59}]
[INFO ] 2019-04-25 19:03:59.382 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-04-25 19:03:59.382 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-04-25 19:03:59.396 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Bibimbap', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=11, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Fried Chicken', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-25 19:03:59.396 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Macaroni and Cheese', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 19:03:59.404 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Macaroni and Cheese', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-25 19:03:59.456 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-25 19:03:59.456 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-04-25 19:03:59.456 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 19:03:59.463 [main] GenericDao - **********Query by ID Found: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-25 19:03:59.463 [main] GenericDao - **********Attempting to delete: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-25 19:03:59.465 [main] GenericDao - **********Successfully deleted: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-25 19:03:59.470 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 19:03:59.474 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-25 19:03:59.525 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-25 19:03:59.525 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-25 19:03:59.525 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 19:03:59.535 [main] GenericDao - **********Query by ID Found: User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}
[INFO ] 2019-04-25 19:03:59.577 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-25 19:03:59.577 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-04-25 19:03:59.578 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-04-25 19:03:59.641 [main] GenericDao - **********Get All Query Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}, User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}]
[INFO ] 2019-04-25 19:03:59.685 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-25 19:03:59.686 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-04-25 19:03:59.686 [main] UserTest - -------Locale date time: 2019-04-25T19:03:59.686----------
[INFO ] 2019-04-25 19:03:59.686 [main] GenericDao - **********Attempting to insert a Entity: User{userId='0', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-25 19:03:59.699 [main] GenericDao - **********Entity inserted: User{userId='257', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-25 19:03:59.699 [main] GenericDao - **********Query database by using an ID: 257, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 19:03:59.706 [main] GenericDao - **********Query by ID Found: User{userId='257', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-25 19:03:59.746 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-25 19:03:59.747 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-04-25 19:03:59.747 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId='0', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-25 19:03:59.755 [main] GenericDao - **********Saved|Updated entity: User{userId='258', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-25 19:03:59.755 [main] GenericDao - **********Query database by using an ID: 258, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 19:03:59.759 [main] GenericDao - **********Query by ID Found: User{userId='258', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-25 19:03:59.759 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 19:03:59.767 [main] GenericDao - **********Query by ID Found: User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}
[INFO ] 2019-04-25 19:03:59.768 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-04-25 19:03:59.768 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-25 19:03:59.779 [main] GenericDao - **********Saved|Updated entity: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-25 19:03:59.780 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 19:03:59.789 [main] GenericDao - **********Query by ID Found: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-25 19:03:59.829 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-25 19:03:59.829 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-04-25 19:03:59.829 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 19:03:59.841 [main] GenericDao - **********Query by Last Name Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}]
[INFO ] 2019-04-25 19:03:59.841 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 19:03:59.860 [main] GenericDao - **********Query by Last Name Found: [User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}]
[INFO ] 2019-04-25 19:03:59.892 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-25 19:03:59.892 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-04-25 19:03:59.892 [main] GenericDao - **********Attempting to insert a Entity: User{userId='0', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-25 19:03:59.898 [main] GenericDao - **********Entity inserted: User{userId='259', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-25 19:03:59.899 [main] GenericDao - **********Query database by using an ID: 259, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 19:03:59.905 [main] GenericDao - **********Query by ID Found: User{userId='259', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-25 19:04:33.983 [http-nio-8080-exec-5] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-04-25 19:04:38.801 [http-nio-8080-exec-5] GenericDao - **********Query by Last Name Found: [User{userId='9', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='AdminMan'}]
[INFO ] 2019-04-25 19:04:38.802 [http-nio-8080-exec-5] GenericDao - **********Querying grocery list by user id: 9
[INFO ] 2019-04-29 18:28:15.356 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-29 18:28:15.372 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-04-29 18:28:15.373 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-04-29 18:28:19.227 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 5, grocerylistName= Week 5, ingredientId= 3, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 6, grocerylistName= Week 2, ingredientId= 3, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 8, grocerylistName= Week 2, ingredientId= 2, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 9, grocerylistName= Week 3, ingredientId= 3, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-29 18:28:19.340 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-29 18:28:19.341 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-04-29 18:28:19.341 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-04-29 18:28:19.469 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-29 18:28:19.470 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-29 18:28:19.629 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-29 18:28:19.631 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-04-29 18:28:19.632 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-29 18:28:19.697 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-29 18:28:19.697 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-29 18:28:19.697 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-29 18:28:19.729 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-29 18:28:19.730 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-29 18:28:19.786 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-29 18:28:19.857 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-29 18:28:19.863 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-29 18:28:19.920 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-29 18:28:19.921 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-29 18:28:19.923 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-29 18:28:19.963 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=7, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Braised Pork Belly', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-29 18:28:20.030 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-29 18:28:20.030 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-04-29 18:28:20.032 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-29 18:28:20.059 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-29 18:28:20.060 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-29 18:28:20.072 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-29 18:28:20.072 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-29 18:28:20.072 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-29 18:28:20.085 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-29 18:28:20.085 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-29T18:28:20.031}
[INFO ] 2019-04-29 18:28:20.145 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId=212, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-29T18:28:20.031}
[INFO ] 2019-04-29 18:28:20.146 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId=212, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-29T18:28:20.031}
[INFO ] 2019-04-29 18:28:20.226 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-29 18:28:20.227 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-04-29 18:28:20.227 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-29 18:28:20.253 [main] GenericDao - **********Query by Last Name Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}]
[INFO ] 2019-04-29 18:28:20.253 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-29 18:28:20.284 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-29 18:28:20.284 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-29 18:28:20.373 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-29 18:28:20.373 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-29 18:28:20.393 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-29 18:28:20.459 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-29 18:28:20.460 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-04-29 18:28:20.460 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-29 18:28:20.518 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=4, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Swedish Meatballs', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=6, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Lamb Shank', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=7, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Braised Pork Belly', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=8, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Beef Wellington', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=9, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pad Thai', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Bibimbap', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=11, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Fried Chicken', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-29 18:28:20.631 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-29 18:28:20.633 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-04-29 18:28:20.634 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-29 18:28:20.645 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-29 18:28:20.646 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-29T18:28:20.634}
[INFO ] 2019-04-29 18:28:20.646 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-29T18:28:20.634}
[INFO ] 2019-04-29 18:28:20.657 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId=213, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-29T18:28:20.634}
[INFO ] 2019-04-29 18:28:20.657 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-04-29 18:28:20.657 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-04-29 18:28:20.684 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=8, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Beef Wellington', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=9, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pad Thai', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=213, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-29T18:28:21}]
[INFO ] 2019-04-29 18:28:20.684 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-04-29 18:28:20.685 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-04-29 18:28:20.700 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Bibimbap', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=11, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Fried Chicken', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-29 18:28:20.701 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Macaroni and Cheese', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-29 18:28:20.715 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Macaroni and Cheese', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-29 18:28:20.829 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-29 18:28:20.831 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-04-29 18:28:20.832 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-29 18:28:20.838 [main] GenericDao - **********Query by ID Found: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-29 18:28:20.839 [main] GenericDao - **********Attempting to delete: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-29 18:28:20.840 [main] GenericDao - **********Successfully deleted: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-29 18:28:20.846 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-29 18:28:20.850 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-29 18:28:20.931 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-29 18:28:20.931 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-29 18:28:20.931 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-04-29 18:28:20.948 [main] GenericDao - **********Query by ID Found: User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}
[INFO ] 2019-04-29 18:28:21.019 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-29 18:28:21.020 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-04-29 18:28:21.020 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-04-29 18:28:21.130 [main] GenericDao - **********Get All Query Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}, User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}]
[INFO ] 2019-04-29 18:28:21.221 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-29 18:28:21.222 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-04-29 18:28:21.223 [main] UserTest - -------Locale date time: 2019-04-29T18:28:21.223----------
[INFO ] 2019-04-29 18:28:21.223 [main] GenericDao - **********Attempting to insert a Entity: User{userId='0', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-29 18:28:21.241 [main] GenericDao - **********Entity inserted: User{userId='260', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-29 18:28:21.241 [main] GenericDao - **********Query database by using an ID: 260, of Type: class edu.matc.entity.User
[INFO ] 2019-04-29 18:28:21.250 [main] GenericDao - **********Query by ID Found: User{userId='260', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-29 18:28:21.315 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-29 18:28:21.316 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-04-29 18:28:21.316 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId='0', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-29 18:28:21.324 [main] GenericDao - **********Saved|Updated entity: User{userId='261', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-29 18:28:21.325 [main] GenericDao - **********Query database by using an ID: 261, of Type: class edu.matc.entity.User
[INFO ] 2019-04-29 18:28:21.331 [main] GenericDao - **********Query by ID Found: User{userId='261', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-29 18:28:21.331 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-29 18:28:21.339 [main] GenericDao - **********Query by ID Found: User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}
[INFO ] 2019-04-29 18:28:21.339 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-04-29 18:28:21.339 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-29 18:28:21.350 [main] GenericDao - **********Saved|Updated entity: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-29 18:28:21.350 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-29 18:28:21.362 [main] GenericDao - **********Query by ID Found: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-29 18:28:21.418 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-29 18:28:21.419 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-04-29 18:28:21.419 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-29 18:28:21.445 [main] GenericDao - **********Query by Last Name Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}]
[INFO ] 2019-04-29 18:28:21.446 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-04-29 18:28:21.488 [main] GenericDao - **********Query by Last Name Found: [User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}]
[INFO ] 2019-04-29 18:28:21.541 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-29 18:28:21.541 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-04-29 18:28:21.541 [main] GenericDao - **********Attempting to insert a Entity: User{userId='0', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-29 18:28:21.547 [main] GenericDao - **********Entity inserted: User{userId='262', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-29 18:28:21.548 [main] GenericDao - **********Query database by using an ID: 262, of Type: class edu.matc.entity.User
[INFO ] 2019-04-29 18:28:21.552 [main] GenericDao - **********Query by ID Found: User{userId='262', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-29 18:29:30.890 [http-nio-8080-exec-2] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-04-29 18:29:36.190 [http-nio-8080-exec-2] GenericDao - **********Query by Last Name Found: [User{userId='9', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='AdminMan'}]
[INFO ] 2019-04-29 18:29:36.190 [http-nio-8080-exec-2] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-04-29 18:29:36.233 [http-nio-8080-exec-2] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=2, user=User{userId='9', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='AdminMan'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=3, user=User{userId='9', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='AdminMan'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-29 18:29:36.234 [http-nio-8080-exec-2] SearchRecipes - Recipe Info: [UserRecipes{recipeId=2, user=User{userId='9', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='AdminMan'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=3, user=User{userId='9', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='AdminMan'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-29 18:40:12.277 [http-nio-8080-exec-2] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-04-29 18:40:12.303 [http-nio-8080-exec-2] GenericDao - **********Query by Last Name Found: [User{userId='9', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='AdminMan'}]
[INFO ] 2019-04-29 18:47:20.827 [http-nio-8080-exec-8] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-04-29 18:47:20.851 [http-nio-8080-exec-8] GenericDao - **********Query by Last Name Found: [User{userId='9', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='AdminMan'}]
[INFO ] 2019-04-29 18:47:20.851 [http-nio-8080-exec-8] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-04-29 18:47:20.866 [http-nio-8080-exec-8] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=2, user=User{userId='9', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='AdminMan'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=3, user=User{userId='9', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='AdminMan'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-29 18:47:20.866 [http-nio-8080-exec-8] SearchRecipes - Recipe Info: [UserRecipes{recipeId=2, user=User{userId='9', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='AdminMan'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=3, user=User{userId='9', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='AdminMan'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-29 18:47:32.890 [http-nio-8080-exec-2] GenericDao - **********Query Using Last Name:  week 1, of Type: class edu.matc.entity.User
[INFO ] 2019-04-29 18:47:32.896 [http-nio-8080-exec-2] GenericDao - **********Query by Last Name Found: []
[INFO ] 2019-04-30 16:32:32.741 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-30 16:32:32.757 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-04-30 16:32:32.758 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-04-30 16:32:36.431 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 5, grocerylistName= Week 5, ingredientId= 3, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 6, grocerylistName= Week 2, ingredientId= 3, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 8, grocerylistName= Week 2, ingredientId= 2, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 9, grocerylistName= Week 3, ingredientId= 3, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-30 16:32:36.519 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-30 16:32:36.520 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-04-30 16:32:36.520 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-04-30 16:32:36.620 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-30 16:32:36.621 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-30 16:32:36.776 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:32:36.776 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-04-30 16:32:36.777 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 16:32:36.831 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:32:36.832 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:32:36.832 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 16:32:36.848 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:32:36.848 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:32:36.871 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:32:36.916 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 16:32:36.920 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-30 16:32:36.975 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:32:36.975 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-30 16:32:36.975 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 16:32:36.996 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=7, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Braised Pork Belly', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:32:37.054 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:32:37.055 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-04-30 16:32:37.056 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:32:37.068 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 16:32:37.069 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:32:37.082 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 16:32:37.083 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 16:32:37.083 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:32:37.096 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 16:32:37.097 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-30T16:32:37.056}
[INFO ] 2019-04-30 16:32:37.122 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId=215, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-30T16:32:37.056}
[INFO ] 2019-04-30 16:32:37.123 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId=215, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-30T16:32:37.056}
[INFO ] 2019-04-30 16:32:37.173 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:32:37.174 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-04-30 16:32:37.174 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:32:37.199 [main] GenericDao - **********Query by Last Name Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}]
[INFO ] 2019-04-30 16:32:37.202 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-30 16:32:37.235 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 16:32:37.235 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 16:32:37.301 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:32:37.302 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-30 16:32:37.322 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 16:32:37.368 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:32:37.369 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-04-30 16:32:37.369 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 16:32:37.431 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=4, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Swedish Meatballs', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=6, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Lamb Shank', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=7, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Braised Pork Belly', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=8, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Beef Wellington', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=9, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pad Thai', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Bibimbap', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=11, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Fried Chicken', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 16:32:37.480 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:32:37.481 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-04-30 16:32:37.481 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:32:37.489 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 16:32:37.489 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-30T16:32:37.481}
[INFO ] 2019-04-30 16:32:37.490 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-30T16:32:37.481}
[INFO ] 2019-04-30 16:32:37.497 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId=216, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-30T16:32:37.481}
[INFO ] 2019-04-30 16:32:37.497 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-04-30 16:32:37.497 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-04-30 16:32:37.543 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=8, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Beef Wellington', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=9, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pad Thai', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=216, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-30T16:32:37}]
[INFO ] 2019-04-30 16:32:37.543 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-04-30 16:32:37.543 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-04-30 16:32:37.560 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Bibimbap', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=11, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Fried Chicken', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 16:32:37.560 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Macaroni and Cheese', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:32:37.577 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Macaroni and Cheese', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:32:37.657 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:32:37.658 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-04-30 16:32:37.658 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:32:37.665 [main] GenericDao - **********Query by ID Found: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-30 16:32:37.665 [main] GenericDao - **********Attempting to delete: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-30 16:32:37.670 [main] GenericDao - **********Successfully deleted: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-30 16:32:37.676 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:32:37.680 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-30 16:32:37.722 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:32:37.741 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-30 16:32:37.742 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:32:37.754 [main] GenericDao - **********Query by ID Found: User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}
[INFO ] 2019-04-30 16:32:37.798 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:32:37.801 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-04-30 16:32:37.801 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:32:37.896 [main] GenericDao - **********Get All Query Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}, User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}]
[INFO ] 2019-04-30 16:32:37.956 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:32:37.957 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-04-30 16:32:37.958 [main] UserTest - -------Locale date time: 2019-04-30T16:32:37.958----------
[INFO ] 2019-04-30 16:32:37.958 [main] GenericDao - **********Attempting to insert a Entity: User{userId='0', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-30 16:32:37.977 [main] GenericDao - **********Entity inserted: User{userId='263', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-30 16:32:37.977 [main] GenericDao - **********Query database by using an ID: 263, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:32:37.985 [main] GenericDao - **********Query by ID Found: User{userId='263', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-30 16:32:38.050 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:32:38.051 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-04-30 16:32:38.052 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId='0', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-30 16:32:38.068 [main] GenericDao - **********Saved|Updated entity: User{userId='264', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-30 16:32:38.069 [main] GenericDao - **********Query database by using an ID: 264, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:32:38.078 [main] GenericDao - **********Query by ID Found: User{userId='264', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-30 16:32:38.078 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:32:38.088 [main] GenericDao - **********Query by ID Found: User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}
[INFO ] 2019-04-30 16:32:38.088 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-04-30 16:32:38.089 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-30 16:32:38.102 [main] GenericDao - **********Saved|Updated entity: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-30 16:32:38.102 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:32:38.114 [main] GenericDao - **********Query by ID Found: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-30 16:32:38.151 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:32:38.151 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-04-30 16:32:38.152 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:32:38.167 [main] GenericDao - **********Query by Last Name Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}]
[INFO ] 2019-04-30 16:32:38.167 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:32:38.203 [main] GenericDao - **********Query by Last Name Found: [User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}]
[INFO ] 2019-04-30 16:32:38.256 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:32:38.257 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-04-30 16:32:38.257 [main] GenericDao - **********Attempting to insert a Entity: User{userId='0', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-30 16:32:38.264 [main] GenericDao - **********Entity inserted: User{userId='265', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-30 16:32:38.264 [main] GenericDao - **********Query database by using an ID: 265, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:32:38.273 [main] GenericDao - **********Query by ID Found: User{userId='265', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-30 16:34:55.104 [http-nio-8080-exec-6] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:35:00.897 [http-nio-8080-exec-6] GenericDao - **********Query by Last Name Found: [User{userId='9', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='AdminMan'}]
[INFO ] 2019-04-30 16:35:00.898 [http-nio-8080-exec-6] GenericDao - **********Querying grocery list by user id: 9
[INFO ] 2019-04-30 16:35:58.432 [http-nio-8080-exec-8] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-04-30 16:35:58.502 [http-nio-8080-exec-8] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 3, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 3, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 5, grocerylistName= Week 5, ingredientId= 3, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 6, grocerylistName= Week 6, ingredientId= 3, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 8, grocerylistName= Week 1, ingredientId= 2, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 9, grocerylistName= Week 1, ingredientId= 3, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-30 16:38:19.648 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-30 16:38:19.657 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-04-30 16:38:19.657 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-04-30 16:38:22.288 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 5, grocerylistName= Week 5, ingredientId= 3, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 6, grocerylistName= Week 2, ingredientId= 3, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 8, grocerylistName= Week 2, ingredientId= 2, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 9, grocerylistName= Week 3, ingredientId= 3, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-30 16:38:22.424 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-30 16:38:22.425 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-04-30 16:38:22.426 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-04-30 16:38:22.492 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-30 16:38:22.492 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-30 16:38:22.583 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:38:22.584 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-04-30 16:38:22.584 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 16:38:22.623 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:38:22.624 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:38:22.624 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 16:38:22.640 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:38:22.641 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:38:22.659 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:38:22.702 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 16:38:22.708 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-30 16:38:22.752 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:38:22.753 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-30 16:38:22.753 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 16:38:22.772 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=7, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Braised Pork Belly', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:38:22.819 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:38:22.820 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-04-30 16:38:22.822 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:38:22.838 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 16:38:22.838 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:38:22.850 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 16:38:22.850 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 16:38:22.850 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:38:22.863 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 16:38:22.864 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-30T16:38:22.822}
[INFO ] 2019-04-30 16:38:22.891 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId=218, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-30T16:38:22.822}
[INFO ] 2019-04-30 16:38:22.892 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId=218, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-30T16:38:22.822}
[INFO ] 2019-04-30 16:38:22.939 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:38:22.939 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-04-30 16:38:22.939 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:38:22.971 [main] GenericDao - **********Query by Last Name Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}]
[INFO ] 2019-04-30 16:38:22.972 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-30 16:38:22.998 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 16:38:22.999 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 16:38:23.047 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:38:23.049 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-30 16:38:23.068 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 16:38:23.110 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:38:23.111 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-04-30 16:38:23.112 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 16:38:23.173 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=4, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Swedish Meatballs', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=6, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Lamb Shank', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=7, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Braised Pork Belly', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=8, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Beef Wellington', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=9, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pad Thai', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Bibimbap', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=11, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Fried Chicken', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 16:38:23.224 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:38:23.225 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-04-30 16:38:23.225 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:38:23.235 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 16:38:23.236 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-30T16:38:23.225}
[INFO ] 2019-04-30 16:38:23.236 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-30T16:38:23.225}
[INFO ] 2019-04-30 16:38:23.244 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId=219, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-30T16:38:23.225}
[INFO ] 2019-04-30 16:38:23.244 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-04-30 16:38:23.245 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-04-30 16:38:23.264 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=8, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Beef Wellington', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=9, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pad Thai', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=219, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-30T16:38:23}]
[INFO ] 2019-04-30 16:38:23.265 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-04-30 16:38:23.265 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-04-30 16:38:23.281 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Bibimbap', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=11, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Fried Chicken', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 16:38:23.281 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Macaroni and Cheese', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:38:23.290 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Macaroni and Cheese', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:38:23.384 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:38:23.384 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-04-30 16:38:23.384 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:38:23.391 [main] GenericDao - **********Query by ID Found: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-30 16:38:23.392 [main] GenericDao - **********Attempting to delete: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-30 16:38:23.393 [main] GenericDao - **********Successfully deleted: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-30 16:38:23.398 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:38:23.402 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-30 16:38:23.444 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:38:23.445 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-30 16:38:23.445 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:38:23.452 [main] GenericDao - **********Query by ID Found: User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}
[INFO ] 2019-04-30 16:38:23.494 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:38:23.495 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-04-30 16:38:23.495 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:38:23.567 [main] GenericDao - **********Get All Query Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}, User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}]
[INFO ] 2019-04-30 16:38:23.605 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:38:23.606 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-04-30 16:38:23.606 [main] UserTest - -------Locale date time: 2019-04-30T16:38:23.606----------
[INFO ] 2019-04-30 16:38:23.606 [main] GenericDao - **********Attempting to insert a Entity: User{userId='0', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-30 16:38:23.619 [main] GenericDao - **********Entity inserted: User{userId='266', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-30 16:38:23.621 [main] GenericDao - **********Query database by using an ID: 266, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:38:23.631 [main] GenericDao - **********Query by ID Found: User{userId='266', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-30 16:38:23.667 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:38:23.667 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-04-30 16:38:23.667 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId='0', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-30 16:38:23.674 [main] GenericDao - **********Saved|Updated entity: User{userId='267', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-30 16:38:23.675 [main] GenericDao - **********Query database by using an ID: 267, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:38:23.680 [main] GenericDao - **********Query by ID Found: User{userId='267', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-30 16:38:23.680 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:38:23.689 [main] GenericDao - **********Query by ID Found: User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}
[INFO ] 2019-04-30 16:38:23.689 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-04-30 16:38:23.690 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-30 16:38:23.699 [main] GenericDao - **********Saved|Updated entity: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-30 16:38:23.699 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:38:23.709 [main] GenericDao - **********Query by ID Found: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-30 16:38:23.758 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:38:23.758 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-04-30 16:38:23.759 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:38:23.776 [main] GenericDao - **********Query by Last Name Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}]
[INFO ] 2019-04-30 16:38:23.777 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:38:23.805 [main] GenericDao - **********Query by Last Name Found: [User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}]
[INFO ] 2019-04-30 16:38:23.848 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:38:23.849 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-04-30 16:38:23.849 [main] GenericDao - **********Attempting to insert a Entity: User{userId='0', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-30 16:38:23.858 [main] GenericDao - **********Entity inserted: User{userId='268', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-30 16:38:23.859 [main] GenericDao - **********Query database by using an ID: 268, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:38:23.862 [main] GenericDao - **********Query by ID Found: User{userId='268', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-30 16:40:24.439 [http-nio-8080-exec-7] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:40:31.084 [http-nio-8080-exec-7] GenericDao - **********Query by Last Name Found: [User{userId='9', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='AdminMan'}]
[INFO ] 2019-04-30 16:40:31.084 [http-nio-8080-exec-7] GenericDao - **********Querying grocery list by user id: 9
[INFO ] 2019-04-30 16:43:20.327 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-30 16:43:20.337 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-04-30 16:43:20.338 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-04-30 16:43:22.960 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 5, grocerylistName= Week 5, ingredientId= 3, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 6, grocerylistName= Week 2, ingredientId= 3, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 8, grocerylistName= Week 2, ingredientId= 2, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 9, grocerylistName= Week 3, ingredientId= 3, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-30 16:43:23.102 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-30 16:43:23.103 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-04-30 16:43:23.104 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-04-30 16:43:23.170 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-30 16:43:23.171 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-30 16:43:23.261 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:43:23.262 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-04-30 16:43:23.262 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 16:43:23.300 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:43:23.300 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:43:23.300 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 16:43:23.321 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:43:23.321 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:43:23.338 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:43:23.381 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 16:43:23.387 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-30 16:43:23.439 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:43:23.440 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-30 16:43:23.440 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 16:43:23.462 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=7, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Braised Pork Belly', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:43:23.523 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:43:23.524 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-04-30 16:43:23.525 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:43:23.538 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 16:43:23.538 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:43:23.549 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 16:43:23.549 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 16:43:23.550 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:43:23.565 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 16:43:23.566 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-30T16:43:23.525}
[INFO ] 2019-04-30 16:43:23.599 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId=221, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-30T16:43:23.525}
[INFO ] 2019-04-30 16:43:23.600 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId=221, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-30T16:43:23.525}
[INFO ] 2019-04-30 16:43:23.649 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:43:23.650 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-04-30 16:43:23.650 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:43:23.676 [main] GenericDao - **********Query by Last Name Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}]
[INFO ] 2019-04-30 16:43:23.676 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-30 16:43:23.699 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 16:43:23.700 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 16:43:23.749 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:43:23.750 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-30 16:43:23.761 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 16:43:23.803 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:43:23.804 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-04-30 16:43:23.804 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 16:43:23.869 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=4, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Swedish Meatballs', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=6, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Lamb Shank', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=7, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Braised Pork Belly', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=8, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Beef Wellington', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=9, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pad Thai', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Bibimbap', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=11, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Fried Chicken', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 16:43:23.920 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:43:23.921 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-04-30 16:43:23.921 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:43:23.932 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 16:43:23.932 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-30T16:43:23.921}
[INFO ] 2019-04-30 16:43:23.932 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-30T16:43:23.921}
[INFO ] 2019-04-30 16:43:23.941 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId=222, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-30T16:43:23.921}
[INFO ] 2019-04-30 16:43:23.941 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-04-30 16:43:23.941 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-04-30 16:43:23.963 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=8, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Beef Wellington', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=9, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pad Thai', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=222, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-30T16:43:24}]
[INFO ] 2019-04-30 16:43:23.964 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-04-30 16:43:23.964 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-04-30 16:43:23.978 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Bibimbap', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=11, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Fried Chicken', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 16:43:23.979 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Macaroni and Cheese', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:43:23.991 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Macaroni and Cheese', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:43:24.046 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:43:24.047 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-04-30 16:43:24.048 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:43:24.054 [main] GenericDao - **********Query by ID Found: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-30 16:43:24.054 [main] GenericDao - **********Attempting to delete: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-30 16:43:24.056 [main] GenericDao - **********Successfully deleted: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-30 16:43:24.068 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:43:24.073 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-30 16:43:24.118 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:43:24.120 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-30 16:43:24.120 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:43:24.134 [main] GenericDao - **********Query by ID Found: User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}
[INFO ] 2019-04-30 16:43:24.175 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:43:24.175 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-04-30 16:43:24.175 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:43:24.246 [main] GenericDao - **********Get All Query Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}, User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}]
[INFO ] 2019-04-30 16:43:24.287 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:43:24.288 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-04-30 16:43:24.288 [main] UserTest - -------Locale date time: 2019-04-30T16:43:24.288----------
[INFO ] 2019-04-30 16:43:24.289 [main] GenericDao - **********Attempting to insert a Entity: User{userId='0', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-30 16:43:24.302 [main] GenericDao - **********Entity inserted: User{userId='269', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-30 16:43:24.302 [main] GenericDao - **********Query database by using an ID: 269, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:43:24.308 [main] GenericDao - **********Query by ID Found: User{userId='269', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-30 16:43:24.341 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:43:24.341 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-04-30 16:43:24.341 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId='0', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-30 16:43:24.347 [main] GenericDao - **********Saved|Updated entity: User{userId='270', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-30 16:43:24.347 [main] GenericDao - **********Query database by using an ID: 270, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:43:24.351 [main] GenericDao - **********Query by ID Found: User{userId='270', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-30 16:43:24.353 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:43:24.362 [main] GenericDao - **********Query by ID Found: User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}
[INFO ] 2019-04-30 16:43:24.362 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-04-30 16:43:24.362 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-30 16:43:24.370 [main] GenericDao - **********Saved|Updated entity: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-30 16:43:24.370 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:43:24.379 [main] GenericDao - **********Query by ID Found: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-30 16:43:24.418 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:43:24.419 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-04-30 16:43:24.419 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:43:24.436 [main] GenericDao - **********Query by Last Name Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}]
[INFO ] 2019-04-30 16:43:24.437 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:43:24.459 [main] GenericDao - **********Query by Last Name Found: [User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}]
[INFO ] 2019-04-30 16:43:24.504 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:43:24.505 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-04-30 16:43:24.507 [main] GenericDao - **********Attempting to insert a Entity: User{userId='0', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-30 16:43:24.516 [main] GenericDao - **********Entity inserted: User{userId='271', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-30 16:43:24.516 [main] GenericDao - **********Query database by using an ID: 271, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:43:24.520 [main] GenericDao - **********Query by ID Found: User{userId='271', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-30 16:44:05.145 [http-nio-8080-exec-7] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:44:09.944 [http-nio-8080-exec-7] GenericDao - **********Query by Last Name Found: [User{userId='9', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='AdminMan'}]
[INFO ] 2019-04-30 16:44:09.944 [http-nio-8080-exec-7] GenericDao - **********Querying grocery list by user id: 9
[INFO ] 2019-04-30 16:46:50.770 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-30 16:46:50.782 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-04-30 16:46:50.782 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-04-30 16:46:53.481 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 5, grocerylistName= Week 5, ingredientId= 3, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 6, grocerylistName= Week 2, ingredientId= 3, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 8, grocerylistName= Week 2, ingredientId= 2, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 9, grocerylistName= Week 3, ingredientId= 3, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-30 16:46:53.548 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-30 16:46:53.549 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-04-30 16:46:53.549 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-04-30 16:46:53.618 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-30 16:46:53.618 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-30 16:46:53.734 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:46:53.735 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-04-30 16:46:53.735 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 16:46:53.778 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:46:53.778 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:46:53.778 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 16:46:53.794 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:46:53.795 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:46:53.817 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:46:53.856 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 16:46:53.861 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-30 16:46:53.917 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:46:53.918 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-30 16:46:53.918 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 16:46:53.942 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=7, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Braised Pork Belly', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:46:53.993 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:46:53.994 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-04-30 16:46:53.996 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:46:54.010 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 16:46:54.011 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:46:54.023 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 16:46:54.023 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 16:46:54.023 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:46:54.038 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 16:46:54.038 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-30T16:46:53.995}
[INFO ] 2019-04-30 16:46:54.067 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId=224, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-30T16:46:53.995}
[INFO ] 2019-04-30 16:46:54.067 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId=224, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-30T16:46:53.995}
[INFO ] 2019-04-30 16:46:54.129 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:46:54.130 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-04-30 16:46:54.131 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:46:54.160 [main] GenericDao - **********Query by Last Name Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}]
[INFO ] 2019-04-30 16:46:54.160 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-30 16:46:54.181 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 16:46:54.182 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 16:46:54.234 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:46:54.236 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-30 16:46:54.253 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 16:46:54.310 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:46:54.310 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-04-30 16:46:54.310 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 16:46:54.372 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=4, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Swedish Meatballs', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=6, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Lamb Shank', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=7, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Braised Pork Belly', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=8, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Beef Wellington', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=9, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pad Thai', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Bibimbap', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=11, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Fried Chicken', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 16:46:54.408 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:46:54.408 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-04-30 16:46:54.408 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:46:54.420 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 16:46:54.421 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-30T16:46:54.408}
[INFO ] 2019-04-30 16:46:54.421 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-30T16:46:54.408}
[INFO ] 2019-04-30 16:46:54.429 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId=225, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-30T16:46:54.408}
[INFO ] 2019-04-30 16:46:54.430 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-04-30 16:46:54.430 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-04-30 16:46:54.446 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=8, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Beef Wellington', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=9, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pad Thai', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=225, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-30T16:46:54}]
[INFO ] 2019-04-30 16:46:54.447 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-04-30 16:46:54.447 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-04-30 16:46:54.465 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Bibimbap', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=11, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Fried Chicken', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 16:46:54.466 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Macaroni and Cheese', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:46:54.479 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Macaroni and Cheese', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:46:54.550 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:46:54.550 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-04-30 16:46:54.550 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:46:54.555 [main] GenericDao - **********Query by ID Found: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-30 16:46:54.556 [main] GenericDao - **********Attempting to delete: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-30 16:46:54.557 [main] GenericDao - **********Successfully deleted: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-30 16:46:54.562 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:46:54.566 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-30 16:46:54.617 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:46:54.617 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-30 16:46:54.617 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:46:54.626 [main] GenericDao - **********Query by ID Found: User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}
[INFO ] 2019-04-30 16:46:54.667 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:46:54.667 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-04-30 16:46:54.667 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:46:54.743 [main] GenericDao - **********Get All Query Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}, User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}]
[INFO ] 2019-04-30 16:46:54.797 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:46:54.797 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-04-30 16:46:54.797 [main] UserTest - -------Locale date time: 2019-04-30T16:46:54.797----------
[INFO ] 2019-04-30 16:46:54.798 [main] GenericDao - **********Attempting to insert a Entity: User{userId='0', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-30 16:46:54.810 [main] GenericDao - **********Entity inserted: User{userId='272', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-30 16:46:54.810 [main] GenericDao - **********Query database by using an ID: 272, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:46:54.818 [main] GenericDao - **********Query by ID Found: User{userId='272', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-30 16:46:54.855 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:46:54.856 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-04-30 16:46:54.856 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId='0', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-30 16:46:54.862 [main] GenericDao - **********Saved|Updated entity: User{userId='273', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-30 16:46:54.862 [main] GenericDao - **********Query database by using an ID: 273, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:46:54.867 [main] GenericDao - **********Query by ID Found: User{userId='273', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-30 16:46:54.867 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:46:54.874 [main] GenericDao - **********Query by ID Found: User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}
[INFO ] 2019-04-30 16:46:54.874 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-04-30 16:46:54.875 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-30 16:46:54.884 [main] GenericDao - **********Saved|Updated entity: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-30 16:46:54.884 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:46:54.894 [main] GenericDao - **********Query by ID Found: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-30 16:46:54.935 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:46:54.935 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-04-30 16:46:54.935 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:46:54.955 [main] GenericDao - **********Query by Last Name Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}]
[INFO ] 2019-04-30 16:46:54.955 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:46:54.979 [main] GenericDao - **********Query by Last Name Found: [User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}]
[INFO ] 2019-04-30 16:46:55.022 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:46:55.023 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-04-30 16:46:55.023 [main] GenericDao - **********Attempting to insert a Entity: User{userId='0', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-30 16:46:55.031 [main] GenericDao - **********Entity inserted: User{userId='274', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-30 16:46:55.031 [main] GenericDao - **********Query database by using an ID: 274, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:46:55.036 [main] GenericDao - **********Query by ID Found: User{userId='274', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-30 16:53:25.976 [http-nio-8080-exec-6] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:53:31.673 [http-nio-8080-exec-6] GenericDao - **********Query by Last Name Found: [User{userId='9', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='AdminMan'}]
[INFO ] 2019-04-30 16:53:31.673 [http-nio-8080-exec-6] GenericDao - **********Querying grocery list by user id: 9
[INFO ] 2019-04-30 16:56:43.204 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-30 16:56:43.216 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-04-30 16:56:43.217 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-04-30 16:56:45.908 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 5, grocerylistName= Week 5, ingredientId= 3, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 6, grocerylistName= Week 2, ingredientId= 3, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 8, grocerylistName= Week 2, ingredientId= 2, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 9, grocerylistName= Week 3, ingredientId= 3, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-30 16:56:45.982 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-30 16:56:45.982 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-04-30 16:56:45.983 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-04-30 16:56:46.065 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-30 16:56:46.065 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-30 16:56:46.159 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:56:46.161 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-04-30 16:56:46.161 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 16:56:46.207 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:56:46.207 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:56:46.207 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 16:56:46.225 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:56:46.225 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:56:46.245 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:56:46.284 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 16:56:46.289 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-30 16:56:46.339 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:56:46.340 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-30 16:56:46.340 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 16:56:46.357 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=7, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Braised Pork Belly', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:56:46.403 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:56:46.404 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-04-30 16:56:46.405 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:56:46.419 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 16:56:46.419 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:56:46.431 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 16:56:46.431 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 16:56:46.431 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:56:46.444 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 16:56:46.445 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-30T16:56:46.405}
[INFO ] 2019-04-30 16:56:46.474 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId=227, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-30T16:56:46.405}
[INFO ] 2019-04-30 16:56:46.475 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId=227, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-30T16:56:46.405}
[INFO ] 2019-04-30 16:56:46.519 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:56:46.520 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-04-30 16:56:46.520 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:56:46.545 [main] GenericDao - **********Query by Last Name Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}]
[INFO ] 2019-04-30 16:56:46.546 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-30 16:56:46.575 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 16:56:46.575 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 16:56:46.619 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:56:46.620 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-30 16:56:46.634 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 16:56:46.678 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:56:46.678 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-04-30 16:56:46.679 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 16:56:46.735 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=4, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Swedish Meatballs', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=6, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Lamb Shank', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=7, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Braised Pork Belly', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=8, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Beef Wellington', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=9, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pad Thai', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Bibimbap', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=11, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Fried Chicken', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 16:56:46.789 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:56:46.790 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-04-30 16:56:46.790 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:56:46.801 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 16:56:46.802 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-30T16:56:46.790}
[INFO ] 2019-04-30 16:56:46.802 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-30T16:56:46.790}
[INFO ] 2019-04-30 16:56:46.811 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId=228, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-30T16:56:46.790}
[INFO ] 2019-04-30 16:56:46.811 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-04-30 16:56:46.812 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-04-30 16:56:46.831 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=8, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Beef Wellington', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=9, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pad Thai', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=228, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-30T16:56:47}]
[INFO ] 2019-04-30 16:56:46.832 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-04-30 16:56:46.832 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-04-30 16:56:46.847 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Bibimbap', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=11, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Fried Chicken', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 16:56:46.848 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Macaroni and Cheese', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:56:46.855 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Macaroni and Cheese', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:56:46.924 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:56:46.924 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-04-30 16:56:46.925 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:56:46.930 [main] GenericDao - **********Query by ID Found: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-30 16:56:46.930 [main] GenericDao - **********Attempting to delete: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-30 16:56:46.932 [main] GenericDao - **********Successfully deleted: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-30 16:56:46.938 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:56:46.942 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-30 16:56:46.990 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:56:46.991 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-30 16:56:46.991 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:56:47.000 [main] GenericDao - **********Query by ID Found: User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}
[INFO ] 2019-04-30 16:56:47.044 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:56:47.045 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-04-30 16:56:47.046 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:56:47.120 [main] GenericDao - **********Get All Query Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}, User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}]
[INFO ] 2019-04-30 16:56:47.181 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:56:47.182 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-04-30 16:56:47.182 [main] UserTest - -------Locale date time: 2019-04-30T16:56:47.182----------
[INFO ] 2019-04-30 16:56:47.182 [main] GenericDao - **********Attempting to insert a Entity: User{userId='0', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-30 16:56:47.196 [main] GenericDao - **********Entity inserted: User{userId='275', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-30 16:56:47.197 [main] GenericDao - **********Query database by using an ID: 275, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:56:47.207 [main] GenericDao - **********Query by ID Found: User{userId='275', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-30 16:56:47.241 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:56:47.241 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-04-30 16:56:47.241 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId='0', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-30 16:56:47.249 [main] GenericDao - **********Saved|Updated entity: User{userId='276', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-30 16:56:47.249 [main] GenericDao - **********Query database by using an ID: 276, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:56:47.257 [main] GenericDao - **********Query by ID Found: User{userId='276', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-30 16:56:47.257 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:56:47.267 [main] GenericDao - **********Query by ID Found: User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}
[INFO ] 2019-04-30 16:56:47.268 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-04-30 16:56:47.268 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-30 16:56:47.281 [main] GenericDao - **********Saved|Updated entity: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-30 16:56:47.282 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:56:47.293 [main] GenericDao - **********Query by ID Found: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-30 16:56:47.337 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:56:47.338 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-04-30 16:56:47.338 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:56:47.358 [main] GenericDao - **********Query by Last Name Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}]
[INFO ] 2019-04-30 16:56:47.358 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:56:47.384 [main] GenericDao - **********Query by Last Name Found: [User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}]
[INFO ] 2019-04-30 16:56:47.422 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:56:47.423 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-04-30 16:56:47.423 [main] GenericDao - **********Attempting to insert a Entity: User{userId='0', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-30 16:56:47.427 [main] GenericDao - **********Entity inserted: User{userId='277', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-30 16:56:47.428 [main] GenericDao - **********Query database by using an ID: 277, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:56:47.432 [main] GenericDao - **********Query by ID Found: User{userId='277', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-30 16:57:27.349 [http-nio-8080-exec-6] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:57:32.743 [http-nio-8080-exec-6] GenericDao - **********Query by Last Name Found: [User{userId='9', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='AdminMan'}]
[INFO ] 2019-04-30 16:57:32.744 [http-nio-8080-exec-6] GenericDao - **********Querying grocery list by user id: 9
[INFO ] 2019-04-30 16:57:32.744 [http-nio-8080-exec-6] GenericDao - **********
[INFO ] 2019-04-30 16:57:32.744 [http-nio-8080-exec-6] GenericDao - **********before
[INFO ] 2019-04-30 16:59:34.934 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-30 16:59:34.943 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-04-30 16:59:34.944 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-04-30 16:59:37.615 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 5, grocerylistName= Week 5, ingredientId= 3, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 6, grocerylistName= Week 2, ingredientId= 3, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 8, grocerylistName= Week 2, ingredientId= 2, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 9, grocerylistName= Week 3, ingredientId= 3, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-30 16:59:37.694 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-30 16:59:37.694 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-04-30 16:59:37.695 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-04-30 16:59:37.768 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-30 16:59:37.768 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId= 1, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 2, grocerylistName= Week 1, ingredientId= 4, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 3, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 4, grocerylistName= Week 1, ingredientId= 6, ingredients= [], recipeId= [], userId= []}, GroceryLists{ groceryListId= 7, grocerylistName= Week 1, ingredientId= 1, ingredients= [], recipeId= [], userId= []}]
[INFO ] 2019-04-30 16:59:37.852 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:59:37.853 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-04-30 16:59:37.854 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 16:59:37.894 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:59:37.895 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:59:37.895 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 16:59:37.914 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:59:37.914 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:59:37.933 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:59:37.972 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 16:59:37.977 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-30 16:59:38.024 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:59:38.024 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-30 16:59:38.025 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 16:59:38.046 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=7, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Braised Pork Belly', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:59:38.105 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:59:38.105 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-04-30 16:59:38.106 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:59:38.124 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 16:59:38.125 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:59:38.137 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 16:59:38.138 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 16:59:38.138 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:59:38.152 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 16:59:38.152 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-30T16:59:38.106}
[INFO ] 2019-04-30 16:59:38.182 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId=230, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-30T16:59:38.106}
[INFO ] 2019-04-30 16:59:38.182 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId=230, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-30T16:59:38.106}
[INFO ] 2019-04-30 16:59:38.237 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:59:38.237 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-04-30 16:59:38.238 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:59:38.275 [main] GenericDao - **********Query by Last Name Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}]
[INFO ] 2019-04-30 16:59:38.275 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-30 16:59:38.303 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 16:59:38.303 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 16:59:38.357 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:59:38.358 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-30 16:59:38.373 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 16:59:38.419 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:59:38.419 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-04-30 16:59:38.419 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 16:59:38.482 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=4, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Swedish Meatballs', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=6, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Lamb Shank', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=7, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Braised Pork Belly', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=8, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Beef Wellington', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=9, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pad Thai', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Bibimbap', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=11, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Fried Chicken', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 16:59:38.532 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 16:59:38.533 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-04-30 16:59:38.533 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:59:38.548 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 16:59:38.549 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-30T16:59:38.533}
[INFO ] 2019-04-30 16:59:38.551 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId=0, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-30T16:59:38.533}
[INFO ] 2019-04-30 16:59:38.564 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId=231, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-30T16:59:38.533}
[INFO ] 2019-04-30 16:59:38.564 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-04-30 16:59:38.565 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-04-30 16:59:38.587 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=8, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Beef Wellington', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=9, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pad Thai', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=231, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-30T16:59:39}]
[INFO ] 2019-04-30 16:59:38.588 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-04-30 16:59:38.589 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-04-30 16:59:38.606 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Bibimbap', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=11, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Fried Chicken', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 16:59:38.607 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Macaroni and Cheese', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:59:38.625 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Macaroni and Cheese', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 16:59:38.687 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:59:38.688 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-04-30 16:59:38.688 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:59:38.693 [main] GenericDao - **********Query by ID Found: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-30 16:59:38.693 [main] GenericDao - **********Attempting to delete: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-30 16:59:38.695 [main] GenericDao - **********Successfully deleted: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-30 16:59:38.699 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:59:38.707 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-30 16:59:38.745 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:59:38.746 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-30 16:59:38.746 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:59:38.756 [main] GenericDao - **********Query by ID Found: User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}
[INFO ] 2019-04-30 16:59:38.797 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:59:38.798 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-04-30 16:59:38.798 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:59:38.885 [main] GenericDao - **********Get All Query Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}, User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}]
[INFO ] 2019-04-30 16:59:38.933 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:59:38.933 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-04-30 16:59:38.934 [main] UserTest - -------Locale date time: 2019-04-30T16:59:38.934----------
[INFO ] 2019-04-30 16:59:38.934 [main] GenericDao - **********Attempting to insert a Entity: User{userId='0', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-30 16:59:38.944 [main] GenericDao - **********Entity inserted: User{userId='278', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-30 16:59:38.944 [main] GenericDao - **********Query database by using an ID: 278, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:59:38.950 [main] GenericDao - **********Query by ID Found: User{userId='278', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-30 16:59:38.991 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:59:38.991 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-04-30 16:59:38.992 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId='0', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-30 16:59:38.999 [main] GenericDao - **********Saved|Updated entity: User{userId='279', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-30 16:59:38.999 [main] GenericDao - **********Query database by using an ID: 279, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:59:39.004 [main] GenericDao - **********Query by ID Found: User{userId='279', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-30 16:59:39.004 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:59:39.013 [main] GenericDao - **********Query by ID Found: User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}
[INFO ] 2019-04-30 16:59:39.014 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-04-30 16:59:39.014 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-30 16:59:39.029 [main] GenericDao - **********Saved|Updated entity: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-30 16:59:39.030 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:59:39.040 [main] GenericDao - **********Query by ID Found: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-30 16:59:39.084 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:59:39.085 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-04-30 16:59:39.085 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:59:39.104 [main] GenericDao - **********Query by Last Name Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}]
[INFO ] 2019-04-30 16:59:39.104 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:59:39.131 [main] GenericDao - **********Query by Last Name Found: [User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}]
[INFO ] 2019-04-30 16:59:39.167 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 16:59:39.168 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-04-30 16:59:39.168 [main] GenericDao - **********Attempting to insert a Entity: User{userId='0', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-30 16:59:39.173 [main] GenericDao - **********Entity inserted: User{userId='280', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-30 16:59:39.173 [main] GenericDao - **********Query database by using an ID: 280, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 16:59:39.177 [main] GenericDao - **********Query by ID Found: User{userId='280', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-30 17:00:16.732 [http-nio-8080-exec-7] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:00:21.332 [http-nio-8080-exec-7] GenericDao - **********Query by Last Name Found: [User{userId='9', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='AdminMan'}]
[INFO ] 2019-04-30 17:00:21.332 [http-nio-8080-exec-7] GenericDao - **********Querying grocery list by user id: 9
[INFO ] 2019-04-30 17:00:21.332 [http-nio-8080-exec-7] GenericDao - **********
[INFO ] 2019-04-30 17:00:21.332 [http-nio-8080-exec-7] GenericDao - **********before
[INFO ] 2019-04-30 17:30:56.919 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-30 17:30:56.931 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-04-30 17:30:56.932 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-04-30 17:30:59.689 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = { [] }, userRecipes = { [] }, user = { [] } }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = { [] }, userRecipes = { [] }, user = { [] } }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = { [] }, userRecipes = { [] }, user = { [] } }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = { [] }, userRecipes = { [] }, user = { [] } }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = { [] }, userRecipes = { [] }, user = { [] } }]
[INFO ] 2019-04-30 17:30:59.689 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = { [] }, userRecipes = { [] }, user = { [] } }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = { [] }, userRecipes = { [] }, user = { [] } }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = { [] }, userRecipes = { [] }, user = { [] } }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = { [] }, userRecipes = { [] }, user = { [] } }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = { [] }, userRecipes = { [] }, user = { [] } }]
[INFO ] 2019-04-30 17:31:31.220 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-30 17:31:31.230 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-04-30 17:31:31.231 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-04-30 17:31:33.850 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = { [] }, userRecipes = { [] }, user = { [] } }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = { [] }, userRecipes = { [] }, user = { [] } }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = { [] }, userRecipes = { [] }, user = { [] } }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = { [] }, userRecipes = { [] }, user = { [] } }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = { [] }, userRecipes = { [] }, user = { [] } }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = { [] }, userRecipes = { [] }, user = { [] } }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = { [] }, userRecipes = { [] }, user = { [] } }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = { [] }, userRecipes = { [] }, user = { [] } }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = { [] }, userRecipes = { [] }, user = { [] } }]
[INFO ] 2019-04-30 17:31:33.989 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-30 17:31:33.990 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-04-30 17:31:33.990 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-04-30 17:31:34.063 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = { [] }, userRecipes = { [] }, user = { [] } }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = { [] }, userRecipes = { [] }, user = { [] } }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = { [] }, userRecipes = { [] }, user = { [] } }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = { [] }, userRecipes = { [] }, user = { [] } }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = { [] }, userRecipes = { [] }, user = { [] } }]
[INFO ] 2019-04-30 17:31:34.063 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = { [] }, userRecipes = { [] }, user = { [] } }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = { [] }, userRecipes = { [] }, user = { [] } }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = { [] }, userRecipes = { [] }, user = { [] } }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = { [] }, userRecipes = { [] }, user = { [] } }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = { [] }, userRecipes = { [] }, user = { [] } }]
[INFO ] 2019-04-30 17:31:34.146 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 17:31:34.147 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-04-30 17:31:34.147 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 17:31:34.193 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 17:31:34.193 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 17:31:34.194 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 17:31:34.215 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 17:31:34.215 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 17:31:34.234 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 17:31:34.268 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 17:31:34.272 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-30 17:31:34.318 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 17:31:34.318 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-30 17:31:34.319 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 17:31:34.333 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId=7, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Braised Pork Belly', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 17:31:34.381 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 17:31:34.382 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-04-30 17:31:34.382 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:31:34.395 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 17:31:34.395 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:31:34.406 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 17:31:34.406 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 17:31:34.407 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:31:34.423 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 17:31:34.423 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId=null, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-30T17:31:34.382}
[INFO ] 2019-04-30 17:31:34.447 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId=233, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-30T17:31:34.382}
[INFO ] 2019-04-30 17:31:34.448 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId=233, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pepperoni Pizza', dateTimeCreated=2019-04-30T17:31:34.382}
[INFO ] 2019-04-30 17:31:34.496 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 17:31:34.496 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-04-30 17:31:34.496 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:31:34.522 [main] GenericDao - **********Query by Last Name Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}]
[INFO ] 2019-04-30 17:31:34.522 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-30 17:31:34.550 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 17:31:34.551 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 17:31:34.604 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 17:31:34.605 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-30 17:31:34.618 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 17:31:34.670 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 17:31:34.670 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-04-30 17:31:34.671 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 17:31:34.722 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId=1, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Tacos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=2, user=User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, recipeTitle='Shrimp Larb', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=3, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Nachos', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=4, user=User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, recipeTitle='Swedish Meatballs', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=6, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Lamb Shank', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=7, user=User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, recipeTitle='Braised Pork Belly', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=8, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Beef Wellington', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=9, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pad Thai', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Bibimbap', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=11, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Fried Chicken', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 17:31:34.767 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 17:31:34.767 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-04-30 17:31:34.768 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:31:34.778 [main] GenericDao - **********Query by ID Found: User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}
[INFO ] 2019-04-30 17:31:34.779 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId=null, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-30T17:31:34.768}
[INFO ] 2019-04-30 17:31:34.780 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId=null, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-30T17:31:34.768}
[INFO ] 2019-04-30 17:31:34.792 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId=234, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-30T17:31:34.768}
[INFO ] 2019-04-30 17:31:34.793 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-04-30 17:31:34.793 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-04-30 17:31:34.809 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=8, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Beef Wellington', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=9, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Pad Thai', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=234, user=User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, recipeTitle='Rib Eye Steak', dateTimeCreated=2019-04-30T17:31:35}]
[INFO ] 2019-04-30 17:31:34.810 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-04-30 17:31:34.810 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-04-30 17:31:34.827 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Bibimbap', dateTimeCreated=2019-03-03T13:53}, UserRecipes{recipeId=11, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Fried Chicken', dateTimeCreated=2019-03-03T13:53}]
[INFO ] 2019-04-30 17:31:34.827 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Macaroni and Cheese', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 17:31:34.838 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId=10, user=User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}, recipeTitle='Macaroni and Cheese', dateTimeCreated=2019-03-03T13:53}
[INFO ] 2019-04-30 17:31:34.907 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 17:31:34.907 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-04-30 17:31:34.908 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:31:34.913 [main] GenericDao - **********Query by ID Found: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-30 17:31:34.913 [main] GenericDao - **********Attempting to delete: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-30 17:31:34.915 [main] GenericDao - **********Successfully deleted: User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}
[INFO ] 2019-04-30 17:31:34.919 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:31:34.923 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-30 17:31:34.966 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 17:31:34.967 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-30 17:31:34.967 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:31:34.975 [main] GenericDao - **********Query by ID Found: User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}
[INFO ] 2019-04-30 17:31:35.017 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 17:31:35.018 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-04-30 17:31:35.018 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:31:35.087 [main] GenericDao - **********Get All Query Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}, User{userId='2', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='Test2'}, User{userId='3', firstName='Captain', lastName='America', userName='Tester3', userPassword='Test3'}, User{userId='4', firstName='Black', lastName='Widow', userName='Tester4', userPassword='Test4'}, User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}]
[INFO ] 2019-04-30 17:31:35.126 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 17:31:35.127 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-04-30 17:31:35.127 [main] UserTest - -------Locale date time: 2019-04-30T17:31:35.127----------
[INFO ] 2019-04-30 17:31:35.128 [main] GenericDao - **********Attempting to insert a Entity: User{userId='null', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-30 17:31:35.137 [main] GenericDao - **********Entity inserted: User{userId='281', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-30 17:31:35.137 [main] GenericDao - **********Query database by using an ID: 281, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:31:35.142 [main] GenericDao - **********Query by ID Found: User{userId='281', firstName='Ham', lastName='Burgler', userName='CHzPlz', userPassword='test'}
[INFO ] 2019-04-30 17:31:35.183 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 17:31:35.184 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-04-30 17:31:35.184 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId='null', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-30 17:31:35.192 [main] GenericDao - **********Saved|Updated entity: User{userId='282', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-30 17:31:35.193 [main] GenericDao - **********Query database by using an ID: 282, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:31:35.197 [main] GenericDao - **********Query by ID Found: User{userId='282', firstName='Black', lastName='Widow', userName='WidowMaker', userPassword='test33'}
[INFO ] 2019-04-30 17:31:35.197 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:31:35.206 [main] GenericDao - **********Query by ID Found: User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}
[INFO ] 2019-04-30 17:31:35.206 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-04-30 17:31:35.206 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-30 17:31:35.215 [main] GenericDao - **********Saved|Updated entity: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-30 17:31:35.216 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:31:35.230 [main] GenericDao - **********Query by ID Found: User{userId='6', firstName='Captain', lastName='Marvel', userName='CaptMarv33', userPassword='Test6'}
[INFO ] 2019-04-30 17:31:35.269 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 17:31:35.269 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-04-30 17:31:35.269 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:31:35.285 [main] GenericDao - **********Query by Last Name Found: [User{userId='1', firstName='Incredible', lastName='Hulk', userName='Tester1', userPassword='Test1'}]
[INFO ] 2019-04-30 17:31:35.286 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:31:35.306 [main] GenericDao - **********Query by Last Name Found: [User{userId='5', firstName='Ant', lastName='Man', userName='Tester5', userPassword='Test5'}, User{userId='6', firstName='Captain', lastName='Marvel', userName='Tester6', userPassword='Test6'}]
[INFO ] 2019-04-30 17:31:35.343 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 17:31:35.344 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-04-30 17:31:35.344 [main] GenericDao - **********Attempting to insert a Entity: User{userId='null', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-30 17:31:35.350 [main] GenericDao - **********Entity inserted: User{userId='283', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-30 17:31:35.351 [main] GenericDao - **********Query database by using an ID: 283, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:31:35.359 [main] GenericDao - **********Query by ID Found: User{userId='283', firstName='Thor', lastName='Odinson', userName='Tester7', userPassword='test'}
[INFO ] 2019-04-30 17:32:10.977 [http-nio-8080-exec-5] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:32:15.368 [http-nio-8080-exec-5] GenericDao - **********Query by Last Name Found: [User{userId='9', firstName='Peter', lastName='Parker', userName='Tester2', userPassword='AdminMan'}]
[INFO ] 2019-04-30 17:32:15.368 [http-nio-8080-exec-5] GenericDao - **********Querying grocery list by user id: 9
[INFO ] 2019-04-30 17:32:15.395 [http-nio-8080-exec-5] GenericDao - *********Query found grocery lists by ID: [GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 9, recipe_id = 1, ingredients = { [] }, userRecipes = { [] }, user = { [] } }]
[INFO ] 2019-04-30 17:32:15.395 [http-nio-8080-exec-5] SearchGrocerylist - Recipe Info: [GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 9, recipe_id = 1, ingredients = { [] }, userRecipes = { [] }, user = { [] } }]
[INFO ] 2019-04-30 17:48:06.236 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-30 17:48:06.248 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-04-30 17:48:06.248 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-04-30 17:48:09.143 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 17:48:09.216 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-30 17:48:09.216 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-04-30 17:48:09.217 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-04-30 17:48:09.281 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 17:48:09.282 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 17:48:09.351 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 17:48:09.352 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-04-30 17:48:09.352 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 17:48:09.405 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId =3, user =User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle ='Nachos', dateTimeCreated =2019-03-03T13:53}
[INFO ] 2019-04-30 17:48:09.405 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId =3, user =User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle ='Nachos', dateTimeCreated =2019-03-03T13:53}
[INFO ] 2019-04-30 17:48:09.406 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 17:48:09.419 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId =3, user =User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle ='Nachos', dateTimeCreated =2019-03-03T13:53}
[INFO ] 2019-04-30 17:48:09.419 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId =3, user =User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle ='Nachos', dateTimeCreated =2019-03-03T13:53}
[INFO ] 2019-04-30 17:48:09.434 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId =3, user =User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle ='Nachos', dateTimeCreated =2019-03-03T13:53}
[INFO ] 2019-04-30 17:48:09.474 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 17:48:09.493 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-30 17:48:09.559 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 17:48:09.560 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-30 17:48:09.560 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 17:48:09.577 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId =7, user =User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}, recipeTitle ='Braised Pork Belly', dateTimeCreated =2019-03-03T13:53}
[INFO ] 2019-04-30 17:48:09.624 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 17:48:09.625 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-04-30 17:48:09.625 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:48:09.636 [main] GenericDao - **********Query by ID Found: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-04-30 17:48:09.637 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:48:09.647 [main] GenericDao - **********Query by ID Found: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-04-30 17:48:09.647 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-04-30 17:48:09.647 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:48:09.657 [main] GenericDao - **********Query by ID Found: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-04-30 17:48:09.657 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId =null, user =User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle ='Pepperoni Pizza', dateTimeCreated =2019-04-30T17:48:09.625}
[INFO ] 2019-04-30 17:48:09.675 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId =236, user =User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle ='Pepperoni Pizza', dateTimeCreated =2019-04-30T17:48:09.625}
[INFO ] 2019-04-30 17:48:09.675 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId =236, user =User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle ='Pepperoni Pizza', dateTimeCreated =2019-04-30T17:48:09.625}
[INFO ] 2019-04-30 17:48:09.727 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 17:48:09.728 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-04-30 17:48:09.728 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:48:09.749 [main] GenericDao - **********Query by Last Name Found: [User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}]
[INFO ] 2019-04-30 17:48:09.750 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-30 17:48:09.768 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId =1, user =User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle ='Tacos', dateTimeCreated =2019-03-03T13:53}, UserRecipes{recipeId =2, user =User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle ='Shrimp Larb', dateTimeCreated =2019-03-03T13:53}]
[INFO ] 2019-04-30 17:48:09.768 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId =1, user =User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle ='Tacos', dateTimeCreated =2019-03-03T13:53}, UserRecipes{recipeId =2, user =User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle ='Shrimp Larb', dateTimeCreated =2019-03-03T13:53}]
[INFO ] 2019-04-30 17:48:09.812 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 17:48:09.813 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-30 17:48:09.823 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId =1, user =User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle ='Tacos', dateTimeCreated =2019-03-03T13:53}, UserRecipes{recipeId =2, user =User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle ='Shrimp Larb', dateTimeCreated =2019-03-03T13:53}]
[INFO ] 2019-04-30 17:48:09.877 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 17:48:09.877 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-04-30 17:48:09.878 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 17:48:09.924 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId =1, user =User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle ='Tacos', dateTimeCreated =2019-03-03T13:53}, UserRecipes{recipeId =2, user =User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle ='Shrimp Larb', dateTimeCreated =2019-03-03T13:53}, UserRecipes{recipeId =3, user =User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle ='Nachos', dateTimeCreated =2019-03-03T13:53}, UserRecipes{recipeId =4, user =User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle ='Swedish Meatballs', dateTimeCreated =2019-03-03T13:53}, UserRecipes{recipeId =6, user =User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}, recipeTitle ='Lamb Shank', dateTimeCreated =2019-03-03T13:53}, UserRecipes{recipeId =7, user =User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}, recipeTitle ='Braised Pork Belly', dateTimeCreated =2019-03-03T13:53}, UserRecipes{recipeId =8, user =User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle ='Beef Wellington', dateTimeCreated =2019-03-03T13:53}, UserRecipes{recipeId =9, user =User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle ='Pad Thai', dateTimeCreated =2019-03-03T13:53}, UserRecipes{recipeId =10, user =User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle ='Bibimbap', dateTimeCreated =2019-03-03T13:53}, UserRecipes{recipeId =11, user =User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle ='Fried Chicken', dateTimeCreated =2019-03-03T13:53}]
[INFO ] 2019-04-30 17:48:09.988 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 17:48:09.988 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-04-30 17:48:09.988 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:48:09.997 [main] GenericDao - **********Query by ID Found: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-04-30 17:48:09.997 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId =null, user =User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle ='Rib Eye Steak', dateTimeCreated =2019-04-30T17:48:09.988}
[INFO ] 2019-04-30 17:48:09.997 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId =null, user =User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle ='Rib Eye Steak', dateTimeCreated =2019-04-30T17:48:09.988}
[INFO ] 2019-04-30 17:48:10.004 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId =237, user =User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle ='Rib Eye Steak', dateTimeCreated =2019-04-30T17:48:09.988}
[INFO ] 2019-04-30 17:48:10.004 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-04-30 17:48:10.005 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-04-30 17:48:10.018 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId =8, user =User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle ='Beef Wellington', dateTimeCreated =2019-03-03T13:53}, UserRecipes{recipeId =9, user =User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle ='Pad Thai', dateTimeCreated =2019-03-03T13:53}, UserRecipes{recipeId =237, user =User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle ='Rib Eye Steak', dateTimeCreated =2019-04-30T17:48:10}]
[INFO ] 2019-04-30 17:48:10.018 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-04-30 17:48:10.019 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-04-30 17:48:10.030 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId =10, user =User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle ='Bibimbap', dateTimeCreated =2019-03-03T13:53}, UserRecipes{recipeId =11, user =User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle ='Fried Chicken', dateTimeCreated =2019-03-03T13:53}]
[INFO ] 2019-04-30 17:48:10.030 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId =10, user =User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle ='Macaroni and Cheese', dateTimeCreated =2019-03-03T13:53}
[INFO ] 2019-04-30 17:48:10.042 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId =10, user =User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle ='Macaroni and Cheese', dateTimeCreated =2019-03-03T13:53}
[INFO ] 2019-04-30 17:48:10.089 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 17:48:10.089 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-04-30 17:48:10.090 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:48:10.094 [main] GenericDao - **********Query by ID Found: User{userId ='4', firstName ='Black', lastName ='Widow', userName ='Tester4', userPassword ='Test4'}
[INFO ] 2019-04-30 17:48:10.094 [main] GenericDao - **********Attempting to delete: User{userId ='4', firstName ='Black', lastName ='Widow', userName ='Tester4', userPassword ='Test4'}
[INFO ] 2019-04-30 17:48:10.096 [main] GenericDao - **********Successfully deleted: User{userId ='4', firstName ='Black', lastName ='Widow', userName ='Tester4', userPassword ='Test4'}
[INFO ] 2019-04-30 17:48:10.100 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:48:10.104 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-30 17:48:10.159 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 17:48:10.160 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-30 17:48:10.160 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:48:10.169 [main] GenericDao - **********Query by ID Found: User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}
[INFO ] 2019-04-30 17:48:10.208 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 17:48:10.208 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-04-30 17:48:10.208 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:48:10.285 [main] GenericDao - **********Get All Query Found: [User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}, User{userId ='4', firstName ='Black', lastName ='Widow', userName ='Tester4', userPassword ='Test4'}, User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}]
[INFO ] 2019-04-30 17:48:10.345 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 17:48:10.345 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-04-30 17:48:10.346 [main] UserTest - -------Locale date time: 2019-04-30T17:48:10.346----------
[INFO ] 2019-04-30 17:48:10.347 [main] GenericDao - **********Attempting to insert a Entity: User{userId ='null', firstName ='Ham', lastName ='Burgler', userName ='CHzPlz', userPassword ='test'}
[INFO ] 2019-04-30 17:48:10.355 [main] GenericDao - **********Entity inserted: User{userId ='284', firstName ='Ham', lastName ='Burgler', userName ='CHzPlz', userPassword ='test'}
[INFO ] 2019-04-30 17:48:10.355 [main] GenericDao - **********Query database by using an ID: 284, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:48:10.360 [main] GenericDao - **********Query by ID Found: User{userId ='284', firstName ='Ham', lastName ='Burgler', userName ='CHzPlz', userPassword ='test'}
[INFO ] 2019-04-30 17:48:10.406 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 17:48:10.406 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-04-30 17:48:10.406 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId ='null', firstName ='Black', lastName ='Widow', userName ='WidowMaker', userPassword ='test33'}
[INFO ] 2019-04-30 17:48:10.414 [main] GenericDao - **********Saved|Updated entity: User{userId ='285', firstName ='Black', lastName ='Widow', userName ='WidowMaker', userPassword ='test33'}
[INFO ] 2019-04-30 17:48:10.414 [main] GenericDao - **********Query database by using an ID: 285, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:48:10.419 [main] GenericDao - **********Query by ID Found: User{userId ='285', firstName ='Black', lastName ='Widow', userName ='WidowMaker', userPassword ='test33'}
[INFO ] 2019-04-30 17:48:10.419 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:48:10.429 [main] GenericDao - **********Query by ID Found: User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}
[INFO ] 2019-04-30 17:48:10.429 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-04-30 17:48:10.429 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='CaptMarv33', userPassword ='Test6'}
[INFO ] 2019-04-30 17:48:10.440 [main] GenericDao - **********Saved|Updated entity: User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='CaptMarv33', userPassword ='Test6'}
[INFO ] 2019-04-30 17:48:10.440 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:48:10.452 [main] GenericDao - **********Query by ID Found: User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='CaptMarv33', userPassword ='Test6'}
[INFO ] 2019-04-30 17:48:10.529 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 17:48:10.530 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-04-30 17:48:10.530 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:48:10.545 [main] GenericDao - **********Query by Last Name Found: [User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}]
[INFO ] 2019-04-30 17:48:10.545 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:48:10.575 [main] GenericDao - **********Query by Last Name Found: [User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}]
[INFO ] 2019-04-30 17:48:10.614 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 17:48:10.615 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-04-30 17:48:10.615 [main] GenericDao - **********Attempting to insert a Entity: User{userId ='null', firstName ='Thor', lastName ='Odinson', userName ='Tester7', userPassword ='test'}
[INFO ] 2019-04-30 17:48:10.619 [main] GenericDao - **********Entity inserted: User{userId ='286', firstName ='Thor', lastName ='Odinson', userName ='Tester7', userPassword ='test'}
[INFO ] 2019-04-30 17:48:10.619 [main] GenericDao - **********Query database by using an ID: 286, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:48:10.622 [main] GenericDao - **********Query by ID Found: User{userId ='286', firstName ='Thor', lastName ='Odinson', userName ='Tester7', userPassword ='test'}
[INFO ] 2019-04-30 17:55:41.345 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-30 17:55:41.353 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-04-30 17:55:41.353 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-04-30 17:55:43.104 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-30 17:55:43.105 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-04-30 17:55:43.105 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-04-30 17:55:43.407 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 17:55:43.408 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-04-30 17:55:43.408 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 17:55:43.746 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 17:55:43.747 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-30 17:55:43.747 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 17:55:43.995 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 17:55:43.996 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-04-30 17:55:44.013 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:55:44.464 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 17:55:44.464 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-04-30 17:55:44.465 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 17:55:44.722 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 17:55:44.723 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-30 17:55:44.964 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 17:55:44.965 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-04-30 17:55:44.965 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 17:55:45.210 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 17:55:45.211 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-04-30 17:55:45.211 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[ERROR] 2019-04-30 17:55:45.439 [main] Database - java.sql.SQLSyntaxErrorException: User 'root' has exceeded the 'max_user_connections' resource (current value: 50)
[INFO ] 2019-04-30 17:55:45.439 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 17:55:45.440 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-04-30 17:55:45.440 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:02:20.278 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-30 18:02:20.286 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-04-30 18:02:20.286 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-04-30 18:02:23.067 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 18:02:23.249 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-30 18:02:23.250 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-04-30 18:02:23.250 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-04-30 18:02:23.315 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 18:02:23.316 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 18:02:23.401 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 18:02:23.401 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-04-30 18:02:23.401 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 18:02:23.442 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:02:23.442 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:02:23.442 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 18:02:23.459 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:02:23.460 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:02:23.492 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:02:23.521 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 18:02:23.524 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-30 18:02:23.582 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 18:02:23.582 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-30 18:02:23.582 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 18:02:23.599 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}, recipeTitle = Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:02:23.643 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 18:02:23.644 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-04-30 18:02:23.645 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:02:23.658 [main] GenericDao - **********Query by ID Found: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-04-30 18:02:23.658 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:02:23.668 [main] GenericDao - **********Query by ID Found: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-04-30 18:02:23.669 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-04-30 18:02:23.669 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:02:23.680 [main] GenericDao - **********Query by ID Found: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-04-30 18:02:23.680 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Pepperoni Pizza', dateTimeCreated = 2019-04-30T18:02:23.645}
[INFO ] 2019-04-30 18:02:23.703 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 239, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Pepperoni Pizza', dateTimeCreated = 2019-04-30T18:02:23.645}
[INFO ] 2019-04-30 18:02:23.703 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 239, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Pepperoni Pizza', dateTimeCreated = 2019-04-30T18:02:23.645}
[INFO ] 2019-04-30 18:02:23.753 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 18:02:23.753 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-04-30 18:02:23.754 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:02:23.776 [main] GenericDao - **********Query by Last Name Found: [User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}]
[INFO ] 2019-04-30 18:02:23.776 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-30 18:02:23.795 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Tacos', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 2, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Shrimp Larb', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-04-30 18:02:23.796 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Tacos', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 2, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Shrimp Larb', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-04-30 18:02:23.843 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 18:02:23.843 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-30 18:02:23.854 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Tacos', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 2, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Shrimp Larb', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-04-30 18:02:23.899 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 18:02:23.899 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-04-30 18:02:23.899 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 18:02:23.947 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Tacos', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 2, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Shrimp Larb', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 4, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 6, user = User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}, recipeTitle = Lamb Shank', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 7, user = User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}, recipeTitle = Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 8, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Beef Wellington', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 9, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Pad Thai', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 10, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Bibimbap', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 11, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Fried Chicken', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-04-30 18:02:23.997 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 18:02:23.997 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-04-30 18:02:23.998 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:02:24.008 [main] GenericDao - **********Query by ID Found: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-04-30 18:02:24.008 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Rib Eye Steak', dateTimeCreated = 2019-04-30T18:02:23.997}
[INFO ] 2019-04-30 18:02:24.009 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Rib Eye Steak', dateTimeCreated = 2019-04-30T18:02:23.997}
[INFO ] 2019-04-30 18:02:24.017 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 240, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Rib Eye Steak', dateTimeCreated = 2019-04-30T18:02:23.997}
[INFO ] 2019-04-30 18:02:24.018 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-04-30 18:02:24.018 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-04-30 18:02:24.035 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Beef Wellington', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 9, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Pad Thai', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 240, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Rib Eye Steak', dateTimeCreated = 2019-04-30T18:02:24}]
[INFO ] 2019-04-30 18:02:24.035 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-04-30 18:02:24.035 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-04-30 18:02:24.047 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Bibimbap', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 11, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Fried Chicken', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-04-30 18:02:24.047 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:02:24.054 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:02:24.114 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 18:02:24.115 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-04-30 18:02:24.115 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:02:24.120 [main] GenericDao - **********Query by ID Found: User{userId ='4', firstName ='Black', lastName ='Widow', userName ='Tester4', userPassword ='Test4'}
[INFO ] 2019-04-30 18:02:24.121 [main] GenericDao - **********Attempting to delete: User{userId ='4', firstName ='Black', lastName ='Widow', userName ='Tester4', userPassword ='Test4'}
[INFO ] 2019-04-30 18:02:24.122 [main] GenericDao - **********Successfully deleted: User{userId ='4', firstName ='Black', lastName ='Widow', userName ='Tester4', userPassword ='Test4'}
[INFO ] 2019-04-30 18:02:24.128 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:02:24.134 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-30 18:02:24.181 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 18:02:24.182 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-30 18:02:24.182 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:02:24.191 [main] GenericDao - **********Query by ID Found: User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}
[INFO ] 2019-04-30 18:02:24.238 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 18:02:24.238 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-04-30 18:02:24.239 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:02:24.315 [main] GenericDao - **********Get All Query Found: [User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}, User{userId ='4', firstName ='Black', lastName ='Widow', userName ='Tester4', userPassword ='Test4'}, User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}]
[INFO ] 2019-04-30 18:02:24.373 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 18:02:24.373 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-04-30 18:02:24.374 [main] UserTest - -------Locale date time: 2019-04-30T18:02:24.373----------
[INFO ] 2019-04-30 18:02:24.374 [main] GenericDao - **********Attempting to insert a Entity: User{userId ='null', firstName ='Ham', lastName ='Burgler', userName ='CHzPlz', userPassword ='test'}
[INFO ] 2019-04-30 18:02:24.382 [main] GenericDao - **********Entity inserted: User{userId ='287', firstName ='Ham', lastName ='Burgler', userName ='CHzPlz', userPassword ='test'}
[INFO ] 2019-04-30 18:02:24.382 [main] GenericDao - **********Query database by using an ID: 287, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:02:24.388 [main] GenericDao - **********Query by ID Found: User{userId ='287', firstName ='Ham', lastName ='Burgler', userName ='CHzPlz', userPassword ='test'}
[INFO ] 2019-04-30 18:02:24.432 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 18:02:24.432 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-04-30 18:02:24.432 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId ='null', firstName ='Black', lastName ='Widow', userName ='WidowMaker', userPassword ='test33'}
[INFO ] 2019-04-30 18:02:24.438 [main] GenericDao - **********Saved|Updated entity: User{userId ='288', firstName ='Black', lastName ='Widow', userName ='WidowMaker', userPassword ='test33'}
[INFO ] 2019-04-30 18:02:24.438 [main] GenericDao - **********Query database by using an ID: 288, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:02:24.443 [main] GenericDao - **********Query by ID Found: User{userId ='288', firstName ='Black', lastName ='Widow', userName ='WidowMaker', userPassword ='test33'}
[INFO ] 2019-04-30 18:02:24.443 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:02:24.451 [main] GenericDao - **********Query by ID Found: User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}
[INFO ] 2019-04-30 18:02:24.452 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-04-30 18:02:24.452 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='CaptMarv33', userPassword ='Test6'}
[INFO ] 2019-04-30 18:02:24.462 [main] GenericDao - **********Saved|Updated entity: User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='CaptMarv33', userPassword ='Test6'}
[INFO ] 2019-04-30 18:02:24.462 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:02:24.470 [main] GenericDao - **********Query by ID Found: User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='CaptMarv33', userPassword ='Test6'}
[INFO ] 2019-04-30 18:02:24.509 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 18:02:24.510 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-04-30 18:02:24.510 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:02:24.521 [main] GenericDao - **********Query by Last Name Found: [User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}]
[INFO ] 2019-04-30 18:02:24.521 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:02:24.541 [main] GenericDao - **********Query by Last Name Found: [User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}]
[INFO ] 2019-04-30 18:02:24.580 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 18:02:24.580 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-04-30 18:02:24.580 [main] GenericDao - **********Attempting to insert a Entity: User{userId ='null', firstName ='Thor', lastName ='Odinson', userName ='Tester7', userPassword ='test'}
[INFO ] 2019-04-30 18:02:24.585 [main] GenericDao - **********Entity inserted: User{userId ='289', firstName ='Thor', lastName ='Odinson', userName ='Tester7', userPassword ='test'}
[INFO ] 2019-04-30 18:02:24.585 [main] GenericDao - **********Query database by using an ID: 289, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:02:24.589 [main] GenericDao - **********Query by ID Found: User{userId ='289', firstName ='Thor', lastName ='Odinson', userName ='Tester7', userPassword ='test'}
[INFO ] 2019-04-30 18:21:50.480 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-30 18:21:50.495 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-04-30 18:21:50.495 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-04-30 18:21:53.106 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 18:21:53.266 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-30 18:21:53.267 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-04-30 18:21:53.267 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-04-30 18:21:53.333 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 18:21:53.334 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 18:21:53.427 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 18:21:53.428 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-04-30 18:21:53.428 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 18:21:53.465 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:21:53.465 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:21:53.465 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 18:21:53.480 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:21:53.480 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:21:53.499 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:21:53.524 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 18:21:53.529 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-30 18:21:53.574 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 18:21:53.574 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-30 18:21:53.575 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 18:21:53.595 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}, recipeTitle = Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:21:53.638 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 18:21:53.639 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-04-30 18:21:53.640 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:21:53.660 [main] GenericDao - **********Query by ID Found: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-04-30 18:21:53.661 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:21:53.673 [main] GenericDao - **********Query by ID Found: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-04-30 18:21:53.674 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-04-30 18:21:53.674 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:21:53.685 [main] GenericDao - **********Query by ID Found: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-04-30 18:21:53.685 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Pepperoni Pizza', dateTimeCreated = 2019-04-30T18:21:53.640}
[INFO ] 2019-04-30 18:21:53.713 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 242, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Pepperoni Pizza', dateTimeCreated = 2019-04-30T18:21:53.640}
[INFO ] 2019-04-30 18:21:53.714 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 242, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Pepperoni Pizza', dateTimeCreated = 2019-04-30T18:21:53.640}
[INFO ] 2019-04-30 18:21:53.754 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 18:21:53.755 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-04-30 18:21:53.755 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:21:53.777 [main] GenericDao - **********Query by Last Name Found: [User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}]
[INFO ] 2019-04-30 18:21:53.777 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-30 18:21:53.803 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Tacos', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 2, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Shrimp Larb', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-04-30 18:21:53.803 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Tacos', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 2, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Shrimp Larb', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-04-30 18:21:53.853 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 18:21:53.854 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-30 18:21:53.874 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Tacos', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 2, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Shrimp Larb', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-04-30 18:21:53.916 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 18:21:53.916 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-04-30 18:21:53.917 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 18:21:53.969 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Tacos', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 2, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Shrimp Larb', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 4, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 6, user = User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}, recipeTitle = Lamb Shank', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 7, user = User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}, recipeTitle = Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 8, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Beef Wellington', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 9, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Pad Thai', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 10, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Bibimbap', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 11, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Fried Chicken', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-04-30 18:21:54.019 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 18:21:54.020 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-04-30 18:21:54.020 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:21:54.033 [main] GenericDao - **********Query by ID Found: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-04-30 18:21:54.033 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Rib Eye Steak', dateTimeCreated = 2019-04-30T18:21:54.020}
[INFO ] 2019-04-30 18:21:54.033 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Rib Eye Steak', dateTimeCreated = 2019-04-30T18:21:54.020}
[INFO ] 2019-04-30 18:21:54.042 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 243, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Rib Eye Steak', dateTimeCreated = 2019-04-30T18:21:54.020}
[INFO ] 2019-04-30 18:21:54.042 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-04-30 18:21:54.042 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-04-30 18:21:54.070 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Beef Wellington', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 9, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Pad Thai', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 243, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Rib Eye Steak', dateTimeCreated = 2019-04-30T18:21:54}]
[INFO ] 2019-04-30 18:21:54.071 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-04-30 18:21:54.071 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-04-30 18:21:54.086 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Bibimbap', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 11, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Fried Chicken', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-04-30 18:21:54.086 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:21:54.102 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:21:54.177 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 18:21:54.177 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-04-30 18:21:54.177 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:21:54.182 [main] GenericDao - **********Query by ID Found: User{userId ='4', firstName ='Black', lastName ='Widow', userName ='Tester4', userPassword ='Test4'}
[INFO ] 2019-04-30 18:21:54.183 [main] GenericDao - **********Attempting to delete: User{userId ='4', firstName ='Black', lastName ='Widow', userName ='Tester4', userPassword ='Test4'}
[INFO ] 2019-04-30 18:21:54.185 [main] GenericDao - **********Successfully deleted: User{userId ='4', firstName ='Black', lastName ='Widow', userName ='Tester4', userPassword ='Test4'}
[INFO ] 2019-04-30 18:21:54.192 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:21:54.196 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-30 18:21:54.238 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 18:21:54.238 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-30 18:21:54.239 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:21:54.247 [main] GenericDao - **********Query by ID Found: User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}
[INFO ] 2019-04-30 18:21:54.287 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 18:21:54.289 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-04-30 18:21:54.289 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:21:54.363 [main] GenericDao - **********Get All Query Found: [User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}, User{userId ='4', firstName ='Black', lastName ='Widow', userName ='Tester4', userPassword ='Test4'}, User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}]
[INFO ] 2019-04-30 18:21:54.421 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 18:21:54.423 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-04-30 18:21:54.424 [main] UserTest - -------Locale date time: 2019-04-30T18:21:54.424----------
[INFO ] 2019-04-30 18:21:54.425 [main] GenericDao - **********Attempting to insert a Entity: User{userId ='null', firstName ='Ham', lastName ='Burgler', userName ='CHzPlz', userPassword ='test'}
[INFO ] 2019-04-30 18:21:54.438 [main] GenericDao - **********Entity inserted: User{userId ='290', firstName ='Ham', lastName ='Burgler', userName ='CHzPlz', userPassword ='test'}
[INFO ] 2019-04-30 18:21:54.438 [main] GenericDao - **********Query database by using an ID: 290, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:21:54.447 [main] GenericDao - **********Query by ID Found: User{userId ='290', firstName ='Ham', lastName ='Burgler', userName ='CHzPlz', userPassword ='test'}
[INFO ] 2019-04-30 18:21:54.487 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 18:21:54.488 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-04-30 18:21:54.488 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId ='null', firstName ='Black', lastName ='Widow', userName ='WidowMaker', userPassword ='test33'}
[INFO ] 2019-04-30 18:21:54.494 [main] GenericDao - **********Saved|Updated entity: User{userId ='291', firstName ='Black', lastName ='Widow', userName ='WidowMaker', userPassword ='test33'}
[INFO ] 2019-04-30 18:21:54.495 [main] GenericDao - **********Query database by using an ID: 291, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:21:54.506 [main] GenericDao - **********Query by ID Found: User{userId ='291', firstName ='Black', lastName ='Widow', userName ='WidowMaker', userPassword ='test33'}
[INFO ] 2019-04-30 18:21:54.507 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:21:54.516 [main] GenericDao - **********Query by ID Found: User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}
[INFO ] 2019-04-30 18:21:54.516 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-04-30 18:21:54.517 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='CaptMarv33', userPassword ='Test6'}
[INFO ] 2019-04-30 18:21:54.526 [main] GenericDao - **********Saved|Updated entity: User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='CaptMarv33', userPassword ='Test6'}
[INFO ] 2019-04-30 18:21:54.527 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:21:54.538 [main] GenericDao - **********Query by ID Found: User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='CaptMarv33', userPassword ='Test6'}
[INFO ] 2019-04-30 18:21:54.579 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 18:21:54.579 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-04-30 18:21:54.580 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:21:54.597 [main] GenericDao - **********Query by Last Name Found: [User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}]
[INFO ] 2019-04-30 18:21:54.597 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:21:54.624 [main] GenericDao - **********Query by Last Name Found: [User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}]
[INFO ] 2019-04-30 18:21:54.668 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 18:21:54.669 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-04-30 18:21:54.669 [main] GenericDao - **********Attempting to insert a Entity: User{userId ='null', firstName ='Thor', lastName ='Odinson', userName ='Tester7', userPassword ='test'}
[INFO ] 2019-04-30 18:21:54.674 [main] GenericDao - **********Entity inserted: User{userId ='292', firstName ='Thor', lastName ='Odinson', userName ='Tester7', userPassword ='test'}
[INFO ] 2019-04-30 18:21:54.674 [main] GenericDao - **********Query database by using an ID: 292, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:21:54.678 [main] GenericDao - **********Query by ID Found: User{userId ='292', firstName ='Thor', lastName ='Odinson', userName ='Tester7', userPassword ='test'}
[INFO ] 2019-04-30 18:24:25.956 [http-nio-8080-exec-7] GenericDao - **********Querying grocery list by grocery list name: week 1
[INFO ] 2019-04-30 18:24:30.444 [http-nio-8080-exec-7] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 1, ingredientId = 2, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 1, ingredientId = 3, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 18:24:30.445 [http-nio-8080-exec-7] SearchGrocerylist - Grocery List Object Results from Search by Grocery List Name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 1, ingredientId = 2, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 1, ingredientId = 3, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 18:33:42.432 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-30 18:33:42.443 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-04-30 18:33:42.443 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-04-30 18:33:45.531 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 18:33:45.629 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-30 18:33:45.629 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-04-30 18:33:45.630 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-04-30 18:33:45.717 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 18:33:45.718 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 18:33:45.808 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 18:33:45.809 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-04-30 18:33:45.809 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 18:33:45.852 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:33:45.854 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:33:45.854 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 18:33:45.875 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:33:45.876 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:33:45.898 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:33:45.927 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 18:33:45.935 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-30 18:33:45.977 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 18:33:45.978 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-30 18:33:45.978 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 18:33:46.000 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}, recipeTitle = Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:33:46.045 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 18:33:46.048 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-04-30 18:33:46.050 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:33:46.066 [main] GenericDao - **********Query by ID Found: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-04-30 18:33:46.067 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:33:46.083 [main] GenericDao - **********Query by ID Found: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-04-30 18:33:46.083 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-04-30 18:33:46.083 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:33:46.096 [main] GenericDao - **********Query by ID Found: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-04-30 18:33:46.096 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Pepperoni Pizza', dateTimeCreated = 2019-04-30T18:33:46.049}
[INFO ] 2019-04-30 18:33:46.140 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 245, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Pepperoni Pizza', dateTimeCreated = 2019-04-30T18:33:46.049}
[INFO ] 2019-04-30 18:33:46.141 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 245, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Pepperoni Pizza', dateTimeCreated = 2019-04-30T18:33:46.049}
[INFO ] 2019-04-30 18:33:46.202 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 18:33:46.209 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-04-30 18:33:46.210 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:33:46.236 [main] GenericDao - **********Query by Last Name Found: [User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}]
[INFO ] 2019-04-30 18:33:46.237 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-30 18:33:46.280 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Tacos', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 2, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Shrimp Larb', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-04-30 18:33:46.281 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Tacos', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 2, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Shrimp Larb', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-04-30 18:33:46.361 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 18:33:46.363 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-30 18:33:46.384 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Tacos', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 2, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Shrimp Larb', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-04-30 18:33:46.446 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 18:33:46.447 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-04-30 18:33:46.447 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 18:33:46.492 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Tacos', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 2, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Shrimp Larb', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 4, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 6, user = User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}, recipeTitle = Lamb Shank', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 7, user = User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}, recipeTitle = Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 8, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Beef Wellington', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 9, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Pad Thai', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 10, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Bibimbap', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 11, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Fried Chicken', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-04-30 18:33:46.538 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 18:33:46.539 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-04-30 18:33:46.540 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:33:46.553 [main] GenericDao - **********Query by ID Found: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-04-30 18:33:46.553 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Rib Eye Steak', dateTimeCreated = 2019-04-30T18:33:46.540}
[INFO ] 2019-04-30 18:33:46.553 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Rib Eye Steak', dateTimeCreated = 2019-04-30T18:33:46.540}
[INFO ] 2019-04-30 18:33:46.562 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 246, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Rib Eye Steak', dateTimeCreated = 2019-04-30T18:33:46.540}
[INFO ] 2019-04-30 18:33:46.562 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-04-30 18:33:46.563 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-04-30 18:33:46.583 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Beef Wellington', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 9, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Pad Thai', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 246, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Rib Eye Steak', dateTimeCreated = 2019-04-30T18:33:47}]
[INFO ] 2019-04-30 18:33:46.583 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-04-30 18:33:46.583 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-04-30 18:33:46.600 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Bibimbap', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 11, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Fried Chicken', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-04-30 18:33:46.601 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:33:46.609 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:33:46.663 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 18:33:46.664 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-04-30 18:33:46.664 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:33:46.671 [main] GenericDao - **********Query by ID Found: User{userId ='4', firstName ='Black', lastName ='Widow', userName ='Tester4', userPassword ='Test4'}
[INFO ] 2019-04-30 18:33:46.671 [main] GenericDao - **********Attempting to delete: User{userId ='4', firstName ='Black', lastName ='Widow', userName ='Tester4', userPassword ='Test4'}
[INFO ] 2019-04-30 18:33:46.673 [main] GenericDao - **********Successfully deleted: User{userId ='4', firstName ='Black', lastName ='Widow', userName ='Tester4', userPassword ='Test4'}
[INFO ] 2019-04-30 18:33:46.678 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:33:46.684 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-30 18:33:46.731 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 18:33:46.731 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-30 18:33:46.732 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:33:46.745 [main] GenericDao - **********Query by ID Found: User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}
[INFO ] 2019-04-30 18:33:46.783 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 18:33:46.784 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-04-30 18:33:46.784 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:33:46.857 [main] GenericDao - **********Get All Query Found: [User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}, User{userId ='4', firstName ='Black', lastName ='Widow', userName ='Tester4', userPassword ='Test4'}, User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}]
[INFO ] 2019-04-30 18:33:46.897 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 18:33:46.897 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-04-30 18:33:46.898 [main] UserTest - -------Locale date time: 2019-04-30T18:33:46.898----------
[INFO ] 2019-04-30 18:33:46.898 [main] GenericDao - **********Attempting to insert a Entity: User{userId ='null', firstName ='Ham', lastName ='Burgler', userName ='CHzPlz', userPassword ='test'}
[INFO ] 2019-04-30 18:33:46.913 [main] GenericDao - **********Entity inserted: User{userId ='293', firstName ='Ham', lastName ='Burgler', userName ='CHzPlz', userPassword ='test'}
[INFO ] 2019-04-30 18:33:46.914 [main] GenericDao - **********Query database by using an ID: 293, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:33:46.923 [main] GenericDao - **********Query by ID Found: User{userId ='293', firstName ='Ham', lastName ='Burgler', userName ='CHzPlz', userPassword ='test'}
[INFO ] 2019-04-30 18:33:46.959 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 18:33:46.959 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-04-30 18:33:46.959 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId ='null', firstName ='Black', lastName ='Widow', userName ='WidowMaker', userPassword ='test33'}
[INFO ] 2019-04-30 18:33:46.966 [main] GenericDao - **********Saved|Updated entity: User{userId ='294', firstName ='Black', lastName ='Widow', userName ='WidowMaker', userPassword ='test33'}
[INFO ] 2019-04-30 18:33:46.966 [main] GenericDao - **********Query database by using an ID: 294, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:33:46.971 [main] GenericDao - **********Query by ID Found: User{userId ='294', firstName ='Black', lastName ='Widow', userName ='WidowMaker', userPassword ='test33'}
[INFO ] 2019-04-30 18:33:46.971 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:33:46.981 [main] GenericDao - **********Query by ID Found: User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}
[INFO ] 2019-04-30 18:33:46.981 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-04-30 18:33:46.982 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='CaptMarv33', userPassword ='Test6'}
[INFO ] 2019-04-30 18:33:46.996 [main] GenericDao - **********Saved|Updated entity: User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='CaptMarv33', userPassword ='Test6'}
[INFO ] 2019-04-30 18:33:46.997 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:33:47.006 [main] GenericDao - **********Query by ID Found: User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='CaptMarv33', userPassword ='Test6'}
[INFO ] 2019-04-30 18:33:47.043 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 18:33:47.044 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-04-30 18:33:47.044 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:33:47.062 [main] GenericDao - **********Query by Last Name Found: [User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}]
[INFO ] 2019-04-30 18:33:47.062 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:33:47.090 [main] GenericDao - **********Query by Last Name Found: [User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}]
[INFO ] 2019-04-30 18:33:47.135 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 18:33:47.135 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-04-30 18:33:47.136 [main] GenericDao - **********Attempting to insert a Entity: User{userId ='null', firstName ='Thor', lastName ='Odinson', userName ='Tester7', userPassword ='test'}
[INFO ] 2019-04-30 18:33:47.143 [main] GenericDao - **********Entity inserted: User{userId ='295', firstName ='Thor', lastName ='Odinson', userName ='Tester7', userPassword ='test'}
[INFO ] 2019-04-30 18:33:47.143 [main] GenericDao - **********Query database by using an ID: 295, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:33:47.148 [main] GenericDao - **********Query by ID Found: User{userId ='295', firstName ='Thor', lastName ='Odinson', userName ='Tester7', userPassword ='test'}
[INFO ] 2019-04-30 18:34:19.361 [http-nio-8080-exec-7] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-04-30 18:34:24.421 [http-nio-8080-exec-7] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 1, ingredientId = 2, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 1, ingredientId = 3, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 18:34:24.422 [http-nio-8080-exec-7] SearchGrocerylist - Grocery List Object Results from Search by Grocery List Name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 1, ingredientId = 2, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 1, ingredientId = 3, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 18:35:51.101 [http-nio-8080-exec-10] GenericDao - **********Querying grocery list by grocery list name: Week 2
[INFO ] 2019-04-30 18:35:51.107 [http-nio-8080-exec-10] GenericDao - **********Query found grocery lists by grocery list name: []
[INFO ] 2019-04-30 18:35:51.107 [http-nio-8080-exec-10] SearchGrocerylist - Grocery List Object Results from Search by Grocery List Name: []
[INFO ] 2019-04-30 18:36:37.072 [http-nio-8080-exec-4] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-04-30 18:36:37.146 [http-nio-8080-exec-4] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 9, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 6, ingredientId = 3, user_id = 10, recipe_id = 3, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 1, ingredientId = 2, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 1, ingredientId = 3, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 18:37:20.458 [http-nio-8080-exec-9] GenericDao - **********Querying grocery list by grocery list name: week 1
[INFO ] 2019-04-30 18:37:20.503 [http-nio-8080-exec-9] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 1, ingredientId = 2, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 1, ingredientId = 3, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 18:37:20.504 [http-nio-8080-exec-9] SearchGrocerylist - Grocery List Object Results from Search by Grocery List Name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 1, ingredientId = 2, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 1, ingredientId = 3, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 18:40:14.068 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-30 18:40:14.078 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-04-30 18:40:14.079 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-04-30 18:40:16.575 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 18:40:16.644 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-30 18:40:16.644 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-04-30 18:40:16.645 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-04-30 18:40:16.707 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 18:40:16.708 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 18:40:16.800 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 18:40:16.800 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-04-30 18:40:16.801 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 18:40:16.835 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:40:16.836 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:40:16.836 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 18:40:16.850 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:40:16.851 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:40:16.868 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:40:16.901 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 18:40:16.905 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-30 18:40:16.954 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 18:40:16.955 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-30 18:40:16.955 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 18:40:16.971 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}, recipeTitle = Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:40:17.012 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 18:40:17.013 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-04-30 18:40:17.014 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:40:17.027 [main] GenericDao - **********Query by ID Found: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-04-30 18:40:17.027 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:40:17.037 [main] GenericDao - **********Query by ID Found: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-04-30 18:40:17.037 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-04-30 18:40:17.038 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:40:17.049 [main] GenericDao - **********Query by ID Found: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-04-30 18:40:17.049 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Pepperoni Pizza', dateTimeCreated = 2019-04-30T18:40:17.014}
[INFO ] 2019-04-30 18:40:17.072 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 248, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Pepperoni Pizza', dateTimeCreated = 2019-04-30T18:40:17.014}
[INFO ] 2019-04-30 18:40:17.072 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 248, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Pepperoni Pizza', dateTimeCreated = 2019-04-30T18:40:17.014}
[INFO ] 2019-04-30 18:40:17.109 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 18:40:17.109 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-04-30 18:40:17.110 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:40:17.130 [main] GenericDao - **********Query by Last Name Found: [User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}]
[INFO ] 2019-04-30 18:40:17.131 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-30 18:40:17.151 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Tacos', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 2, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Shrimp Larb', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-04-30 18:40:17.151 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Tacos', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 2, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Shrimp Larb', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-04-30 18:40:17.195 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 18:40:17.196 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-30 18:40:17.207 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Tacos', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 2, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Shrimp Larb', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-04-30 18:40:17.241 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 18:40:17.242 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-04-30 18:40:17.242 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 18:40:17.290 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Tacos', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 2, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Shrimp Larb', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 4, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 6, user = User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}, recipeTitle = Lamb Shank', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 7, user = User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}, recipeTitle = Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 8, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Beef Wellington', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 9, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Pad Thai', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 10, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Bibimbap', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 11, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Fried Chicken', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-04-30 18:40:17.330 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 18:40:17.330 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-04-30 18:40:17.331 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:40:17.343 [main] GenericDao - **********Query by ID Found: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-04-30 18:40:17.344 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Rib Eye Steak', dateTimeCreated = 2019-04-30T18:40:17.331}
[INFO ] 2019-04-30 18:40:17.344 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Rib Eye Steak', dateTimeCreated = 2019-04-30T18:40:17.331}
[INFO ] 2019-04-30 18:40:17.352 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 249, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Rib Eye Steak', dateTimeCreated = 2019-04-30T18:40:17.331}
[INFO ] 2019-04-30 18:40:17.352 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-04-30 18:40:17.353 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-04-30 18:40:17.370 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Beef Wellington', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 9, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Pad Thai', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 249, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Rib Eye Steak', dateTimeCreated = 2019-04-30T18:40:17}]
[INFO ] 2019-04-30 18:40:17.371 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-04-30 18:40:17.371 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-04-30 18:40:17.383 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Bibimbap', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 11, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Fried Chicken', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-04-30 18:40:17.383 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:40:17.396 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 18:40:17.455 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 18:40:17.456 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-04-30 18:40:17.456 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:40:17.461 [main] GenericDao - **********Query by ID Found: User{userId ='4', firstName ='Black', lastName ='Widow', userName ='Tester4', userPassword ='Test4'}
[INFO ] 2019-04-30 18:40:17.462 [main] GenericDao - **********Attempting to delete: User{userId ='4', firstName ='Black', lastName ='Widow', userName ='Tester4', userPassword ='Test4'}
[INFO ] 2019-04-30 18:40:17.464 [main] GenericDao - **********Successfully deleted: User{userId ='4', firstName ='Black', lastName ='Widow', userName ='Tester4', userPassword ='Test4'}
[INFO ] 2019-04-30 18:40:17.468 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:40:17.473 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-30 18:40:17.509 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 18:40:17.509 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-30 18:40:17.510 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:40:17.520 [main] GenericDao - **********Query by ID Found: User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}
[INFO ] 2019-04-30 18:40:17.561 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 18:40:17.561 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-04-30 18:40:17.562 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:40:17.621 [main] GenericDao - **********Get All Query Found: [User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}, User{userId ='4', firstName ='Black', lastName ='Widow', userName ='Tester4', userPassword ='Test4'}, User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}]
[INFO ] 2019-04-30 18:40:17.660 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 18:40:17.660 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-04-30 18:40:17.660 [main] UserTest - -------Locale date time: 2019-04-30T18:40:17.660----------
[INFO ] 2019-04-30 18:40:17.661 [main] GenericDao - **********Attempting to insert a Entity: User{userId ='null', firstName ='Ham', lastName ='Burgler', userName ='CHzPlz', userPassword ='test'}
[INFO ] 2019-04-30 18:40:17.669 [main] GenericDao - **********Entity inserted: User{userId ='296', firstName ='Ham', lastName ='Burgler', userName ='CHzPlz', userPassword ='test'}
[INFO ] 2019-04-30 18:40:17.669 [main] GenericDao - **********Query database by using an ID: 296, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:40:17.675 [main] GenericDao - **********Query by ID Found: User{userId ='296', firstName ='Ham', lastName ='Burgler', userName ='CHzPlz', userPassword ='test'}
[INFO ] 2019-04-30 18:40:17.707 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 18:40:17.707 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-04-30 18:40:17.707 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId ='null', firstName ='Black', lastName ='Widow', userName ='WidowMaker', userPassword ='test33'}
[INFO ] 2019-04-30 18:40:17.712 [main] GenericDao - **********Saved|Updated entity: User{userId ='297', firstName ='Black', lastName ='Widow', userName ='WidowMaker', userPassword ='test33'}
[INFO ] 2019-04-30 18:40:17.712 [main] GenericDao - **********Query database by using an ID: 297, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:40:17.716 [main] GenericDao - **********Query by ID Found: User{userId ='297', firstName ='Black', lastName ='Widow', userName ='WidowMaker', userPassword ='test33'}
[INFO ] 2019-04-30 18:40:17.716 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:40:17.723 [main] GenericDao - **********Query by ID Found: User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}
[INFO ] 2019-04-30 18:40:17.723 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-04-30 18:40:17.723 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='CaptMarv33', userPassword ='Test6'}
[INFO ] 2019-04-30 18:40:17.731 [main] GenericDao - **********Saved|Updated entity: User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='CaptMarv33', userPassword ='Test6'}
[INFO ] 2019-04-30 18:40:17.732 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:40:17.739 [main] GenericDao - **********Query by ID Found: User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='CaptMarv33', userPassword ='Test6'}
[INFO ] 2019-04-30 18:40:17.771 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 18:40:17.771 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-04-30 18:40:17.772 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:40:17.783 [main] GenericDao - **********Query by Last Name Found: [User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}]
[INFO ] 2019-04-30 18:40:17.784 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:40:17.803 [main] GenericDao - **********Query by Last Name Found: [User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}]
[INFO ] 2019-04-30 18:40:17.834 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 18:40:17.834 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-04-30 18:40:17.834 [main] GenericDao - **********Attempting to insert a Entity: User{userId ='null', firstName ='Thor', lastName ='Odinson', userName ='Tester7', userPassword ='test'}
[INFO ] 2019-04-30 18:40:17.839 [main] GenericDao - **********Entity inserted: User{userId ='298', firstName ='Thor', lastName ='Odinson', userName ='Tester7', userPassword ='test'}
[INFO ] 2019-04-30 18:40:17.839 [main] GenericDao - **********Query database by using an ID: 298, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:40:17.843 [main] GenericDao - **********Query by ID Found: User{userId ='298', firstName ='Thor', lastName ='Odinson', userName ='Tester7', userPassword ='test'}
[INFO ] 2019-04-30 18:40:50.789 [http-nio-8080-exec-5] GenericDao - **********Querying grocery list by grocery list name: week 1
[INFO ] 2019-04-30 18:40:55.475 [http-nio-8080-exec-5] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 1, ingredientId = 2, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 1, ingredientId = 3, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 18:40:55.476 [http-nio-8080-exec-5] SearchGrocerylist - Grocery List Object Results from Search by Grocery List Name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 1, ingredientId = 2, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 1, ingredientId = 3, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 18:41:07.088 [http-nio-8080-exec-9] GenericDao - **********Querying grocery list by grocery list name: week 1
[INFO ] 2019-04-30 18:41:07.139 [http-nio-8080-exec-9] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 1, ingredientId = 2, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 1, ingredientId = 3, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 18:41:07.140 [http-nio-8080-exec-9] SearchGrocerylist - Grocery List Object Results from Search by Grocery List Name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 1, ingredientId = 2, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 1, ingredientId = 3, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 18:42:14.788 [http-nio-8080-exec-3] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-04-30 18:42:14.853 [http-nio-8080-exec-3] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 9, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 6, ingredientId = 3, user_id = 10, recipe_id = 3, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 1, ingredientId = 2, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 1, ingredientId = 3, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 18:46:20.137 [http-nio-8080-exec-6] GenericDao - **********Querying grocery list by grocery list name: week 1
[INFO ] 2019-04-30 18:46:20.197 [http-nio-8080-exec-6] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 1, ingredientId = 2, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 1, ingredientId = 3, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 18:46:20.198 [http-nio-8080-exec-6] SearchGrocerylist - Grocery List Object Results from Search by Grocery List Name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 1, ingredientId = 2, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 1, ingredientId = 3, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 18:46:25.715 [http-nio-8080-exec-10] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-04-30 18:46:25.778 [http-nio-8080-exec-10] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 9, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 6, ingredientId = 3, user_id = 10, recipe_id = 3, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 1, ingredientId = 2, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 1, ingredientId = 3, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 18:46:44.037 [http-nio-8080-exec-1] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 18:46:44.102 [http-nio-8080-exec-1] GenericDao - **********Query by Last Name Found: [User{userId ='9', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='AdminMan'}]
[INFO ] 2019-04-30 18:46:44.102 [http-nio-8080-exec-1] GenericDao - **********Querying grocery list by user id: 9
[INFO ] 2019-04-30 18:46:44.120 [http-nio-8080-exec-1] GenericDao - *********Query found grocery lists by ID: [GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 9, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 18:46:44.120 [http-nio-8080-exec-1] SearchGrocerylist - Grocery List Object Results from Search by Last Name: [GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 9, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 18:47:11.621 [http-nio-8080-exec-3] GenericDao - **********Querying grocery list by grocery list name: week 5
[INFO ] 2019-04-30 18:47:11.644 [http-nio-8080-exec-3] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 9, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 18:47:11.645 [http-nio-8080-exec-3] SearchGrocerylist - Grocery List Object Results from Search by Grocery List Name: [GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 9, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 20:52:56.674 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-30 20:52:56.685 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-04-30 20:52:56.686 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-04-30 20:52:59.579 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 20:52:59.654 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-04-30 20:52:59.655 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-04-30 20:52:59.655 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-04-30 20:52:59.729 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 20:52:59.730 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 20:52:59.831 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 20:52:59.831 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-04-30 20:52:59.832 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 20:52:59.886 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 20:52:59.886 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 20:52:59.887 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 20:52:59.907 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 20:52:59.907 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 20:52:59.938 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 20:52:59.999 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 20:53:00.007 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-30 20:53:00.072 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 20:53:00.073 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-30 20:53:00.073 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 20:53:00.109 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}, recipeTitle = Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 20:53:00.173 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 20:53:00.174 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-04-30 20:53:00.175 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 20:53:00.196 [main] GenericDao - **********Query by ID Found: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-04-30 20:53:00.197 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 20:53:00.223 [main] GenericDao - **********Query by ID Found: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-04-30 20:53:00.224 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-04-30 20:53:00.224 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 20:53:00.247 [main] GenericDao - **********Query by ID Found: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-04-30 20:53:00.248 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Pepperoni Pizza', dateTimeCreated = 2019-04-30T20:53:00.175}
[INFO ] 2019-04-30 20:53:00.273 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 251, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Pepperoni Pizza', dateTimeCreated = 2019-04-30T20:53:00.175}
[INFO ] 2019-04-30 20:53:00.274 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 251, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Pepperoni Pizza', dateTimeCreated = 2019-04-30T20:53:00.175}
[INFO ] 2019-04-30 20:53:00.333 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 20:53:00.334 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-04-30 20:53:00.334 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 20:53:00.379 [main] GenericDao - **********Query by Last Name Found: [User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}]
[INFO ] 2019-04-30 20:53:00.380 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-30 20:53:00.405 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Tacos', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 2, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Shrimp Larb', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-04-30 20:53:00.405 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Tacos', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 2, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Shrimp Larb', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-04-30 20:53:00.502 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 20:53:00.503 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-04-30 20:53:00.514 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Tacos', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 2, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Shrimp Larb', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-04-30 20:53:00.567 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 20:53:00.568 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-04-30 20:53:00.568 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-04-30 20:53:00.635 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Tacos', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 2, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Shrimp Larb', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 4, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 6, user = User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}, recipeTitle = Lamb Shank', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 7, user = User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}, recipeTitle = Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 8, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Beef Wellington', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 9, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Pad Thai', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 10, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Bibimbap', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 11, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Fried Chicken', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-04-30 20:53:00.685 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-04-30 20:53:00.687 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-04-30 20:53:00.688 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 20:53:00.699 [main] GenericDao - **********Query by ID Found: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-04-30 20:53:00.700 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Rib Eye Steak', dateTimeCreated = 2019-04-30T20:53:00.687}
[INFO ] 2019-04-30 20:53:00.700 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Rib Eye Steak', dateTimeCreated = 2019-04-30T20:53:00.687}
[INFO ] 2019-04-30 20:53:00.713 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 252, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Rib Eye Steak', dateTimeCreated = 2019-04-30T20:53:00.687}
[INFO ] 2019-04-30 20:53:00.714 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-04-30 20:53:00.714 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-04-30 20:53:00.741 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Beef Wellington', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 9, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Pad Thai', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 252, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Rib Eye Steak', dateTimeCreated = 2019-04-30T20:53:01}]
[INFO ] 2019-04-30 20:53:00.741 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-04-30 20:53:00.741 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-04-30 20:53:00.757 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Bibimbap', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 11, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Fried Chicken', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-04-30 20:53:00.758 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 20:53:00.765 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-04-30 20:53:00.848 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 20:53:00.850 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-04-30 20:53:00.850 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 20:53:00.859 [main] GenericDao - **********Query by ID Found: User{userId ='4', firstName ='Black', lastName ='Widow', userName ='Tester4', userPassword ='Test4'}
[INFO ] 2019-04-30 20:53:00.859 [main] GenericDao - **********Attempting to delete: User{userId ='4', firstName ='Black', lastName ='Widow', userName ='Tester4', userPassword ='Test4'}
[INFO ] 2019-04-30 20:53:00.861 [main] GenericDao - **********Successfully deleted: User{userId ='4', firstName ='Black', lastName ='Widow', userName ='Tester4', userPassword ='Test4'}
[INFO ] 2019-04-30 20:53:00.876 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 20:53:00.882 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-04-30 20:53:00.942 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 20:53:00.943 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-04-30 20:53:00.944 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 20:53:00.965 [main] GenericDao - **********Query by ID Found: User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}
[INFO ] 2019-04-30 20:53:01.015 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 20:53:01.015 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-04-30 20:53:01.016 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-04-30 20:53:01.127 [main] GenericDao - **********Get All Query Found: [User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}, User{userId ='4', firstName ='Black', lastName ='Widow', userName ='Tester4', userPassword ='Test4'}, User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}]
[INFO ] 2019-04-30 20:53:01.170 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 20:53:01.170 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-04-30 20:53:01.171 [main] UserTest - -------Locale date time: 2019-04-30T20:53:01.171----------
[INFO ] 2019-04-30 20:53:01.171 [main] GenericDao - **********Attempting to insert a Entity: User{userId ='null', firstName ='Ham', lastName ='Burgler', userName ='CHzPlz', userPassword ='test'}
[INFO ] 2019-04-30 20:53:01.184 [main] GenericDao - **********Entity inserted: User{userId ='299', firstName ='Ham', lastName ='Burgler', userName ='CHzPlz', userPassword ='test'}
[INFO ] 2019-04-30 20:53:01.185 [main] GenericDao - **********Query database by using an ID: 299, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 20:53:01.199 [main] GenericDao - **********Query by ID Found: User{userId ='299', firstName ='Ham', lastName ='Burgler', userName ='CHzPlz', userPassword ='test'}
[INFO ] 2019-04-30 20:53:01.239 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 20:53:01.239 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-04-30 20:53:01.239 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId ='null', firstName ='Black', lastName ='Widow', userName ='WidowMaker', userPassword ='test33'}
[INFO ] 2019-04-30 20:53:01.248 [main] GenericDao - **********Saved|Updated entity: User{userId ='300', firstName ='Black', lastName ='Widow', userName ='WidowMaker', userPassword ='test33'}
[INFO ] 2019-04-30 20:53:01.248 [main] GenericDao - **********Query database by using an ID: 300, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 20:53:01.253 [main] GenericDao - **********Query by ID Found: User{userId ='300', firstName ='Black', lastName ='Widow', userName ='WidowMaker', userPassword ='test33'}
[INFO ] 2019-04-30 20:53:01.253 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 20:53:01.273 [main] GenericDao - **********Query by ID Found: User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}
[INFO ] 2019-04-30 20:53:01.273 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-04-30 20:53:01.273 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='CaptMarv33', userPassword ='Test6'}
[INFO ] 2019-04-30 20:53:01.287 [main] GenericDao - **********Saved|Updated entity: User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='CaptMarv33', userPassword ='Test6'}
[INFO ] 2019-04-30 20:53:01.288 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 20:53:01.298 [main] GenericDao - **********Query by ID Found: User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='CaptMarv33', userPassword ='Test6'}
[INFO ] 2019-04-30 20:53:01.356 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 20:53:01.356 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-04-30 20:53:01.356 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 20:53:01.379 [main] GenericDao - **********Query by Last Name Found: [User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}]
[INFO ] 2019-04-30 20:53:01.379 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 20:53:01.415 [main] GenericDao - **********Query by Last Name Found: [User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}]
[INFO ] 2019-04-30 20:53:01.456 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-04-30 20:53:01.457 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-04-30 20:53:01.457 [main] GenericDao - **********Attempting to insert a Entity: User{userId ='null', firstName ='Thor', lastName ='Odinson', userName ='Tester7', userPassword ='test'}
[INFO ] 2019-04-30 20:53:01.464 [main] GenericDao - **********Entity inserted: User{userId ='301', firstName ='Thor', lastName ='Odinson', userName ='Tester7', userPassword ='test'}
[INFO ] 2019-04-30 20:53:01.464 [main] GenericDao - **********Query database by using an ID: 301, of Type: class edu.matc.entity.User
[INFO ] 2019-04-30 20:53:01.473 [main] GenericDao - **********Query by ID Found: User{userId ='301', firstName ='Thor', lastName ='Odinson', userName ='Tester7', userPassword ='test'}
[INFO ] 2019-04-30 20:53:44.621 [http-nio-8080-exec-5] GenericDao - **********Querying grocery list by grocery list name: week 1
[INFO ] 2019-04-30 20:53:49.296 [http-nio-8080-exec-5] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 1, ingredientId = 2, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 1, ingredientId = 3, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-04-30 20:53:49.297 [http-nio-8080-exec-5] SearchGrocerylist - Grocery List Object Results from Search by Grocery List Name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 1, ingredientId = 2, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 1, ingredientId = 3, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 16:33:04.868 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 16:33:04.882 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 16:33:04.883 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 16:33:08.109 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 16:33:08.238 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 16:33:08.238 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 16:33:08.239 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 16:33:08.310 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 16:33:08.310 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 16:33:08.400 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 16:33:08.400 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 16:33:08.401 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 16:33:08.444 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-05-02 16:33:08.445 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-05-02 16:33:08.445 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 16:33:08.469 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-05-02 16:33:08.470 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-05-02 16:33:08.499 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-05-02 16:33:08.520 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 16:33:08.524 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 16:33:08.575 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 16:33:08.575 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 16:33:08.576 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 16:33:08.598 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}, recipeTitle = Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-05-02 16:33:08.675 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 16:33:08.676 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 16:33:08.676 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:33:08.742 [main] GenericDao - **********Query by ID Found: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-05-02 16:33:08.744 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:33:08.788 [main] GenericDao - **********Query by ID Found: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-05-02 16:33:08.788 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-05-02 16:33:08.788 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:33:08.803 [main] GenericDao - **********Query by ID Found: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-05-02 16:33:08.804 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Pepperoni Pizza', dateTimeCreated = 2019-05-02T16:33:08.676}
[INFO ] 2019-05-02 16:33:08.835 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 254, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Pepperoni Pizza', dateTimeCreated = 2019-05-02T16:33:08.676}
[INFO ] 2019-05-02 16:33:08.835 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 254, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Pepperoni Pizza', dateTimeCreated = 2019-05-02T16:33:08.676}
[INFO ] 2019-05-02 16:33:08.872 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 16:33:08.872 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 16:33:08.873 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:33:08.902 [main] GenericDao - **********Query by Last Name Found: [User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}]
[INFO ] 2019-05-02 16:33:08.902 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 16:33:08.928 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Tacos', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 2, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Shrimp Larb', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-05-02 16:33:08.928 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Tacos', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 2, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Shrimp Larb', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-05-02 16:33:08.971 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 16:33:08.972 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 16:33:08.984 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Tacos', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 2, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Shrimp Larb', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-05-02 16:33:09.039 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 16:33:09.040 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 16:33:09.041 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 16:33:09.094 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Tacos', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 2, user = User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, recipeTitle = Shrimp Larb', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 3, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 4, user = User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, recipeTitle = Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 6, user = User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}, recipeTitle = Lamb Shank', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 7, user = User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}, recipeTitle = Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 8, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Beef Wellington', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 9, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Pad Thai', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 10, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Bibimbap', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 11, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Fried Chicken', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-05-02 16:33:09.156 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 16:33:09.157 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 16:33:09.157 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:33:09.173 [main] GenericDao - **********Query by ID Found: User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}
[INFO ] 2019-05-02 16:33:09.173 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Rib Eye Steak', dateTimeCreated = 2019-05-02T16:33:09.157}
[INFO ] 2019-05-02 16:33:09.173 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Rib Eye Steak', dateTimeCreated = 2019-05-02T16:33:09.157}
[INFO ] 2019-05-02 16:33:09.184 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 255, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Rib Eye Steak', dateTimeCreated = 2019-05-02T16:33:09.157}
[INFO ] 2019-05-02 16:33:09.184 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 16:33:09.185 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 16:33:09.203 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Beef Wellington', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 9, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Pad Thai', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 255, user = User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, recipeTitle = Rib Eye Steak', dateTimeCreated = 2019-05-02T16:33:09}]
[INFO ] 2019-05-02 16:33:09.204 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 16:33:09.204 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 16:33:09.219 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Bibimbap', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 11, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Fried Chicken', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-05-02 16:33:09.220 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-05-02 16:33:09.230 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}, recipeTitle = Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53}
[INFO ] 2019-05-02 16:33:09.322 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 16:33:09.323 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 16:33:09.324 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:33:09.331 [main] GenericDao - **********Query by ID Found: User{userId ='4', firstName ='Black', lastName ='Widow', userName ='Tester4', userPassword ='Test4'}
[INFO ] 2019-05-02 16:33:09.332 [main] GenericDao - **********Attempting to delete: User{userId ='4', firstName ='Black', lastName ='Widow', userName ='Tester4', userPassword ='Test4'}
[INFO ] 2019-05-02 16:33:09.333 [main] GenericDao - **********Successfully deleted: User{userId ='4', firstName ='Black', lastName ='Widow', userName ='Tester4', userPassword ='Test4'}
[INFO ] 2019-05-02 16:33:09.340 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:33:09.345 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 16:33:09.396 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 16:33:09.396 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 16:33:09.396 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:33:09.409 [main] GenericDao - **********Query by ID Found: User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}
[INFO ] 2019-05-02 16:33:09.449 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 16:33:09.449 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 16:33:09.449 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:33:09.520 [main] GenericDao - **********Get All Query Found: [User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}, User{userId ='2', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='Test2'}, User{userId ='3', firstName ='Captain', lastName ='America', userName ='Tester3', userPassword ='Test3'}, User{userId ='4', firstName ='Black', lastName ='Widow', userName ='Tester4', userPassword ='Test4'}, User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}]
[INFO ] 2019-05-02 16:33:09.570 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 16:33:09.570 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 16:33:09.571 [main] UserTest - -------Locale date time: 2019-05-02T16:33:09.571----------
[INFO ] 2019-05-02 16:33:09.573 [main] GenericDao - **********Attempting to insert a Entity: User{userId ='null', firstName ='Ham', lastName ='Burgler', userName ='CHzPlz', userPassword ='test'}
[INFO ] 2019-05-02 16:33:09.588 [main] GenericDao - **********Entity inserted: User{userId ='302', firstName ='Ham', lastName ='Burgler', userName ='CHzPlz', userPassword ='test'}
[INFO ] 2019-05-02 16:33:09.588 [main] GenericDao - **********Query database by using an ID: 302, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:33:09.598 [main] GenericDao - **********Query by ID Found: User{userId ='302', firstName ='Ham', lastName ='Burgler', userName ='CHzPlz', userPassword ='test'}
[INFO ] 2019-05-02 16:33:09.658 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 16:33:09.661 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 16:33:09.661 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId ='null', firstName ='Black', lastName ='Widow', userName ='WidowMaker', userPassword ='test33'}
[INFO ] 2019-05-02 16:33:09.670 [main] GenericDao - **********Saved|Updated entity: User{userId ='303', firstName ='Black', lastName ='Widow', userName ='WidowMaker', userPassword ='test33'}
[INFO ] 2019-05-02 16:33:09.671 [main] GenericDao - **********Query database by using an ID: 303, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:33:09.676 [main] GenericDao - **********Query by ID Found: User{userId ='303', firstName ='Black', lastName ='Widow', userName ='WidowMaker', userPassword ='test33'}
[INFO ] 2019-05-02 16:33:09.676 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:33:09.691 [main] GenericDao - **********Query by ID Found: User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}
[INFO ] 2019-05-02 16:33:09.691 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 16:33:09.691 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='CaptMarv33', userPassword ='Test6'}
[INFO ] 2019-05-02 16:33:09.702 [main] GenericDao - **********Saved|Updated entity: User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='CaptMarv33', userPassword ='Test6'}
[INFO ] 2019-05-02 16:33:09.702 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:33:09.713 [main] GenericDao - **********Query by ID Found: User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='CaptMarv33', userPassword ='Test6'}
[INFO ] 2019-05-02 16:33:09.752 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 16:33:09.752 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 16:33:09.753 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:33:09.766 [main] GenericDao - **********Query by Last Name Found: [User{userId ='1', firstName ='Incredible', lastName ='Hulk', userName ='Tester1', userPassword ='Test1'}]
[INFO ] 2019-05-02 16:33:09.766 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:33:09.789 [main] GenericDao - **********Query by Last Name Found: [User{userId ='5', firstName ='Ant', lastName ='Man', userName ='Tester5', userPassword ='Test5'}, User{userId ='6', firstName ='Captain', lastName ='Marvel', userName ='Tester6', userPassword ='Test6'}]
[INFO ] 2019-05-02 16:33:09.832 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 16:33:09.833 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 16:33:09.833 [main] GenericDao - **********Attempting to insert a Entity: User{userId ='null', firstName ='Thor', lastName ='Odinson', userName ='Tester7', userPassword ='test'}
[INFO ] 2019-05-02 16:33:09.841 [main] GenericDao - **********Entity inserted: User{userId ='304', firstName ='Thor', lastName ='Odinson', userName ='Tester7', userPassword ='test'}
[INFO ] 2019-05-02 16:33:09.842 [main] GenericDao - **********Query database by using an ID: 304, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:33:09.849 [main] GenericDao - **********Query by ID Found: User{userId ='304', firstName ='Thor', lastName ='Odinson', userName ='Tester7', userPassword ='test'}
[INFO ] 2019-05-02 16:34:03.274 [http-nio-8080-exec-8] GenericDao - **********Querying grocery list by grocery list name: week 1
[INFO ] 2019-05-02 16:34:08.899 [http-nio-8080-exec-8] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 1, ingredientId = 2, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 1, ingredientId = 3, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 16:34:08.900 [http-nio-8080-exec-8] SearchGrocerylist - Grocery List Object Results from Search by Grocery List Name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 1, ingredientId = 2, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 1, ingredientId = 3, user_id = 11, recipe_id = 7, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 16:34:41.632 [http-nio-8080-exec-3] AddUserPage - User requested to add: User{userId ='null', firstName ='Emilie', lastName ='Klos', userName ='Eklos', userPassword ='password'}
[INFO ] 2019-05-02 16:34:41.633 [http-nio-8080-exec-3] UserDao - **********Attempting to insert a user into the database: User{userId ='null', firstName ='Emilie', lastName ='Klos', userName ='Eklos', userPassword ='password'}
[INFO ] 2019-05-02 16:34:41.742 [http-nio-8080-exec-3] UserDao - **********User inserted: Eklos with user ID: 20
[INFO ] 2019-05-02 16:35:03.130 [http-nio-8080-exec-9] UserDao - **********Querying User by ID: 20
[INFO ] 2019-05-02 16:35:03.159 [http-nio-8080-exec-9] UserDao - **********Query Found ID : 20
[INFO ] 2019-05-02 16:35:03.161 [http-nio-8080-exec-9] DeleteUserPage - User ID requested to delete: User{userId ='20', firstName ='Emilie', lastName ='Klos', userName ='Eklos', userPassword ='password'}
[INFO ] 2019-05-02 16:35:03.161 [http-nio-8080-exec-9] UserDao - **********Querying User by ID: 20
[INFO ] 2019-05-02 16:35:03.172 [http-nio-8080-exec-9] UserDao - **********Query Found ID : 20
[INFO ] 2019-05-02 16:35:03.172 [http-nio-8080-exec-9] UserDao - **********Attempting to delete user from database: Eklos with ID: 20
[INFO ] 2019-05-02 16:35:03.269 [http-nio-8080-exec-9] UserDao - **********Successfully deleted user: Eklos with ID: 20
[INFO ] 2019-05-02 16:35:46.891 [http-nio-8080-exec-5] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:35:46.936 [http-nio-8080-exec-5] GenericDao - **********Query by Last Name Found: [User{userId ='9', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='AdminMan'}]
[INFO ] 2019-05-02 16:35:46.936 [http-nio-8080-exec-5] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 16:35:46.959 [http-nio-8080-exec-5] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId ='9', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='AdminMan'}, recipeTitle = Shrimp Larb', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 3, user = User{userId ='9', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='AdminMan'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-05-02 16:35:46.959 [http-nio-8080-exec-5] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId ='9', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='AdminMan'}, recipeTitle = Shrimp Larb', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 3, user = User{userId ='9', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='AdminMan'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-05-02 16:38:31.268 [http-nio-8080-exec-8] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:38:31.287 [http-nio-8080-exec-8] GenericDao - **********Query by Last Name Found: [User{userId ='9', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='AdminMan'}]
[INFO ] 2019-05-02 16:38:31.287 [http-nio-8080-exec-8] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 16:38:31.298 [http-nio-8080-exec-8] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId ='9', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='AdminMan'}, recipeTitle = Shrimp Larb', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 3, user = User{userId ='9', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='AdminMan'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-05-02 16:38:31.298 [http-nio-8080-exec-8] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId ='9', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='AdminMan'}, recipeTitle = Shrimp Larb', dateTimeCreated = 2019-03-03T13:53}, UserRecipes{recipeId = 3, user = User{userId ='9', firstName ='Peter', lastName ='Parker', userName ='Tester2', userPassword ='AdminMan'}, recipeTitle = Nachos', dateTimeCreated = 2019-03-03T13:53}]
[INFO ] 2019-05-02 16:45:24.607 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 16:45:24.620 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 16:45:24.621 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 16:45:27.702 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 16:45:27.772 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 16:45:27.773 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 16:45:27.773 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 16:45:27.849 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 16:45:27.849 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 16:45:27.953 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 16:45:27.954 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 16:45:27.955 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 16:45:27.999 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }
[INFO ] 2019-05-02 16:45:28.000 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }
[INFO ] 2019-05-02 16:45:28.001 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 16:45:28.017 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }
[INFO ] 2019-05-02 16:45:28.018 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }
[INFO ] 2019-05-02 16:45:28.039 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }
[INFO ] 2019-05-02 16:45:28.069 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 16:45:28.077 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 16:45:28.123 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 16:45:28.123 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 16:45:28.124 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 16:45:28.142 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }
[INFO ] 2019-05-02 16:45:28.184 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 16:45:28.185 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 16:45:28.185 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:45:28.202 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 16:45:28.202 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:45:28.216 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 16:45:28.216 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 16:45:28.217 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:45:28.229 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 16:45:28.229 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T16:45:28.185, ingredients = { []} }
[INFO ] 2019-05-02 16:45:28.257 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 257, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T16:45:28.185, ingredients = { []} }
[INFO ] 2019-05-02 16:45:28.257 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 257, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T16:45:28.185, ingredients = { []} }
[INFO ] 2019-05-02 16:45:28.311 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 16:45:28.311 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 16:45:28.311 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:45:28.342 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 16:45:28.342 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 16:45:28.370 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }]
[INFO ] 2019-05-02 16:45:28.371 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }]
[INFO ] 2019-05-02 16:45:28.425 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 16:45:28.426 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 16:45:28.442 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }]
[INFO ] 2019-05-02 16:45:28.487 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 16:45:28.487 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 16:45:28.487 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 16:45:28.543 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }]
[INFO ] 2019-05-02 16:45:28.595 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 16:45:28.595 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 16:45:28.596 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:45:28.605 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 16:45:28.605 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T16:45:28.596, ingredients = { []} }
[INFO ] 2019-05-02 16:45:28.605 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T16:45:28.596, ingredients = { []} }
[INFO ] 2019-05-02 16:45:28.614 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 258, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T16:45:28.596, ingredients = { []} }
[INFO ] 2019-05-02 16:45:28.615 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 16:45:28.616 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 16:45:28.648 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }, UserRecipes{recipeId = 258, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T16:45:29, ingredients = { []} }]
[INFO ] 2019-05-02 16:45:28.648 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 16:45:28.649 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 16:45:28.663 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }]
[INFO ] 2019-05-02 16:45:28.664 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }
[INFO ] 2019-05-02 16:45:28.678 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }
[INFO ] 2019-05-02 16:45:28.746 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 16:45:28.747 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 16:45:28.747 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:45:28.755 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 16:45:28.755 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 16:45:28.758 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 16:45:28.764 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:45:28.768 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 16:45:28.811 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 16:45:28.811 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 16:45:28.812 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:45:28.823 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-02 16:45:28.864 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 16:45:28.865 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 16:45:28.865 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:45:28.933 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 16:45:28.974 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 16:45:28.975 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 16:45:28.975 [main] UserTest - -------Locale date time: 2019-05-02T16:45:28.975----------
[INFO ] 2019-05-02 16:45:28.975 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 16:45:28.987 [main] GenericDao - **********Entity inserted: User{userId = '305', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 16:45:28.988 [main] GenericDao - **********Query database by using an ID: 305, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:45:28.995 [main] GenericDao - **********Query by ID Found: User{userId = '305', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 16:45:29.033 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 16:45:29.034 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 16:45:29.034 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 16:45:29.039 [main] GenericDao - **********Saved|Updated entity: User{userId = '306', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 16:45:29.039 [main] GenericDao - **********Query database by using an ID: 306, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:45:29.044 [main] GenericDao - **********Query by ID Found: User{userId = '306', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 16:45:29.045 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:45:29.052 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-02 16:45:29.053 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 16:45:29.053 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 16:45:29.064 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 16:45:29.065 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:45:29.078 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 16:45:29.116 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 16:45:29.117 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 16:45:29.117 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:45:29.135 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 16:45:29.136 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:45:29.165 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 16:45:29.209 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 16:45:29.210 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 16:45:29.210 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 16:45:29.217 [main] GenericDao - **********Entity inserted: User{userId = '307', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 16:45:29.217 [main] GenericDao - **********Query database by using an ID: 307, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:45:29.222 [main] GenericDao - **********Query by ID Found: User{userId = '307', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 16:50:13.814 [http-nio-8080-exec-9] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 16:50:19.166 [http-nio-8080-exec-9] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 16:50:19.166 [http-nio-8080-exec-9] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 16:50:19.205 [http-nio-8080-exec-9] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }]
[INFO ] 2019-05-02 16:50:19.206 [http-nio-8080-exec-9] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = { []} }]
[INFO ] 2019-05-02 17:01:30.046 [http-nio-8080-exec-1] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:01:30.096 [http-nio-8080-exec-1] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 17:01:30.096 [http-nio-8080-exec-1] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 17:01:40.892 [http-nio-8080-exec-2] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:01:40.927 [http-nio-8080-exec-2] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 17:01:40.927 [http-nio-8080-exec-2] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 17:02:06.316 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 17:02:06.329 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 17:02:06.329 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 17:02:09.373 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:02:09.498 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 17:02:09.499 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 17:02:09.500 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 17:02:09.568 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:02:09.568 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:02:09.738 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:02:09.738 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 17:02:09.739 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:02:09.778 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }
[INFO ] 2019-05-02 17:02:09.779 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }
[INFO ] 2019-05-02 17:02:09.779 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:02:09.796 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }
[INFO ] 2019-05-02 17:02:09.796 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }
[INFO ] 2019-05-02 17:02:09.813 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }
[INFO ] 2019-05-02 17:02:09.862 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:02:09.881 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 17:02:09.947 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:02:09.959 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 17:02:09.967 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:02:10.048 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }
[INFO ] 2019-05-02 17:02:10.129 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:02:10.129 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 17:02:10.131 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:02:10.145 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:02:10.146 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:02:10.159 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:02:10.160 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:02:10.160 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:02:10.176 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:02:10.181 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:02:10.131, ingredients = {[]} }
[INFO ] 2019-05-02 17:02:10.208 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 260, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:02:10.131, ingredients = {[]} }
[INFO ] 2019-05-02 17:02:10.208 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 260, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:02:10.131, ingredients = {[]} }
[INFO ] 2019-05-02 17:02:10.289 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:02:10.290 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 17:02:10.290 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:02:10.317 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 17:02:10.317 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 17:02:10.350 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }]
[INFO ] 2019-05-02 17:02:10.351 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }]
[INFO ] 2019-05-02 17:02:10.402 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:02:10.402 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 17:02:10.418 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }]
[INFO ] 2019-05-02 17:02:10.467 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:02:10.467 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 17:02:10.467 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:02:10.527 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }]
[INFO ] 2019-05-02 17:02:10.580 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:02:10.581 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 17:02:10.581 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:02:10.598 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:02:10.599 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:02:10.581, ingredients = {[]} }
[INFO ] 2019-05-02 17:02:10.599 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:02:10.581, ingredients = {[]} }
[INFO ] 2019-05-02 17:02:10.612 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 261, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:02:10.581, ingredients = {[]} }
[INFO ] 2019-05-02 17:02:10.612 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 17:02:10.613 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 17:02:10.635 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }, UserRecipes{recipeId = 261, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:02:11, ingredients = {[]} }]
[INFO ] 2019-05-02 17:02:10.635 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 17:02:10.635 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 17:02:10.650 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }]
[INFO ] 2019-05-02 17:02:10.651 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }
[INFO ] 2019-05-02 17:02:10.663 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }
[INFO ] 2019-05-02 17:02:10.746 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:02:10.747 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 17:02:10.747 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:02:10.757 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:02:10.757 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:02:10.760 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:02:10.769 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:02:10.773 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 17:02:10.814 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:02:10.815 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 17:02:10.815 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:02:10.825 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-02 17:02:10.879 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:02:10.880 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 17:02:10.880 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:02:10.982 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 17:02:11.044 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:02:11.044 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 17:02:11.045 [main] UserTest - -------Locale date time: 2019-05-02T17:02:11.045----------
[INFO ] 2019-05-02 17:02:11.045 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:02:11.058 [main] GenericDao - **********Entity inserted: User{userId = '308', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:02:11.058 [main] GenericDao - **********Query database by using an ID: 308, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:02:11.065 [main] GenericDao - **********Query by ID Found: User{userId = '308', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:02:11.102 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:02:11.103 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 17:02:11.103 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:02:11.112 [main] GenericDao - **********Saved|Updated entity: User{userId = '309', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:02:11.112 [main] GenericDao - **********Query database by using an ID: 309, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:02:11.119 [main] GenericDao - **********Query by ID Found: User{userId = '309', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:02:11.119 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:02:11.143 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:02:11.144 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 17:02:11.144 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:02:11.161 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:02:11.162 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:02:11.187 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:02:11.232 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:02:11.240 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 17:02:11.240 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:02:11.329 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 17:02:11.329 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:02:11.383 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 17:02:11.427 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:02:11.428 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 17:02:11.428 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:02:11.435 [main] GenericDao - **********Entity inserted: User{userId = '310', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:02:11.435 [main] GenericDao - **********Query database by using an ID: 310, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:02:11.441 [main] GenericDao - **********Query by ID Found: User{userId = '310', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:03:03.484 [http-nio-8080-exec-7] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:03:08.077 [http-nio-8080-exec-7] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 17:03:08.077 [http-nio-8080-exec-7] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 17:03:35.186 [http-nio-8080-exec-6] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:03:35.235 [http-nio-8080-exec-6] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 17:03:35.235 [http-nio-8080-exec-6] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 17:03:58.664 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 17:03:58.675 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 17:03:58.675 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 17:04:01.597 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:04:01.760 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 17:04:01.761 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 17:04:01.762 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 17:04:01.837 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:04:01.838 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:04:01.961 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:04:01.961 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 17:04:01.962 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:04:02.009 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }
[INFO ] 2019-05-02 17:04:02.009 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }
[INFO ] 2019-05-02 17:04:02.009 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:04:02.028 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }
[INFO ] 2019-05-02 17:04:02.029 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }
[INFO ] 2019-05-02 17:04:02.055 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }
[INFO ] 2019-05-02 17:04:02.082 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:04:02.087 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 17:04:02.131 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:04:02.132 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 17:04:02.132 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:04:02.147 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }
[INFO ] 2019-05-02 17:04:02.191 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:04:02.192 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 17:04:02.193 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:04:02.210 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:04:02.210 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:04:02.223 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:04:02.223 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:04:02.224 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:04:02.236 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:04:02.237 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:04:02.193, ingredients = {[]} }
[INFO ] 2019-05-02 17:04:02.263 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 263, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:04:02.193, ingredients = {[]} }
[INFO ] 2019-05-02 17:04:02.264 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 263, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:04:02.193, ingredients = {[]} }
[INFO ] 2019-05-02 17:04:02.315 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:04:02.315 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 17:04:02.316 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:04:02.339 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 17:04:02.340 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 17:04:02.364 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }]
[INFO ] 2019-05-02 17:04:02.365 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }]
[INFO ] 2019-05-02 17:04:02.416 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:04:02.416 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 17:04:02.435 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }]
[INFO ] 2019-05-02 17:04:02.480 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:04:02.481 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 17:04:02.481 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:04:02.539 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }]
[INFO ] 2019-05-02 17:04:02.588 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:04:02.588 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 17:04:02.589 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:04:02.601 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:04:02.601 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:04:02.589, ingredients = {[]} }
[INFO ] 2019-05-02 17:04:02.601 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:04:02.589, ingredients = {[]} }
[INFO ] 2019-05-02 17:04:02.612 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 264, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:04:02.589, ingredients = {[]} }
[INFO ] 2019-05-02 17:04:02.612 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 17:04:02.612 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 17:04:02.629 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }, UserRecipes{recipeId = 264, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:04:03, ingredients = {[]} }]
[INFO ] 2019-05-02 17:04:02.629 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 17:04:02.629 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 17:04:02.642 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }]
[INFO ] 2019-05-02 17:04:02.642 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }
[INFO ] 2019-05-02 17:04:02.650 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = {[]} }
[INFO ] 2019-05-02 17:04:02.735 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:04:02.735 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 17:04:02.735 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:04:02.741 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:04:02.741 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:04:02.743 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:04:02.748 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:04:02.754 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 17:04:02.795 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:04:02.795 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 17:04:02.795 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:04:02.805 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-02 17:04:02.843 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:04:02.843 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 17:04:02.843 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:04:02.930 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 17:04:02.979 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:04:02.980 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 17:04:02.980 [main] UserTest - -------Locale date time: 2019-05-02T17:04:02.980----------
[INFO ] 2019-05-02 17:04:02.980 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:04:03.013 [main] GenericDao - **********Entity inserted: User{userId = '311', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:04:03.014 [main] GenericDao - **********Query database by using an ID: 311, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:04:03.022 [main] GenericDao - **********Query by ID Found: User{userId = '311', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:04:03.066 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:04:03.066 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 17:04:03.066 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:04:03.073 [main] GenericDao - **********Saved|Updated entity: User{userId = '312', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:04:03.073 [main] GenericDao - **********Query database by using an ID: 312, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:04:03.078 [main] GenericDao - **********Query by ID Found: User{userId = '312', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:04:03.078 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:04:03.085 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:04:03.086 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 17:04:03.086 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:04:03.095 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:04:03.095 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:04:03.103 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:04:03.169 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:04:03.170 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 17:04:03.170 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:04:03.230 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 17:04:03.231 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:04:03.273 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 17:04:03.332 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:04:03.334 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 17:04:03.334 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:04:03.344 [main] GenericDao - **********Entity inserted: User{userId = '313', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:04:03.344 [main] GenericDao - **********Query database by using an ID: 313, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:04:03.351 [main] GenericDao - **********Query by ID Found: User{userId = '313', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:04:42.927 [http-nio-8080-exec-7] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:04:48.024 [http-nio-8080-exec-7] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 17:04:48.025 [http-nio-8080-exec-7] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 17:05:34.596 [http-nio-8080-exec-10] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:05:34.635 [http-nio-8080-exec-10] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 17:11:19.618 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 17:11:19.629 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 17:11:19.630 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 17:11:22.305 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:11:22.402 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 17:11:22.404 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 17:11:22.404 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 17:11:22.465 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:11:22.466 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:11:22.563 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:11:22.564 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 17:11:22.564 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:11:22.599 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:11:22.600 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:11:22.600 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:11:22.620 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:11:22.620 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:11:22.641 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:11:22.663 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:11:22.668 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 17:11:22.708 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:11:22.709 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 17:11:22.709 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:11:22.724 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:11:22.768 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:11:22.769 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 17:11:22.771 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:11:22.784 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:11:22.785 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:11:22.795 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:11:22.795 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:11:22.796 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:11:22.808 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:11:22.808 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:11:22.770, ingredients = []}
[INFO ] 2019-05-02 17:11:22.832 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 266, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:11:22.770, ingredients = []}
[INFO ] 2019-05-02 17:11:22.832 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 266, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:11:22.770, ingredients = []}
[INFO ] 2019-05-02 17:11:22.874 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:11:22.875 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 17:11:22.876 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:11:22.901 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 17:11:22.902 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 17:11:22.930 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:11:22.930 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:11:22.985 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:11:22.985 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 17:11:22.996 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:11:23.039 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:11:23.040 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 17:11:23.040 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:11:23.095 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:11:23.147 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:11:23.148 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 17:11:23.148 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:11:23.157 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:11:23.158 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:11:23.148, ingredients = []}
[INFO ] 2019-05-02 17:11:23.158 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:11:23.148, ingredients = []}
[INFO ] 2019-05-02 17:11:23.170 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 267, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:11:23.148, ingredients = []}
[INFO ] 2019-05-02 17:11:23.171 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 17:11:23.171 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 17:11:23.191 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 267, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:11:23, ingredients = []}]
[INFO ] 2019-05-02 17:11:23.191 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 17:11:23.192 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 17:11:23.203 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:11:23.204 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:11:23.211 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:11:23.280 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:11:23.280 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 17:11:23.280 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:11:23.289 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:11:23.289 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:11:23.291 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:11:23.296 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:11:23.302 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 17:11:23.347 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:11:23.348 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 17:11:23.348 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:11:23.357 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-02 17:11:23.408 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:11:23.409 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 17:11:23.409 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:11:23.467 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 17:11:23.511 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:11:23.511 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 17:11:23.511 [main] UserTest - -------Locale date time: 2019-05-02T17:11:23.511----------
[INFO ] 2019-05-02 17:11:23.512 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:11:23.524 [main] GenericDao - **********Entity inserted: User{userId = '314', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:11:23.525 [main] GenericDao - **********Query database by using an ID: 314, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:11:23.531 [main] GenericDao - **********Query by ID Found: User{userId = '314', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:11:23.578 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:11:23.578 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 17:11:23.579 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:11:23.588 [main] GenericDao - **********Saved|Updated entity: User{userId = '315', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:11:23.588 [main] GenericDao - **********Query database by using an ID: 315, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:11:23.596 [main] GenericDao - **********Query by ID Found: User{userId = '315', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:11:23.596 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:11:23.607 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:11:23.607 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 17:11:23.607 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:11:23.619 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:11:23.620 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:11:23.636 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:11:23.671 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:11:23.671 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 17:11:23.671 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:11:23.682 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 17:11:23.682 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:11:23.704 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 17:11:23.743 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:11:23.743 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 17:11:23.743 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:11:23.748 [main] GenericDao - **********Entity inserted: User{userId = '316', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:11:23.748 [main] GenericDao - **********Query database by using an ID: 316, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:11:23.754 [main] GenericDao - **********Query by ID Found: User{userId = '316', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:11:57.407 [http-nio-8080-exec-8] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:12:02.949 [http-nio-8080-exec-8] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 17:12:02.949 [http-nio-8080-exec-8] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 17:15:14.397 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 17:15:14.408 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 17:15:14.408 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 17:15:17.069 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:15:17.151 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 17:15:17.152 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 17:15:17.152 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 17:15:17.220 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:15:17.221 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:15:17.332 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:15:17.333 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 17:15:17.333 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:15:17.372 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:15:17.372 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:15:17.372 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:15:17.389 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:15:17.389 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:15:17.407 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:15:17.430 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:15:17.435 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 17:15:17.491 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:15:17.492 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 17:15:17.492 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:15:17.508 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:15:17.555 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:15:17.556 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 17:15:17.557 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:15:17.570 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:15:17.571 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:15:17.586 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:15:17.586 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:15:17.586 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:15:17.597 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:15:17.598 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:15:17.557, ingredients = []}
[INFO ] 2019-05-02 17:15:17.620 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 269, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:15:17.557, ingredients = []}
[INFO ] 2019-05-02 17:15:17.620 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 269, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:15:17.557, ingredients = []}
[INFO ] 2019-05-02 17:15:17.684 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:15:17.684 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 17:15:17.685 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:15:17.711 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 17:15:17.712 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 17:15:17.738 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:15:17.738 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:15:17.789 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:15:17.790 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 17:15:17.802 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:15:17.844 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:15:17.844 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 17:15:17.844 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:15:17.900 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:15:17.943 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:15:17.944 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 17:15:17.944 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:15:17.953 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:15:17.953 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:15:17.944, ingredients = []}
[INFO ] 2019-05-02 17:15:17.953 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:15:17.944, ingredients = []}
[INFO ] 2019-05-02 17:15:17.961 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 270, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:15:17.944, ingredients = []}
[INFO ] 2019-05-02 17:15:17.961 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 17:15:17.962 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 17:15:17.984 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 270, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:15:18, ingredients = []}]
[INFO ] 2019-05-02 17:15:17.984 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 17:15:17.984 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 17:15:18.000 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:15:18.001 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:15:18.010 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:15:18.072 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:15:18.074 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 17:15:18.074 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:15:18.083 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:15:18.084 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:15:18.086 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:15:18.092 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:15:18.097 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 17:15:18.141 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:15:18.141 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 17:15:18.141 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:15:18.154 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-02 17:15:18.195 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:15:18.196 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 17:15:18.196 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:15:18.263 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 17:15:18.308 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:15:18.309 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 17:15:18.309 [main] UserTest - -------Locale date time: 2019-05-02T17:15:18.309----------
[INFO ] 2019-05-02 17:15:18.310 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:15:18.320 [main] GenericDao - **********Entity inserted: User{userId = '317', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:15:18.321 [main] GenericDao - **********Query database by using an ID: 317, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:15:18.328 [main] GenericDao - **********Query by ID Found: User{userId = '317', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:15:18.367 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:15:18.368 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 17:15:18.368 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:15:18.376 [main] GenericDao - **********Saved|Updated entity: User{userId = '318', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:15:18.376 [main] GenericDao - **********Query database by using an ID: 318, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:15:18.381 [main] GenericDao - **********Query by ID Found: User{userId = '318', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:15:18.381 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:15:18.388 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:15:18.388 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 17:15:18.388 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:15:18.397 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:15:18.397 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:15:18.410 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:15:18.451 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:15:18.452 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 17:15:18.452 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:15:18.471 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 17:15:18.471 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:15:18.500 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 17:15:18.538 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:15:18.538 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 17:15:18.539 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:15:18.547 [main] GenericDao - **********Entity inserted: User{userId = '319', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:15:18.548 [main] GenericDao - **********Query database by using an ID: 319, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:15:18.553 [main] GenericDao - **********Query by ID Found: User{userId = '319', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:16:04.214 [http-nio-8080-exec-7] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:16:08.588 [http-nio-8080-exec-7] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 17:16:08.588 [http-nio-8080-exec-7] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 17:16:08.624 [http-nio-8080-exec-7] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:16:08.625 [http-nio-8080-exec-7] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:25:39.919 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 17:25:39.932 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 17:25:39.933 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 17:25:42.726 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:25:42.782 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 17:25:42.783 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 17:25:42.783 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 17:25:42.856 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:25:42.857 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:25:42.963 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:25:42.965 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 17:25:42.965 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:25:43.004 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:25:43.005 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:25:43.005 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:25:43.021 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:25:43.021 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:25:43.046 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:25:43.085 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:25:43.091 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 17:25:43.149 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:25:43.150 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 17:25:43.150 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:25:43.172 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:25:43.215 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:25:43.215 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 17:25:43.216 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:25:43.230 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:25:43.231 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:25:43.246 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:25:43.246 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:25:43.247 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:25:43.262 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:25:43.262 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:25:43.216, ingredients = []}
[INFO ] 2019-05-02 17:25:43.290 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 272, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:25:43.216, ingredients = []}
[INFO ] 2019-05-02 17:25:43.290 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 272, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:25:43.216, ingredients = []}
[INFO ] 2019-05-02 17:25:43.345 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:25:43.345 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 17:25:43.345 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:25:43.374 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 17:25:43.374 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 17:25:43.395 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:25:43.396 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:25:43.453 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:25:43.453 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 17:25:43.470 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:25:43.510 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:25:43.510 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 17:25:43.511 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:25:43.575 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:25:43.625 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:25:43.626 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 17:25:43.626 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:25:43.636 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:25:43.636 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:25:43.626, ingredients = []}
[INFO ] 2019-05-02 17:25:43.637 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:25:43.626, ingredients = []}
[INFO ] 2019-05-02 17:25:43.645 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 273, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:25:43.626, ingredients = []}
[INFO ] 2019-05-02 17:25:43.645 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 17:25:43.645 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 17:25:43.666 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 273, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:25:44, ingredients = []}]
[INFO ] 2019-05-02 17:25:43.667 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 17:25:43.667 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 17:25:43.684 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:25:43.685 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:25:43.696 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:25:43.761 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:25:43.762 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 17:25:43.762 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:25:43.768 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:25:43.768 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:25:43.772 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:25:43.779 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:25:43.784 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 17:25:43.834 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:25:43.835 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 17:25:43.835 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:25:43.843 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-02 17:25:43.888 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:25:43.889 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 17:25:43.889 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:25:43.972 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 17:25:44.032 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:25:44.033 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 17:25:44.033 [main] UserTest - -------Locale date time: 2019-05-02T17:25:44.033----------
[INFO ] 2019-05-02 17:25:44.033 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:25:44.043 [main] GenericDao - **********Entity inserted: User{userId = '320', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:25:44.043 [main] GenericDao - **********Query database by using an ID: 320, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:25:44.051 [main] GenericDao - **********Query by ID Found: User{userId = '320', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:25:44.089 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:25:44.089 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 17:25:44.090 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:25:44.096 [main] GenericDao - **********Saved|Updated entity: User{userId = '321', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:25:44.096 [main] GenericDao - **********Query database by using an ID: 321, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:25:44.101 [main] GenericDao - **********Query by ID Found: User{userId = '321', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:25:44.102 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:25:44.112 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:25:44.112 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 17:25:44.113 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:25:44.123 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:25:44.123 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:25:44.134 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:25:44.174 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:25:44.175 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 17:25:44.175 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:25:44.205 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 17:25:44.206 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:25:44.240 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 17:25:44.287 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:25:44.287 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 17:25:44.287 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:25:44.292 [main] GenericDao - **********Entity inserted: User{userId = '322', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:25:44.293 [main] GenericDao - **********Query database by using an ID: 322, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:25:44.297 [main] GenericDao - **********Query by ID Found: User{userId = '322', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:26:43.766 [http-nio-8080-exec-8] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:26:48.223 [http-nio-8080-exec-8] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 17:26:48.223 [http-nio-8080-exec-8] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 17:26:48.260 [http-nio-8080-exec-8] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:26:48.261 [http-nio-8080-exec-8] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:26:48.261 [http-nio-8080-exec-8] SearchRecipes - $$$$$$$$$ Working on finding the ingredients: [Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}]
[INFO ] 2019-05-02 17:29:38.265 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 17:29:38.274 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 17:29:38.274 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 17:29:40.923 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:29:41.021 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 17:29:41.022 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 17:29:41.022 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 17:29:41.085 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:29:41.086 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:29:41.202 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:29:41.203 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 17:29:41.203 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:29:41.243 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:29:41.244 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:29:41.244 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:29:41.259 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:29:41.259 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:29:41.281 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:29:41.326 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:29:41.331 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 17:29:41.380 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:29:41.381 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 17:29:41.381 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:29:41.399 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:29:41.446 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:29:41.447 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 17:29:41.449 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:29:41.461 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:29:41.462 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:29:41.471 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:29:41.472 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:29:41.472 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:29:41.485 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:29:41.485 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:29:41.449, ingredients = []}
[INFO ] 2019-05-02 17:29:41.511 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 275, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:29:41.449, ingredients = []}
[INFO ] 2019-05-02 17:29:41.511 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 275, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:29:41.449, ingredients = []}
[INFO ] 2019-05-02 17:29:41.561 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:29:41.562 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 17:29:41.562 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:29:41.585 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 17:29:41.586 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 17:29:41.612 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:29:41.613 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:29:41.664 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:29:41.665 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 17:29:41.682 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:29:41.725 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:29:41.725 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 17:29:41.725 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:29:41.785 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:29:41.825 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:29:41.825 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 17:29:41.826 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:29:41.839 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:29:41.839 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:29:41.826, ingredients = []}
[INFO ] 2019-05-02 17:29:41.840 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:29:41.826, ingredients = []}
[INFO ] 2019-05-02 17:29:41.846 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 276, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:29:41.826, ingredients = []}
[INFO ] 2019-05-02 17:29:41.846 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 17:29:41.847 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 17:29:41.864 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 276, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:29:42, ingredients = []}]
[INFO ] 2019-05-02 17:29:41.865 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 17:29:41.865 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 17:29:41.876 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:29:41.877 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:29:41.888 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:29:41.956 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:29:41.956 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 17:29:41.956 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:29:41.961 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:29:41.961 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:29:41.963 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:29:41.968 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:29:41.976 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 17:29:42.025 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:29:42.025 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 17:29:42.026 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:29:42.037 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-02 17:29:42.085 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:29:42.085 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 17:29:42.085 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:29:42.163 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 17:29:42.218 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:29:42.219 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 17:29:42.219 [main] UserTest - -------Locale date time: 2019-05-02T17:29:42.219----------
[INFO ] 2019-05-02 17:29:42.219 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:29:42.234 [main] GenericDao - **********Entity inserted: User{userId = '323', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:29:42.234 [main] GenericDao - **********Query database by using an ID: 323, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:29:42.240 [main] GenericDao - **********Query by ID Found: User{userId = '323', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:29:42.278 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:29:42.278 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 17:29:42.278 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:29:42.283 [main] GenericDao - **********Saved|Updated entity: User{userId = '324', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:29:42.283 [main] GenericDao - **********Query database by using an ID: 324, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:29:42.287 [main] GenericDao - **********Query by ID Found: User{userId = '324', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:29:42.287 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:29:42.297 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:29:42.297 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 17:29:42.298 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:29:42.308 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:29:42.309 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:29:42.316 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:29:42.357 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:29:42.357 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 17:29:42.357 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:29:42.373 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 17:29:42.373 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:29:42.399 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 17:29:42.443 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:29:42.444 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 17:29:42.445 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:29:42.452 [main] GenericDao - **********Entity inserted: User{userId = '325', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:29:42.453 [main] GenericDao - **********Query database by using an ID: 325, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:29:42.457 [main] GenericDao - **********Query by ID Found: User{userId = '325', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:41:11.896 [http-nio-8080-exec-7] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:41:16.513 [http-nio-8080-exec-7] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 17:41:16.513 [http-nio-8080-exec-7] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 17:41:16.558 [http-nio-8080-exec-7] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:41:16.559 [http-nio-8080-exec-7] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:41:16.559 [http-nio-8080-exec-7] SearchRecipes - $$$$$$$$$ Working on finding the ingredients: [Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}]
[INFO ] 2019-05-02 17:43:48.647 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 17:43:48.657 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 17:43:48.658 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 17:43:51.299 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:43:51.416 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 17:43:51.417 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 17:43:51.417 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 17:43:51.489 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:43:51.490 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:43:51.593 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:43:51.595 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 17:43:51.595 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:43:51.638 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:43:51.638 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:43:51.639 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:43:51.655 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:43:51.655 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:43:51.678 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:43:51.715 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:43:51.722 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 17:43:51.770 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:43:51.771 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 17:43:51.771 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:43:51.792 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:43:51.847 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:43:51.848 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 17:43:51.849 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:43:51.865 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:43:51.866 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:43:51.878 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:43:51.879 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:43:51.880 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:43:51.890 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:43:51.890 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:43:51.849, ingredients = []}
[INFO ] 2019-05-02 17:43:51.922 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 278, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:43:51.849, ingredients = []}
[INFO ] 2019-05-02 17:43:51.923 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 278, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:43:51.849, ingredients = []}
[INFO ] 2019-05-02 17:43:51.966 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:43:51.967 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 17:43:51.967 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:43:51.994 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 17:43:51.995 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 17:43:52.018 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:43:52.018 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:43:52.065 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:43:52.065 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 17:43:52.079 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:43:52.124 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:43:52.124 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 17:43:52.124 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:43:52.184 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:43:52.236 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:43:52.236 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 17:43:52.237 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:43:52.248 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:43:52.248 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:43:52.237, ingredients = []}
[INFO ] 2019-05-02 17:43:52.248 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:43:52.237, ingredients = []}
[INFO ] 2019-05-02 17:43:52.256 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 279, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:43:52.237, ingredients = []}
[INFO ] 2019-05-02 17:43:52.256 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 17:43:52.257 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 17:43:52.277 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 279, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:43:52, ingredients = []}]
[INFO ] 2019-05-02 17:43:52.278 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 17:43:52.278 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 17:43:52.296 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:43:52.296 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:43:52.306 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:43:52.371 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:43:52.372 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 17:43:52.372 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:43:52.377 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:43:52.378 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:43:52.380 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:43:52.390 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:43:52.394 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 17:43:52.434 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:43:52.434 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 17:43:52.435 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:43:52.446 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-02 17:43:52.488 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:43:52.488 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 17:43:52.488 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:43:52.567 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 17:43:52.621 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:43:52.621 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 17:43:52.622 [main] UserTest - -------Locale date time: 2019-05-02T17:43:52.622----------
[INFO ] 2019-05-02 17:43:52.622 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:43:52.635 [main] GenericDao - **********Entity inserted: User{userId = '326', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:43:52.635 [main] GenericDao - **********Query database by using an ID: 326, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:43:52.642 [main] GenericDao - **********Query by ID Found: User{userId = '326', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:43:52.678 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:43:52.679 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 17:43:52.679 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:43:52.685 [main] GenericDao - **********Saved|Updated entity: User{userId = '327', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:43:52.685 [main] GenericDao - **********Query database by using an ID: 327, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:43:52.689 [main] GenericDao - **********Query by ID Found: User{userId = '327', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:43:52.689 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:43:52.696 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:43:52.696 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 17:43:52.697 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:43:52.706 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:43:52.707 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:43:52.715 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:43:52.753 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:43:52.753 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 17:43:52.754 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:43:52.771 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 17:43:52.772 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:43:52.795 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 17:43:52.841 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:43:52.842 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 17:43:52.842 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:43:52.848 [main] GenericDao - **********Entity inserted: User{userId = '328', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:43:52.849 [main] GenericDao - **********Query database by using an ID: 328, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:43:52.854 [main] GenericDao - **********Query by ID Found: User{userId = '328', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:44:52.048 [http-nio-8080-exec-6] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:44:57.231 [http-nio-8080-exec-6] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 17:44:57.232 [http-nio-8080-exec-6] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 17:44:57.274 [http-nio-8080-exec-6] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:44:57.275 [http-nio-8080-exec-6] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:44:57.276 [http-nio-8080-exec-6] SearchRecipes - $$$$$$$$$ Working on finding the ingredients: [Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]
[INFO ] 2019-05-02 17:46:06.615 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 17:46:06.627 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 17:46:06.628 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 17:46:09.260 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:46:09.390 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 17:46:09.390 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 17:46:09.391 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 17:46:09.459 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:46:09.460 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:46:09.548 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:46:09.548 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 17:46:09.549 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:46:09.590 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:46:09.591 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:46:09.591 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:46:09.606 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:46:09.607 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:46:09.623 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:46:09.649 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:46:09.654 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 17:46:09.698 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:46:09.699 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 17:46:09.700 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:46:09.716 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:46:09.767 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:46:09.768 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 17:46:09.769 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:46:09.780 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:46:09.780 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:46:09.791 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:46:09.791 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:46:09.791 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:46:09.801 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:46:09.802 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:46:09.768, ingredients = []}
[INFO ] 2019-05-02 17:46:09.838 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 281, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:46:09.768, ingredients = []}
[INFO ] 2019-05-02 17:46:09.838 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 281, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:46:09.768, ingredients = []}
[INFO ] 2019-05-02 17:46:09.882 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:46:09.883 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 17:46:09.883 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:46:09.911 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 17:46:09.912 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 17:46:09.937 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:46:09.938 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:46:09.986 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:46:09.987 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 17:46:09.998 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:46:10.043 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:46:10.044 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 17:46:10.044 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:46:10.098 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:46:10.143 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:46:10.144 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 17:46:10.144 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:46:10.160 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:46:10.161 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:46:10.144, ingredients = []}
[INFO ] 2019-05-02 17:46:10.161 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:46:10.144, ingredients = []}
[INFO ] 2019-05-02 17:46:10.169 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 282, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:46:10.144, ingredients = []}
[INFO ] 2019-05-02 17:46:10.169 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 17:46:10.170 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 17:46:10.189 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 282, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:46:10, ingredients = []}]
[INFO ] 2019-05-02 17:46:10.190 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 17:46:10.190 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 17:46:10.204 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:46:10.205 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:46:10.218 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:46:10.276 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:46:10.277 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 17:46:10.277 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:46:10.283 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:46:10.283 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:46:10.285 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:46:10.290 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:46:10.294 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 17:46:10.338 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:46:10.338 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 17:46:10.339 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:46:10.350 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-02 17:46:10.393 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:46:10.393 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 17:46:10.394 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:46:10.464 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 17:46:10.502 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:46:10.502 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 17:46:10.503 [main] UserTest - -------Locale date time: 2019-05-02T17:46:10.502----------
[INFO ] 2019-05-02 17:46:10.503 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:46:10.514 [main] GenericDao - **********Entity inserted: User{userId = '329', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:46:10.514 [main] GenericDao - **********Query database by using an ID: 329, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:46:10.519 [main] GenericDao - **********Query by ID Found: User{userId = '329', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:46:10.560 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:46:10.562 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 17:46:10.562 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:46:10.569 [main] GenericDao - **********Saved|Updated entity: User{userId = '330', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:46:10.570 [main] GenericDao - **********Query database by using an ID: 330, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:46:10.574 [main] GenericDao - **********Query by ID Found: User{userId = '330', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:46:10.574 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:46:10.583 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:46:10.583 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 17:46:10.584 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:46:10.591 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:46:10.591 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:46:10.599 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:46:10.636 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:46:10.637 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 17:46:10.637 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:46:10.650 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 17:46:10.650 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:46:10.674 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 17:46:10.721 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:46:10.722 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 17:46:10.723 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:46:10.730 [main] GenericDao - **********Entity inserted: User{userId = '331', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:46:10.730 [main] GenericDao - **********Query database by using an ID: 331, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:46:10.734 [main] GenericDao - **********Query by ID Found: User{userId = '331', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:46:58.939 [http-nio-8080-exec-4] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:47:03.311 [http-nio-8080-exec-4] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 17:47:03.311 [http-nio-8080-exec-4] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 17:47:03.367 [http-nio-8080-exec-4] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:47:03.367 [http-nio-8080-exec-4] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:47:03.368 [http-nio-8080-exec-4] SearchRecipes - $$$$$$$$$ Working on finding the ingredients: [Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]
[INFO ] 2019-05-02 17:50:30.506 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 17:50:30.516 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 17:50:30.517 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 17:50:33.217 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:50:33.288 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 17:50:33.289 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 17:50:33.289 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 17:50:33.359 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:50:33.360 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:50:33.447 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:50:33.448 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 17:50:33.448 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:50:33.489 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:50:33.490 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:50:33.490 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:50:33.504 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:50:33.504 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:50:33.522 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:50:33.567 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:50:33.573 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 17:50:33.618 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:50:33.619 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 17:50:33.619 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:50:33.637 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:50:33.679 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:50:33.680 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 17:50:33.681 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:50:33.695 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:50:33.695 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:50:33.707 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:50:33.707 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:50:33.707 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:50:33.718 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:50:33.719 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:50:33.681, ingredients = []}
[INFO ] 2019-05-02 17:50:33.740 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 284, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:50:33.681, ingredients = []}
[INFO ] 2019-05-02 17:50:33.740 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 284, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:50:33.681, ingredients = []}
[INFO ] 2019-05-02 17:50:33.789 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:50:33.790 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 17:50:33.790 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:50:33.819 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 17:50:33.819 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 17:50:33.843 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:50:33.843 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:50:33.898 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:50:33.899 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 17:50:33.912 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:50:33.959 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:50:33.959 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 17:50:33.960 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:50:34.021 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:50:34.065 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:50:34.065 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 17:50:34.066 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:50:34.076 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:50:34.077 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:50:34.066, ingredients = []}
[INFO ] 2019-05-02 17:50:34.077 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:50:34.066, ingredients = []}
[INFO ] 2019-05-02 17:50:34.084 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 285, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:50:34.066, ingredients = []}
[INFO ] 2019-05-02 17:50:34.084 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 17:50:34.084 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 17:50:34.101 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 285, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:50:34, ingredients = []}]
[INFO ] 2019-05-02 17:50:34.102 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 17:50:34.102 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 17:50:34.119 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:50:34.120 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:50:34.133 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:50:34.201 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:50:34.202 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 17:50:34.203 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:50:34.210 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:50:34.210 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:50:34.212 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:50:34.218 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:50:34.221 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 17:50:34.266 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:50:34.266 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 17:50:34.266 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:50:34.274 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-02 17:50:34.314 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:50:34.315 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 17:50:34.315 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:50:34.397 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 17:50:34.454 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:50:34.454 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 17:50:34.455 [main] UserTest - -------Locale date time: 2019-05-02T17:50:34.454----------
[INFO ] 2019-05-02 17:50:34.455 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:50:34.465 [main] GenericDao - **********Entity inserted: User{userId = '332', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:50:34.466 [main] GenericDao - **********Query database by using an ID: 332, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:50:34.475 [main] GenericDao - **********Query by ID Found: User{userId = '332', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:50:34.511 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:50:34.512 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 17:50:34.512 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:50:34.517 [main] GenericDao - **********Saved|Updated entity: User{userId = '333', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:50:34.518 [main] GenericDao - **********Query database by using an ID: 333, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:50:34.524 [main] GenericDao - **********Query by ID Found: User{userId = '333', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:50:34.525 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:50:34.534 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:50:34.534 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 17:50:34.534 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:50:34.544 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:50:34.545 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:50:34.556 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:50:34.600 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:50:34.601 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 17:50:34.601 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:50:34.614 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 17:50:34.615 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:50:34.637 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 17:50:34.676 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:50:34.676 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 17:50:34.676 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:50:34.681 [main] GenericDao - **********Entity inserted: User{userId = '334', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:50:34.681 [main] GenericDao - **********Query database by using an ID: 334, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:50:34.686 [main] GenericDao - **********Query by ID Found: User{userId = '334', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:51:16.670 [http-nio-8080-exec-7] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:51:21.628 [http-nio-8080-exec-7] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 17:51:21.628 [http-nio-8080-exec-7] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 17:51:21.665 [http-nio-8080-exec-7] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:51:21.666 [http-nio-8080-exec-7] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:51:21.667 [http-nio-8080-exec-7] SearchRecipes - $$$$$$$$$ Working on finding the ingredients: [Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]
[INFO ] 2019-05-02 17:58:22.505 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 17:58:22.514 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 17:58:22.515 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 17:58:25.116 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:58:25.266 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 17:58:25.266 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 17:58:25.267 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 17:58:25.336 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:58:25.337 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:58:25.441 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:58:25.442 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 17:58:25.442 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:58:25.474 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:58:25.475 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:58:25.475 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:58:25.493 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:58:25.493 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:58:25.513 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:58:25.540 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:58:25.546 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 17:58:25.589 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:58:25.589 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 17:58:25.590 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:58:25.608 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:58:25.667 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:58:25.667 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 17:58:25.669 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:58:25.688 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:58:25.688 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:58:25.700 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:58:25.700 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:58:25.701 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:58:25.715 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:58:25.716 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:58:25.669, ingredients = []}
[INFO ] 2019-05-02 17:58:25.737 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 287, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:58:25.669, ingredients = []}
[INFO ] 2019-05-02 17:58:25.737 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 287, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:58:25.669, ingredients = []}
[INFO ] 2019-05-02 17:58:25.784 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:58:25.784 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 17:58:25.785 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:58:25.812 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 17:58:25.813 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 17:58:25.836 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:58:25.836 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:58:25.888 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:58:25.888 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 17:58:25.902 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:58:25.949 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:58:25.949 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 17:58:25.950 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:58:26.007 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:58:26.063 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:58:26.063 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 17:58:26.064 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:58:26.074 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:58:26.074 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:58:26.063, ingredients = []}
[INFO ] 2019-05-02 17:58:26.075 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:58:26.063, ingredients = []}
[INFO ] 2019-05-02 17:58:26.081 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 288, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:58:26.063, ingredients = []}
[INFO ] 2019-05-02 17:58:26.082 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 17:58:26.082 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 17:58:26.099 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 288, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:58:26, ingredients = []}]
[INFO ] 2019-05-02 17:58:26.099 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 17:58:26.100 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 17:58:26.113 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:58:26.114 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:58:26.124 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:58:26.190 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:58:26.191 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 17:58:26.191 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:58:26.196 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:58:26.197 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:58:26.198 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:58:26.206 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:58:26.210 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 17:58:26.260 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:58:26.260 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 17:58:26.261 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:58:26.270 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-02 17:58:26.312 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:58:26.312 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 17:58:26.312 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:58:26.383 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 17:58:26.444 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:58:26.445 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 17:58:26.445 [main] UserTest - -------Locale date time: 2019-05-02T17:58:26.445----------
[INFO ] 2019-05-02 17:58:26.445 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:58:26.454 [main] GenericDao - **********Entity inserted: User{userId = '335', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:58:26.455 [main] GenericDao - **********Query database by using an ID: 335, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:58:26.464 [main] GenericDao - **********Query by ID Found: User{userId = '335', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:58:26.494 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:58:26.494 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 17:58:26.494 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:58:26.500 [main] GenericDao - **********Saved|Updated entity: User{userId = '336', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:58:26.500 [main] GenericDao - **********Query database by using an ID: 336, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:58:26.505 [main] GenericDao - **********Query by ID Found: User{userId = '336', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:58:26.505 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:58:26.514 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:58:26.514 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 17:58:26.514 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:58:26.525 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:58:26.525 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:58:26.537 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:58:26.580 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:58:26.580 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 17:58:26.580 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:58:26.598 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 17:58:26.598 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:58:26.623 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 17:58:26.663 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:58:26.664 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 17:58:26.664 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:58:26.672 [main] GenericDao - **********Entity inserted: User{userId = '337', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:58:26.672 [main] GenericDao - **********Query database by using an ID: 337, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:58:26.676 [main] GenericDao - **********Query by ID Found: User{userId = '337', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:59:06.128 [http-nio-8080-exec-6] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:59:12.119 [http-nio-8080-exec-6] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 17:59:12.120 [http-nio-8080-exec-6] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 17:59:12.185 [http-nio-8080-exec-6] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:59:12.186 [http-nio-8080-exec-6] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:59:12.186 [http-nio-8080-exec-6] SearchRecipes - $$$$$$$$$ Working on finding the ingredients: [Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]
[INFO ] 2019-05-02 17:59:42.455 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 17:59:42.468 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 17:59:42.468 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 17:59:45.377 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:59:45.565 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 17:59:45.566 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 17:59:45.568 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 17:59:45.834 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:59:45.835 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 17:59:46.038 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:59:46.038 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 17:59:46.039 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:59:46.089 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:59:46.089 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:59:46.089 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:59:46.115 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:59:46.116 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:59:46.207 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:59:46.371 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:59:46.400 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 17:59:46.491 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:59:46.491 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 17:59:46.492 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:59:46.526 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:59:46.587 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:59:46.588 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 17:59:46.589 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:59:46.613 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:59:46.614 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:59:46.664 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:59:46.664 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:59:46.676 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:59:46.706 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:59:46.706 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:59:46.589, ingredients = []}
[INFO ] 2019-05-02 17:59:46.768 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 290, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:59:46.589, ingredients = []}
[INFO ] 2019-05-02 17:59:46.769 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 290, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T17:59:46.589, ingredients = []}
[INFO ] 2019-05-02 17:59:46.901 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:59:46.902 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 17:59:46.902 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:59:46.950 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 17:59:46.951 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 17:59:46.983 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:59:46.984 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:59:47.116 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:59:47.116 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 17:59:47.150 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:59:47.235 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:59:47.240 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 17:59:47.240 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 17:59:47.440 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:59:47.584 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 17:59:47.585 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 17:59:47.586 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:59:47.599 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 17:59:47.599 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:59:47.586, ingredients = []}
[INFO ] 2019-05-02 17:59:47.600 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:59:47.586, ingredients = []}
[INFO ] 2019-05-02 17:59:47.608 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 291, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:59:47.586, ingredients = []}
[INFO ] 2019-05-02 17:59:47.608 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 17:59:47.608 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 17:59:47.630 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 291, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T17:59:48, ingredients = []}]
[INFO ] 2019-05-02 17:59:47.634 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 17:59:47.634 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 17:59:47.654 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 17:59:47.655 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:59:47.678 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 17:59:47.810 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:59:47.812 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 17:59:47.813 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:59:47.820 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:59:47.821 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:59:47.824 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 17:59:47.830 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:59:47.841 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 17:59:47.919 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:59:47.920 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 17:59:47.921 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:59:47.944 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-02 17:59:48.018 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:59:48.019 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 17:59:48.020 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:59:48.136 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 17:59:48.237 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:59:48.238 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 17:59:48.239 [main] UserTest - -------Locale date time: 2019-05-02T17:59:48.239----------
[INFO ] 2019-05-02 17:59:48.239 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:59:48.252 [main] GenericDao - **********Entity inserted: User{userId = '338', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:59:48.253 [main] GenericDao - **********Query database by using an ID: 338, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:59:48.269 [main] GenericDao - **********Query by ID Found: User{userId = '338', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 17:59:48.321 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:59:48.322 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 17:59:48.323 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:59:48.332 [main] GenericDao - **********Saved|Updated entity: User{userId = '339', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:59:48.333 [main] GenericDao - **********Query database by using an ID: 339, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:59:48.350 [main] GenericDao - **********Query by ID Found: User{userId = '339', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 17:59:48.351 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:59:48.365 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:59:48.365 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 17:59:48.365 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:59:48.381 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:59:48.381 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:59:48.409 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 17:59:48.469 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:59:48.470 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 17:59:48.470 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:59:48.493 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 17:59:48.494 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:59:48.545 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 17:59:48.622 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 17:59:48.623 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 17:59:48.624 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:59:48.647 [main] GenericDao - **********Entity inserted: User{userId = '340', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 17:59:48.648 [main] GenericDao - **********Query database by using an ID: 340, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 17:59:48.660 [main] GenericDao - **********Query by ID Found: User{userId = '340', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 18:01:49.014 [http-nio-8080-exec-6] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:01:54.457 [http-nio-8080-exec-6] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 18:01:54.457 [http-nio-8080-exec-6] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 18:01:54.507 [http-nio-8080-exec-6] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 18:01:54.507 [http-nio-8080-exec-6] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 18:01:54.508 [http-nio-8080-exec-6] SearchRecipes - $$$$$$$$$ Working on finding the ingredients: [Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]
[INFO ] 2019-05-02 18:07:09.980 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 18:07:09.996 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 18:07:09.997 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 18:07:16.602 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 18:07:16.777 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 18:07:16.778 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 18:07:16.778 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 18:07:16.858 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 18:07:16.858 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 18:07:16.956 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 18:07:16.957 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 18:07:16.957 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 18:07:16.992 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 18:07:16.993 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 18:07:16.993 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 18:07:17.018 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 18:07:17.018 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 18:07:17.046 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 18:07:17.095 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 18:07:17.105 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 18:07:17.201 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 18:07:17.201 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 18:07:17.203 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 18:07:17.242 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 18:07:17.341 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 18:07:17.343 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 18:07:17.346 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:07:17.358 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 18:07:17.359 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:07:17.373 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 18:07:17.373 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 18:07:17.373 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:07:17.385 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 18:07:17.385 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T18:07:17.345, ingredients = []}
[INFO ] 2019-05-02 18:07:17.414 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 293, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T18:07:17.345, ingredients = []}
[INFO ] 2019-05-02 18:07:17.414 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 293, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T18:07:17.345, ingredients = []}
[INFO ] 2019-05-02 18:07:17.470 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 18:07:17.471 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 18:07:17.471 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:07:17.497 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 18:07:17.498 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 18:07:17.529 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 18:07:17.530 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 18:07:17.585 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 18:07:17.586 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 18:07:17.598 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 18:07:17.641 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 18:07:17.641 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 18:07:17.641 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 18:07:17.710 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 18:07:17.761 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 18:07:17.762 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 18:07:17.764 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:07:17.780 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 18:07:17.780 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T18:07:17.764, ingredients = []}
[INFO ] 2019-05-02 18:07:17.780 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T18:07:17.764, ingredients = []}
[INFO ] 2019-05-02 18:07:17.795 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 294, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T18:07:17.764, ingredients = []}
[INFO ] 2019-05-02 18:07:17.796 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 18:07:17.796 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 18:07:17.812 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 294, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T18:07:18, ingredients = []}]
[INFO ] 2019-05-02 18:07:17.812 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 18:07:17.812 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 18:07:17.825 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 18:07:17.825 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 18:07:17.835 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 18:07:17.894 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 18:07:17.894 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 18:07:17.894 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:07:17.903 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 18:07:17.904 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 18:07:17.905 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 18:07:17.910 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:07:17.920 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 18:07:17.974 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 18:07:17.974 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 18:07:17.975 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:07:17.987 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-02 18:07:18.038 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 18:07:18.038 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 18:07:18.038 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:07:18.118 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 18:07:18.177 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 18:07:18.178 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 18:07:18.179 [main] UserTest - -------Locale date time: 2019-05-02T18:07:18.178----------
[INFO ] 2019-05-02 18:07:18.181 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 18:07:18.191 [main] GenericDao - **********Entity inserted: User{userId = '341', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 18:07:18.191 [main] GenericDao - **********Query database by using an ID: 341, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:07:18.201 [main] GenericDao - **********Query by ID Found: User{userId = '341', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 18:07:18.241 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 18:07:18.242 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 18:07:18.242 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 18:07:18.248 [main] GenericDao - **********Saved|Updated entity: User{userId = '342', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 18:07:18.248 [main] GenericDao - **********Query database by using an ID: 342, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:07:18.254 [main] GenericDao - **********Query by ID Found: User{userId = '342', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 18:07:18.255 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:07:18.263 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-02 18:07:18.264 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 18:07:18.264 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 18:07:18.273 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 18:07:18.274 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:07:18.288 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 18:07:18.333 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 18:07:18.333 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 18:07:18.333 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:07:18.351 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 18:07:18.351 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:07:18.388 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 18:07:18.443 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 18:07:18.446 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 18:07:18.446 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 18:07:18.452 [main] GenericDao - **********Entity inserted: User{userId = '343', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 18:07:18.453 [main] GenericDao - **********Query database by using an ID: 343, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:07:18.456 [main] GenericDao - **********Query by ID Found: User{userId = '343', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 18:07:57.040 [http-nio-8080-exec-7] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:08:01.709 [http-nio-8080-exec-7] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 18:08:01.710 [http-nio-8080-exec-7] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 18:08:01.772 [http-nio-8080-exec-7] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 18:08:01.773 [http-nio-8080-exec-7] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 18:08:01.773 [http-nio-8080-exec-7] SearchRecipes - $$$$$$$$$ Working on finding the ingredients: [Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]
[INFO ] 2019-05-02 18:09:07.114 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 18:09:07.124 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 18:09:07.124 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 18:09:10.622 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 18:09:10.704 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 18:09:10.704 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 18:09:10.705 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 18:09:10.783 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 18:09:10.784 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 18:09:10.909 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 18:09:10.910 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 18:09:10.912 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 18:09:10.955 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 18:09:10.955 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 18:09:10.955 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 18:09:10.971 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 18:09:10.971 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 18:09:10.995 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 18:09:11.027 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 18:09:11.033 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 18:09:11.086 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 18:09:11.086 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 18:09:11.087 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 18:09:11.104 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 18:09:11.144 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 18:09:11.144 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 18:09:11.146 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:09:11.162 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 18:09:11.162 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:09:11.181 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 18:09:11.182 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 18:09:11.182 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:09:11.194 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 18:09:11.194 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T18:09:11.146, ingredients = []}
[INFO ] 2019-05-02 18:09:11.229 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 296, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T18:09:11.146, ingredients = []}
[INFO ] 2019-05-02 18:09:11.229 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 296, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T18:09:11.146, ingredients = []}
[INFO ] 2019-05-02 18:09:11.288 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 18:09:11.289 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 18:09:11.289 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:09:11.319 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 18:09:11.320 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 18:09:11.341 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 18:09:11.341 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 18:09:11.395 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 18:09:11.395 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 18:09:11.416 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 18:09:11.468 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 18:09:11.469 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 18:09:11.469 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 18:09:11.531 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 18:09:11.577 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 18:09:11.578 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 18:09:11.578 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:09:11.586 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 18:09:11.587 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T18:09:11.578, ingredients = []}
[INFO ] 2019-05-02 18:09:11.587 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T18:09:11.578, ingredients = []}
[INFO ] 2019-05-02 18:09:11.595 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 297, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T18:09:11.578, ingredients = []}
[INFO ] 2019-05-02 18:09:11.597 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 18:09:11.598 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 18:09:11.618 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 297, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T18:09:12, ingredients = []}]
[INFO ] 2019-05-02 18:09:11.619 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 18:09:11.619 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 18:09:11.638 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 18:09:11.639 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 18:09:11.651 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 18:09:11.732 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 18:09:11.733 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 18:09:11.733 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:09:11.740 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 18:09:11.741 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 18:09:11.745 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 18:09:11.756 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:09:11.760 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 18:09:11.810 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 18:09:11.811 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 18:09:11.812 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:09:11.827 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-02 18:09:11.895 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 18:09:11.895 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 18:09:11.895 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:09:11.996 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 18:09:12.036 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 18:09:12.036 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 18:09:12.036 [main] UserTest - -------Locale date time: 2019-05-02T18:09:12.036----------
[INFO ] 2019-05-02 18:09:12.037 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 18:09:12.050 [main] GenericDao - **********Entity inserted: User{userId = '344', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 18:09:12.051 [main] GenericDao - **********Query database by using an ID: 344, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:09:12.061 [main] GenericDao - **********Query by ID Found: User{userId = '344', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 18:09:12.109 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 18:09:12.109 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 18:09:12.109 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 18:09:12.119 [main] GenericDao - **********Saved|Updated entity: User{userId = '345', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 18:09:12.119 [main] GenericDao - **********Query database by using an ID: 345, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:09:12.124 [main] GenericDao - **********Query by ID Found: User{userId = '345', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 18:09:12.124 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:09:12.133 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-02 18:09:12.134 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 18:09:12.134 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 18:09:12.147 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 18:09:12.147 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:09:12.167 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 18:09:12.208 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 18:09:12.209 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 18:09:12.209 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:09:12.224 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 18:09:12.225 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:09:12.247 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 18:09:12.284 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 18:09:12.285 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 18:09:12.285 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 18:09:12.295 [main] GenericDao - **********Entity inserted: User{userId = '346', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 18:09:12.296 [main] GenericDao - **********Query database by using an ID: 346, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:09:12.300 [main] GenericDao - **********Query by ID Found: User{userId = '346', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 18:10:24.980 [http-nio-8080-exec-7] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 18:10:31.810 [http-nio-8080-exec-7] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 18:10:31.811 [http-nio-8080-exec-7] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 18:10:31.862 [http-nio-8080-exec-7] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 18:10:31.863 [http-nio-8080-exec-7] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 18:10:31.863 [http-nio-8080-exec-7] SearchRecipes - $$$$$$$$$ Working on finding the ingredients: [Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]
[INFO ] 2019-05-02 19:25:02.297 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 19:25:02.306 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 19:25:02.306 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 19:25:06.124 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 19:25:06.288 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 19:25:06.289 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 19:25:06.289 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 19:25:06.409 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 19:25:06.409 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 19:25:06.588 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:25:06.589 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 19:25:06.589 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:25:06.644 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:25:06.644 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:25:06.645 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:25:06.668 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:25:06.669 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:25:06.706 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:25:06.757 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:25:06.762 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 19:25:06.841 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:25:06.842 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 19:25:06.842 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:25:06.868 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:25:06.943 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:25:06.943 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 19:25:06.947 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:25:06.978 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:25:06.978 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:25:06.998 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:25:06.999 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:25:07.001 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:25:07.019 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:25:07.020 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T19:25:06.946, ingredients = []}
[INFO ] 2019-05-02 19:25:07.050 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 299, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T19:25:06.946, ingredients = []}
[INFO ] 2019-05-02 19:25:07.050 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 299, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T19:25:06.946, ingredients = []}
[INFO ] 2019-05-02 19:25:07.101 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:25:07.102 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 19:25:07.102 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:25:07.146 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 19:25:07.146 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 19:25:07.190 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:25:07.191 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:25:07.286 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:25:07.287 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 19:25:07.310 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:25:07.381 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:25:07.381 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 19:25:07.383 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:25:07.459 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:25:07.519 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:25:07.519 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 19:25:07.520 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:25:07.541 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:25:07.542 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:25:07.520, ingredients = []}
[INFO ] 2019-05-02 19:25:07.542 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:25:07.520, ingredients = []}
[INFO ] 2019-05-02 19:25:07.564 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 300, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:25:07.520, ingredients = []}
[INFO ] 2019-05-02 19:25:07.566 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 19:25:07.568 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 19:25:07.609 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 300, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:25:08, ingredients = []}]
[INFO ] 2019-05-02 19:25:07.609 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 19:25:07.610 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 19:25:07.627 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:25:07.628 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:25:07.653 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:25:07.755 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:25:07.756 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 19:25:07.756 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:25:07.765 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 19:25:07.766 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 19:25:07.768 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 19:25:07.774 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:25:07.783 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 19:25:07.836 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:25:07.837 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 19:25:07.837 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:25:07.851 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-02 19:25:07.905 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:25:07.906 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 19:25:07.906 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:25:08.003 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 19:25:08.077 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:25:08.078 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 19:25:08.078 [main] UserTest - -------Locale date time: 2019-05-02T19:25:08.078----------
[INFO ] 2019-05-02 19:25:08.078 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 19:25:08.095 [main] GenericDao - **********Entity inserted: User{userId = '347', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 19:25:08.096 [main] GenericDao - **********Query database by using an ID: 347, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:25:08.112 [main] GenericDao - **********Query by ID Found: User{userId = '347', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 19:25:08.176 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:25:08.177 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 19:25:08.177 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 19:25:08.185 [main] GenericDao - **********Saved|Updated entity: User{userId = '348', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 19:25:08.186 [main] GenericDao - **********Query database by using an ID: 348, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:25:08.192 [main] GenericDao - **********Query by ID Found: User{userId = '348', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 19:25:08.192 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:25:08.204 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:25:08.205 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 19:25:08.205 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:25:08.218 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:25:08.219 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:25:08.235 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:25:08.283 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:25:08.283 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 19:25:08.283 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:25:08.303 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 19:25:08.304 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:25:08.346 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 19:25:08.400 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:25:08.401 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 19:25:08.401 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 19:25:08.408 [main] GenericDao - **********Entity inserted: User{userId = '349', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 19:25:08.408 [main] GenericDao - **********Query database by using an ID: 349, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:25:08.417 [main] GenericDao - **********Query by ID Found: User{userId = '349', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 19:25:53.041 [http-nio-8080-exec-8] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:26:01.366 [http-nio-8080-exec-8] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 19:26:01.368 [http-nio-8080-exec-8] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 19:26:01.438 [http-nio-8080-exec-8] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:26:01.439 [http-nio-8080-exec-8] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:26:01.439 [http-nio-8080-exec-8] SearchRecipes - $$$$$$$$$ Working on finding the ingredients: [Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]
[INFO ] 2019-05-02 19:27:49.905 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 19:27:49.913 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 19:27:49.913 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 19:27:52.921 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 19:27:53.069 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 19:27:53.069 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 19:27:53.069 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 19:27:53.182 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 19:27:53.183 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 19:27:53.288 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:27:53.289 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 19:27:53.289 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:27:53.341 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:27:53.342 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:27:53.342 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:27:53.359 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:27:53.359 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:27:53.388 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:27:53.424 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:27:53.429 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 19:27:53.484 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:27:53.485 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 19:27:53.486 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:27:53.507 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:27:53.562 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:27:53.562 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 19:27:53.563 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:27:53.582 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:27:53.583 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:27:53.594 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:27:53.595 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:27:53.595 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:27:53.613 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:27:53.613 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T19:27:53.563, ingredients = []}
[INFO ] 2019-05-02 19:27:53.646 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 302, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T19:27:53.563, ingredients = []}
[INFO ] 2019-05-02 19:27:53.647 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 302, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T19:27:53.563, ingredients = []}
[INFO ] 2019-05-02 19:27:53.699 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:27:53.699 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 19:27:53.700 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:27:53.735 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 19:27:53.735 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 19:27:53.760 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:27:53.761 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:27:53.819 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:27:53.820 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 19:27:53.840 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:27:53.878 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:27:53.878 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 19:27:53.879 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:27:53.943 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:27:54.026 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:27:54.028 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 19:27:54.028 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:27:54.047 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:27:54.047 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:27:54.028, ingredients = []}
[INFO ] 2019-05-02 19:27:54.048 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:27:54.028, ingredients = []}
[INFO ] 2019-05-02 19:27:54.059 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 303, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:27:54.028, ingredients = []}
[INFO ] 2019-05-02 19:27:54.062 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 19:27:54.063 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 19:27:54.104 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 303, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:27:54, ingredients = []}]
[INFO ] 2019-05-02 19:27:54.104 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 19:27:54.105 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 19:27:54.126 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:27:54.128 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:27:54.144 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:27:54.238 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:27:54.240 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 19:27:54.245 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:27:54.254 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 19:27:54.254 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 19:27:54.256 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 19:27:54.264 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:27:54.276 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 19:27:54.327 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:27:54.327 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 19:27:54.328 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:27:54.339 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-02 19:27:54.387 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:27:54.388 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 19:27:54.390 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:27:54.474 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 19:27:54.510 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:27:54.511 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 19:27:54.511 [main] UserTest - -------Locale date time: 2019-05-02T19:27:54.511----------
[INFO ] 2019-05-02 19:27:54.511 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 19:27:54.525 [main] GenericDao - **********Entity inserted: User{userId = '350', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 19:27:54.526 [main] GenericDao - **********Query database by using an ID: 350, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:27:54.536 [main] GenericDao - **********Query by ID Found: User{userId = '350', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 19:27:54.595 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:27:54.595 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 19:27:54.595 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 19:27:54.600 [main] GenericDao - **********Saved|Updated entity: User{userId = '351', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 19:27:54.601 [main] GenericDao - **********Query database by using an ID: 351, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:27:54.605 [main] GenericDao - **********Query by ID Found: User{userId = '351', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 19:27:54.605 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:27:54.625 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:27:54.625 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 19:27:54.626 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:27:54.634 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:27:54.634 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:27:54.650 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:27:54.702 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:27:54.702 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 19:27:54.702 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:27:54.713 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 19:27:54.714 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:27:54.734 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 19:27:54.781 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:27:54.782 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 19:27:54.783 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 19:27:54.789 [main] GenericDao - **********Entity inserted: User{userId = '352', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 19:27:54.789 [main] GenericDao - **********Query database by using an ID: 352, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:27:54.795 [main] GenericDao - **********Query by ID Found: User{userId = '352', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 19:28:28.041 [http-nio-8080-exec-5] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:28:35.942 [http-nio-8080-exec-5] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 19:28:35.942 [http-nio-8080-exec-5] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 19:28:36.006 [http-nio-8080-exec-5] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:28:36.009 [http-nio-8080-exec-5] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:28:36.009 [http-nio-8080-exec-5] SearchRecipes - $$$$$$$$$ Working on finding the ingredients: [Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]
[INFO ] 2019-05-02 19:29:41.699 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 19:29:41.711 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 19:29:41.711 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 19:29:45.359 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 19:29:45.494 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 19:29:45.494 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 19:29:45.495 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 19:29:45.599 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 19:29:45.600 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 19:29:45.745 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:29:45.745 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 19:29:45.746 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:29:45.788 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:29:45.789 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:29:45.790 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:29:45.821 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:29:45.821 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:29:45.840 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:29:45.863 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:29:45.868 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 19:29:45.930 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:29:45.931 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 19:29:45.931 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:29:45.949 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:29:46.003 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:29:46.004 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 19:29:46.005 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:29:46.016 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:29:46.020 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:29:46.037 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:29:46.038 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:29:46.038 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:29:46.051 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:29:46.052 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T19:29:46.005, ingredients = []}
[INFO ] 2019-05-02 19:29:46.076 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 305, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T19:29:46.005, ingredients = []}
[INFO ] 2019-05-02 19:29:46.077 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 305, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T19:29:46.005, ingredients = []}
[INFO ] 2019-05-02 19:29:46.136 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:29:46.138 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 19:29:46.139 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:29:46.176 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 19:29:46.176 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 19:29:46.202 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:29:46.202 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:29:46.316 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:29:46.316 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 19:29:46.350 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:29:46.472 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:29:46.472 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 19:29:46.472 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:29:46.555 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:29:46.612 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:29:46.613 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 19:29:46.613 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:29:46.622 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:29:46.622 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:29:46.613, ingredients = []}
[INFO ] 2019-05-02 19:29:46.623 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:29:46.613, ingredients = []}
[INFO ] 2019-05-02 19:29:46.646 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 306, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:29:46.613, ingredients = []}
[INFO ] 2019-05-02 19:29:46.649 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 19:29:46.650 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 19:29:46.668 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 306, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:29:47, ingredients = []}]
[INFO ] 2019-05-02 19:29:46.668 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 19:29:46.669 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 19:29:46.684 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:29:46.685 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:29:46.693 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:29:46.780 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:29:46.781 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 19:29:46.783 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:29:46.790 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 19:29:46.790 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 19:29:46.791 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 19:29:46.797 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:29:46.800 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 19:29:46.861 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:29:46.862 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 19:29:46.862 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:29:46.882 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-02 19:29:46.964 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:29:46.965 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 19:29:46.965 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:29:47.123 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 19:29:47.172 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:29:47.174 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 19:29:47.174 [main] UserTest - -------Locale date time: 2019-05-02T19:29:47.174----------
[INFO ] 2019-05-02 19:29:47.175 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 19:29:47.183 [main] GenericDao - **********Entity inserted: User{userId = '353', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 19:29:47.184 [main] GenericDao - **********Query database by using an ID: 353, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:29:47.189 [main] GenericDao - **********Query by ID Found: User{userId = '353', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 19:29:47.242 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:29:47.244 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 19:29:47.244 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 19:29:47.249 [main] GenericDao - **********Saved|Updated entity: User{userId = '354', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 19:29:47.249 [main] GenericDao - **********Query database by using an ID: 354, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:29:47.253 [main] GenericDao - **********Query by ID Found: User{userId = '354', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 19:29:47.253 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:29:47.270 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:29:47.271 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 19:29:47.271 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:29:47.286 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:29:47.287 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:29:47.298 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:29:47.373 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:29:47.374 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 19:29:47.375 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:29:47.409 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 19:29:47.410 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:29:47.457 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 19:29:47.529 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:29:47.530 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 19:29:47.531 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 19:29:47.555 [main] GenericDao - **********Entity inserted: User{userId = '355', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 19:29:47.555 [main] GenericDao - **********Query database by using an ID: 355, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:29:47.569 [main] GenericDao - **********Query by ID Found: User{userId = '355', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 19:30:50.810 [http-nio-8080-exec-7] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:30:58.619 [http-nio-8080-exec-7] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 19:30:58.620 [http-nio-8080-exec-7] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 19:30:58.666 [http-nio-8080-exec-7] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:30:58.668 [http-nio-8080-exec-7] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:30:58.668 [http-nio-8080-exec-7] SearchRecipes - $$$$$$$$$ Working on finding the ingredients: [Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]
[INFO ] 2019-05-02 19:33:19.163 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 19:33:19.178 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 19:33:19.178 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 19:33:21.896 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 19:33:22.026 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 19:33:22.026 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 19:33:22.027 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 19:33:22.107 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 19:33:22.108 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 19:33:22.204 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:33:22.205 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 19:33:22.205 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:33:22.243 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:33:22.243 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:33:22.244 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:33:22.258 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:33:22.258 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:33:22.275 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:33:22.304 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:33:22.311 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 19:33:22.354 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:33:22.355 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 19:33:22.355 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:33:22.376 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:33:22.429 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:33:22.430 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 19:33:22.431 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:33:22.444 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:33:22.444 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:33:22.465 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:33:22.465 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:33:22.465 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:33:22.480 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:33:22.481 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T19:33:22.431, ingredients = []}
[INFO ] 2019-05-02 19:33:22.511 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 308, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T19:33:22.431, ingredients = []}
[INFO ] 2019-05-02 19:33:22.512 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 308, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T19:33:22.431, ingredients = []}
[INFO ] 2019-05-02 19:33:22.564 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:33:22.565 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 19:33:22.565 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:33:22.594 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 19:33:22.595 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 19:33:22.619 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:33:22.620 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:33:22.663 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:33:22.663 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 19:33:22.680 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:33:22.730 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:33:22.730 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 19:33:22.731 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:33:22.793 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:33:22.836 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:33:22.836 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 19:33:22.837 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:33:22.852 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:33:22.852 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:33:22.836, ingredients = []}
[INFO ] 2019-05-02 19:33:22.852 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:33:22.836, ingredients = []}
[INFO ] 2019-05-02 19:33:22.862 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 309, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:33:22.836, ingredients = []}
[INFO ] 2019-05-02 19:33:22.863 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 19:33:22.863 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 19:33:22.881 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 309, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:33:23, ingredients = []}]
[INFO ] 2019-05-02 19:33:22.882 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 19:33:22.882 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 19:33:22.899 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:33:22.901 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:33:22.911 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:33:22.995 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:33:22.995 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 19:33:22.996 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:33:23.006 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 19:33:23.006 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 19:33:23.008 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 19:33:23.013 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:33:23.019 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 19:33:23.064 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:33:23.065 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 19:33:23.065 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:33:23.077 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-02 19:33:23.134 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:33:23.135 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 19:33:23.135 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:33:23.236 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 19:33:23.282 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:33:23.283 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 19:33:23.283 [main] UserTest - -------Locale date time: 2019-05-02T19:33:23.283----------
[INFO ] 2019-05-02 19:33:23.284 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 19:33:23.294 [main] GenericDao - **********Entity inserted: User{userId = '356', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 19:33:23.294 [main] GenericDao - **********Query database by using an ID: 356, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:33:23.302 [main] GenericDao - **********Query by ID Found: User{userId = '356', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 19:33:23.345 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:33:23.345 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 19:33:23.346 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 19:33:23.351 [main] GenericDao - **********Saved|Updated entity: User{userId = '357', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 19:33:23.352 [main] GenericDao - **********Query database by using an ID: 357, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:33:23.359 [main] GenericDao - **********Query by ID Found: User{userId = '357', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 19:33:23.360 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:33:23.367 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:33:23.367 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 19:33:23.367 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:33:23.379 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:33:23.380 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:33:23.389 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:33:23.439 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:33:23.440 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 19:33:23.440 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:33:23.453 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 19:33:23.454 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:33:23.475 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 19:33:23.516 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:33:23.517 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 19:33:23.517 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 19:33:23.525 [main] GenericDao - **********Entity inserted: User{userId = '358', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 19:33:23.525 [main] GenericDao - **********Query database by using an ID: 358, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:33:23.529 [main] GenericDao - **********Query by ID Found: User{userId = '358', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 19:34:07.315 [http-nio-8080-exec-6] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:34:11.976 [http-nio-8080-exec-6] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 19:34:11.980 [http-nio-8080-exec-6] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 19:34:12.020 [http-nio-8080-exec-6] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:34:12.021 [http-nio-8080-exec-6] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:34:12.022 [http-nio-8080-exec-6] SearchRecipes - $$$$$$$$$ Working on finding the ingredients: [Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}]
[INFO ] 2019-05-02 19:36:12.796 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 19:36:12.808 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 19:36:12.809 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 19:36:15.463 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 19:36:15.569 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 19:36:15.570 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 19:36:15.570 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 19:36:15.640 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 19:36:15.640 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 19:36:15.726 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:36:15.727 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 19:36:15.727 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:36:15.768 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:36:15.768 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:36:15.769 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:36:15.785 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:36:15.785 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:36:15.803 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:36:15.846 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:36:15.851 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 19:36:15.905 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:36:15.906 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 19:36:15.906 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:36:15.934 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:36:15.988 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:36:15.989 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 19:36:15.991 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:36:16.005 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:36:16.006 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:36:16.020 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:36:16.020 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:36:16.020 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:36:16.038 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:36:16.039 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T19:36:15.991, ingredients = []}
[INFO ] 2019-05-02 19:36:16.065 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 311, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T19:36:15.991, ingredients = []}
[INFO ] 2019-05-02 19:36:16.065 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 311, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T19:36:15.991, ingredients = []}
[INFO ] 2019-05-02 19:36:16.116 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:36:16.116 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 19:36:16.117 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:36:16.151 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 19:36:16.151 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 19:36:16.170 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:36:16.171 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:36:16.224 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:36:16.224 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 19:36:16.242 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:36:16.290 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:36:16.291 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 19:36:16.292 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:36:16.362 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:36:16.409 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:36:16.410 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 19:36:16.411 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:36:16.421 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:36:16.421 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:36:16.410, ingredients = []}
[INFO ] 2019-05-02 19:36:16.422 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:36:16.410, ingredients = []}
[INFO ] 2019-05-02 19:36:16.434 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 312, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:36:16.410, ingredients = []}
[INFO ] 2019-05-02 19:36:16.434 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 19:36:16.434 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 19:36:16.456 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 312, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:36:16, ingredients = []}]
[INFO ] 2019-05-02 19:36:16.457 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 19:36:16.458 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 19:36:16.477 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:36:16.478 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:36:16.498 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:36:16.586 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:36:16.587 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 19:36:16.588 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:36:16.595 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 19:36:16.596 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 19:36:16.597 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 19:36:16.603 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:36:16.607 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 19:36:16.652 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:36:16.652 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 19:36:16.652 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:36:16.662 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-02 19:36:16.709 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:36:16.711 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 19:36:16.713 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:36:16.809 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 19:36:16.889 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:36:16.890 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 19:36:16.890 [main] UserTest - -------Locale date time: 2019-05-02T19:36:16.890----------
[INFO ] 2019-05-02 19:36:16.890 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 19:36:16.905 [main] GenericDao - **********Entity inserted: User{userId = '359', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 19:36:16.905 [main] GenericDao - **********Query database by using an ID: 359, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:36:16.913 [main] GenericDao - **********Query by ID Found: User{userId = '359', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 19:36:16.950 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:36:16.951 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 19:36:16.951 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 19:36:16.961 [main] GenericDao - **********Saved|Updated entity: User{userId = '360', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 19:36:16.961 [main] GenericDao - **********Query database by using an ID: 360, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:36:16.965 [main] GenericDao - **********Query by ID Found: User{userId = '360', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 19:36:16.966 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:36:16.974 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:36:16.975 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 19:36:16.975 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:36:16.995 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:36:16.995 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:36:17.013 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:36:17.050 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:36:17.050 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 19:36:17.051 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:36:17.062 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 19:36:17.062 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:36:17.085 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 19:36:17.126 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:36:17.127 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 19:36:17.128 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 19:36:17.133 [main] GenericDao - **********Entity inserted: User{userId = '361', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 19:36:17.133 [main] GenericDao - **********Query database by using an ID: 361, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:36:17.137 [main] GenericDao - **********Query by ID Found: User{userId = '361', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 19:36:50.194 [http-nio-8080-exec-4] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:36:59.770 [http-nio-8080-exec-4] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 19:36:59.771 [http-nio-8080-exec-4] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 19:36:59.852 [http-nio-8080-exec-4] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:36:59.853 [http-nio-8080-exec-4] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:36:59.854 [http-nio-8080-exec-4] SearchRecipes - $$$$$$$$$ Working on finding the ingredients: [Ingredients{, ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{, ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{, ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]
[INFO ] 2019-05-02 19:42:08.250 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 19:42:08.262 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 19:42:08.263 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 19:42:11.017 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 19:42:11.118 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 19:42:11.119 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 19:42:11.119 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 19:42:11.194 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 19:42:11.194 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 19:42:11.306 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:42:11.306 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 19:42:11.307 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:42:11.345 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:42:11.345 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:42:11.345 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:42:11.363 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:42:11.363 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:42:11.383 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:42:11.430 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:42:11.436 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 19:42:11.499 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:42:11.500 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 19:42:11.501 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:42:11.515 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:42:11.558 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:42:11.558 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 19:42:11.559 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:42:11.579 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:42:11.579 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:42:11.590 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:42:11.591 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:42:11.591 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:42:11.606 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:42:11.607 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T19:42:11.559, ingredients = []}
[INFO ] 2019-05-02 19:42:11.638 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 314, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T19:42:11.559, ingredients = []}
[INFO ] 2019-05-02 19:42:11.639 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 314, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T19:42:11.559, ingredients = []}
[INFO ] 2019-05-02 19:42:11.702 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:42:11.705 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 19:42:11.706 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:42:11.742 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 19:42:11.743 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 19:42:11.775 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:42:11.777 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:42:11.838 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:42:11.840 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 19:42:11.860 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:42:11.925 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:42:11.927 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 19:42:11.928 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:42:11.983 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:42:12.034 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:42:12.034 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 19:42:12.035 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:42:12.049 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:42:12.050 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:42:12.035, ingredients = []}
[INFO ] 2019-05-02 19:42:12.050 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:42:12.035, ingredients = []}
[INFO ] 2019-05-02 19:42:12.065 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 315, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:42:12.035, ingredients = []}
[INFO ] 2019-05-02 19:42:12.066 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 19:42:12.066 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 19:42:12.093 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 315, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:42:12, ingredients = []}]
[INFO ] 2019-05-02 19:42:12.094 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 19:42:12.095 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 19:42:12.111 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:42:12.112 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:42:12.131 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:42:12.189 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:42:12.189 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 19:42:12.189 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:42:12.195 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 19:42:12.196 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 19:42:12.197 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 19:42:12.209 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:42:12.214 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 19:42:12.266 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:42:12.266 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 19:42:12.267 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:42:12.280 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-02 19:42:12.338 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:42:12.339 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 19:42:12.339 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:42:12.406 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 19:42:12.457 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:42:12.457 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 19:42:12.458 [main] UserTest - -------Locale date time: 2019-05-02T19:42:12.458----------
[INFO ] 2019-05-02 19:42:12.458 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 19:42:12.474 [main] GenericDao - **********Entity inserted: User{userId = '362', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 19:42:12.474 [main] GenericDao - **********Query database by using an ID: 362, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:42:12.480 [main] GenericDao - **********Query by ID Found: User{userId = '362', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 19:42:12.523 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:42:12.523 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 19:42:12.523 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 19:42:12.528 [main] GenericDao - **********Saved|Updated entity: User{userId = '363', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 19:42:12.528 [main] GenericDao - **********Query database by using an ID: 363, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:42:12.532 [main] GenericDao - **********Query by ID Found: User{userId = '363', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 19:42:12.533 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:42:12.546 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:42:12.547 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 19:42:12.547 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:42:12.556 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:42:12.556 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:42:12.578 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:42:12.614 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:42:12.614 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 19:42:12.615 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:42:12.642 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 19:42:12.643 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:42:12.679 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 19:42:12.734 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:42:12.735 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 19:42:12.735 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 19:42:12.743 [main] GenericDao - **********Entity inserted: User{userId = '364', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 19:42:12.744 [main] GenericDao - **********Query database by using an ID: 364, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:42:12.751 [main] GenericDao - **********Query by ID Found: User{userId = '364', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 19:42:50.348 [http-nio-8080-exec-10] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:42:58.606 [http-nio-8080-exec-10] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 19:42:58.607 [http-nio-8080-exec-10] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 19:42:58.670 [http-nio-8080-exec-10] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:42:58.671 [http-nio-8080-exec-10] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:42:58.671 [http-nio-8080-exec-10] SearchRecipes - $$$$$$$$$ Working on finding the ingredients: [Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]
[INFO ] 2019-05-02 19:43:33.427 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 19:43:33.441 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 19:43:33.441 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 19:43:36.950 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 19:43:37.117 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 19:43:37.117 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 19:43:37.118 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 19:43:37.193 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 19:43:37.194 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 19:43:37.293 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:43:37.294 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 19:43:37.294 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:43:37.336 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:43:37.336 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:43:37.336 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:43:37.356 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:43:37.357 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:43:37.384 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:43:37.416 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:43:37.422 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 19:43:37.498 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:43:37.498 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 19:43:37.499 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:43:37.537 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:43:37.588 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:43:37.589 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 19:43:37.594 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:43:37.605 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:43:37.605 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:43:37.627 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:43:37.627 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:43:37.627 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:43:37.640 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:43:37.641 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T19:43:37.594, ingredients = []}
[INFO ] 2019-05-02 19:43:37.674 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 317, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T19:43:37.594, ingredients = []}
[INFO ] 2019-05-02 19:43:37.674 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 317, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T19:43:37.594, ingredients = []}
[INFO ] 2019-05-02 19:43:37.727 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:43:37.727 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 19:43:37.727 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:43:37.762 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 19:43:37.762 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 19:43:37.793 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:43:37.794 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:43:37.865 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:43:37.865 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 19:43:37.888 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:43:37.929 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:43:37.929 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 19:43:37.929 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:43:37.996 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:43:38.044 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:43:38.044 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 19:43:38.045 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:43:38.062 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:43:38.062 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:43:38.045, ingredients = []}
[INFO ] 2019-05-02 19:43:38.063 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:43:38.045, ingredients = []}
[INFO ] 2019-05-02 19:43:38.075 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 318, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:43:38.045, ingredients = []}
[INFO ] 2019-05-02 19:43:38.075 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 19:43:38.076 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 19:43:38.102 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 318, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:43:38, ingredients = []}]
[INFO ] 2019-05-02 19:43:38.103 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 19:43:38.103 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 19:43:38.120 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:43:38.120 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:43:38.137 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:43:38.206 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:43:38.208 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 19:43:38.209 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:43:38.214 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 19:43:38.215 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 19:43:38.217 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 19:43:38.222 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:43:38.228 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 19:43:38.286 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:43:38.287 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 19:43:38.288 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:43:38.299 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-02 19:43:38.341 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:43:38.341 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 19:43:38.342 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:43:38.430 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 19:43:38.478 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:43:38.478 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 19:43:38.479 [main] UserTest - -------Locale date time: 2019-05-02T19:43:38.478----------
[INFO ] 2019-05-02 19:43:38.479 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 19:43:38.490 [main] GenericDao - **********Entity inserted: User{userId = '365', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 19:43:38.491 [main] GenericDao - **********Query database by using an ID: 365, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:43:38.503 [main] GenericDao - **********Query by ID Found: User{userId = '365', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 19:43:38.540 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:43:38.542 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 19:43:38.543 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 19:43:38.550 [main] GenericDao - **********Saved|Updated entity: User{userId = '366', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 19:43:38.551 [main] GenericDao - **********Query database by using an ID: 366, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:43:38.556 [main] GenericDao - **********Query by ID Found: User{userId = '366', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 19:43:38.556 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:43:38.567 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:43:38.567 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 19:43:38.567 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:43:38.581 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:43:38.582 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:43:38.599 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:43:38.640 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:43:38.640 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 19:43:38.641 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:43:38.659 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 19:43:38.659 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:43:38.687 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 19:43:38.722 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:43:38.722 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 19:43:38.722 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 19:43:38.727 [main] GenericDao - **********Entity inserted: User{userId = '367', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 19:43:38.728 [main] GenericDao - **********Query database by using an ID: 367, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:43:38.731 [main] GenericDao - **********Query by ID Found: User{userId = '367', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 19:44:23.649 [http-nio-8080-exec-6] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:44:30.416 [http-nio-8080-exec-6] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 19:44:30.417 [http-nio-8080-exec-6] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 19:44:30.482 [http-nio-8080-exec-6] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:44:30.483 [http-nio-8080-exec-6] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:44:30.484 [http-nio-8080-exec-6] SearchRecipes - $$$$$$$$$ Working on finding the ingredients: [Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]
[INFO ] 2019-05-02 19:49:24.336 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 19:49:24.345 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 19:49:24.346 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 19:49:27.081 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 19:49:27.194 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 19:49:27.194 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 19:49:27.195 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 19:49:27.279 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 19:49:27.280 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 19:49:27.376 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:49:27.377 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 19:49:27.377 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:49:27.419 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:49:27.419 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:49:27.419 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:49:27.438 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:49:27.439 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:49:27.460 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:49:27.502 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:49:27.507 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 19:49:27.567 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:49:27.568 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 19:49:27.568 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:49:27.594 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:49:27.649 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:49:27.650 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 19:49:27.650 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:49:27.674 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:49:27.675 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:49:27.702 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:49:27.702 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:49:27.702 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:49:27.720 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:49:27.721 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T19:49:27.650, ingredients = []}
[INFO ] 2019-05-02 19:49:27.752 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 320, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T19:49:27.650, ingredients = []}
[INFO ] 2019-05-02 19:49:27.753 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 320, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T19:49:27.650, ingredients = []}
[INFO ] 2019-05-02 19:49:27.808 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:49:27.809 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 19:49:27.809 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:49:27.845 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 19:49:27.848 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 19:49:27.872 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:49:27.875 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:49:27.946 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:49:27.948 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 19:49:27.964 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:49:28.026 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:49:28.027 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 19:49:28.027 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:49:28.078 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:49:28.129 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:49:28.129 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 19:49:28.130 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:49:28.147 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:49:28.147 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:49:28.130, ingredients = []}
[INFO ] 2019-05-02 19:49:28.147 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:49:28.130, ingredients = []}
[INFO ] 2019-05-02 19:49:28.158 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 321, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:49:28.130, ingredients = []}
[INFO ] 2019-05-02 19:49:28.159 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 19:49:28.160 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 19:49:28.181 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 321, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:49:28, ingredients = []}]
[INFO ] 2019-05-02 19:49:28.182 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 19:49:28.182 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 19:49:28.201 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:49:28.202 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:49:28.216 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:49:28.286 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:49:28.286 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 19:49:28.286 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:49:28.292 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 19:49:28.293 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 19:49:28.299 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 19:49:28.308 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:49:28.312 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 19:49:28.370 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:49:28.372 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 19:49:28.374 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:49:28.386 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-02 19:49:28.437 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:49:28.438 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 19:49:28.438 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:49:28.505 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 19:49:28.576 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:49:28.576 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 19:49:28.577 [main] UserTest - -------Locale date time: 2019-05-02T19:49:28.576----------
[INFO ] 2019-05-02 19:49:28.577 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 19:49:28.589 [main] GenericDao - **********Entity inserted: User{userId = '368', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 19:49:28.589 [main] GenericDao - **********Query database by using an ID: 368, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:49:28.599 [main] GenericDao - **********Query by ID Found: User{userId = '368', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 19:49:28.642 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:49:28.643 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 19:49:28.643 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 19:49:28.653 [main] GenericDao - **********Saved|Updated entity: User{userId = '369', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 19:49:28.653 [main] GenericDao - **********Query database by using an ID: 369, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:49:28.657 [main] GenericDao - **********Query by ID Found: User{userId = '369', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 19:49:28.658 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:49:28.668 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:49:28.668 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 19:49:28.669 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:49:28.682 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:49:28.682 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:49:28.701 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:49:28.743 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:49:28.743 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 19:49:28.744 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:49:28.766 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 19:49:28.766 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:49:28.799 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 19:49:28.843 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:49:28.844 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 19:49:28.844 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 19:49:28.854 [main] GenericDao - **********Entity inserted: User{userId = '370', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 19:49:28.854 [main] GenericDao - **********Query database by using an ID: 370, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:49:28.858 [main] GenericDao - **********Query by ID Found: User{userId = '370', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 19:55:53.097 [http-nio-8080-exec-7] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:56:03.348 [http-nio-8080-exec-7] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 19:56:03.352 [http-nio-8080-exec-7] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 19:56:03.458 [http-nio-8080-exec-7] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:56:03.460 [http-nio-8080-exec-7] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:56:03.460 [http-nio-8080-exec-7] SearchRecipes - $$$$$$$$$ Working on finding the ingredients: [Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]
[INFO ] 2019-05-02 19:57:20.035 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 19:57:20.045 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 19:57:20.046 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 19:57:23.223 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 19:57:23.408 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 19:57:23.409 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 19:57:23.411 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 19:57:23.513 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 19:57:23.514 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 19:57:23.659 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:57:23.659 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 19:57:23.660 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:57:23.807 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:57:23.811 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:57:23.812 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:57:23.836 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:57:23.836 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:57:23.943 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:57:24.113 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:57:24.130 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 19:57:24.235 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:57:24.236 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 19:57:24.238 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:57:24.388 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:57:24.505 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:57:24.507 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 19:57:24.508 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:57:24.544 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:57:24.544 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:57:24.565 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:57:24.566 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:57:24.566 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:57:24.591 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:57:24.593 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T19:57:24.507, ingredients = []}
[INFO ] 2019-05-02 19:57:24.625 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 323, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T19:57:24.507, ingredients = []}
[INFO ] 2019-05-02 19:57:24.627 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 323, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T19:57:24.507, ingredients = []}
[INFO ] 2019-05-02 19:57:24.745 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:57:24.745 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 19:57:24.746 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:57:24.822 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 19:57:24.822 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 19:57:24.965 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:57:24.965 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:57:25.089 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:57:25.090 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 19:57:25.119 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:57:25.225 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:57:25.228 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 19:57:25.229 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 19:57:25.334 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:57:25.526 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 19:57:25.526 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 19:57:25.527 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:57:25.544 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 19:57:25.545 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:57:25.527, ingredients = []}
[INFO ] 2019-05-02 19:57:25.545 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:57:25.527, ingredients = []}
[INFO ] 2019-05-02 19:57:25.564 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 324, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:57:25.527, ingredients = []}
[INFO ] 2019-05-02 19:57:25.565 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 19:57:25.565 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 19:57:25.726 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 324, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T19:57:26, ingredients = []}]
[INFO ] 2019-05-02 19:57:25.728 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 19:57:25.746 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 19:57:25.813 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:57:25.813 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:57:25.868 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 19:57:25.993 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:57:25.994 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 19:57:25.995 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:57:26.001 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 19:57:26.002 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 19:57:26.004 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 19:57:26.106 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:57:26.118 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 19:57:26.238 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:57:26.238 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 19:57:26.238 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:57:26.260 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-02 19:57:26.378 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:57:26.380 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 19:57:26.380 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:57:26.559 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 19:57:26.694 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:57:26.694 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 19:57:26.695 [main] UserTest - -------Locale date time: 2019-05-02T19:57:26.694----------
[INFO ] 2019-05-02 19:57:26.695 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 19:57:26.706 [main] GenericDao - **********Entity inserted: User{userId = '371', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 19:57:26.707 [main] GenericDao - **********Query database by using an ID: 371, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:57:26.722 [main] GenericDao - **********Query by ID Found: User{userId = '371', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 19:57:26.820 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:57:26.825 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 19:57:26.825 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 19:57:26.841 [main] GenericDao - **********Saved|Updated entity: User{userId = '372', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 19:57:26.844 [main] GenericDao - **********Query database by using an ID: 372, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:57:26.862 [main] GenericDao - **********Query by ID Found: User{userId = '372', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 19:57:26.862 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:57:26.879 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:57:26.880 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 19:57:26.880 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:57:26.916 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:57:26.917 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:57:26.952 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 19:57:27.125 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:57:27.126 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 19:57:27.126 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:57:27.171 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 19:57:27.172 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:57:27.240 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 19:57:27.480 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 19:57:27.481 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 19:57:27.481 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 19:57:27.493 [main] GenericDao - **********Entity inserted: User{userId = '373', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 19:57:27.497 [main] GenericDao - **********Query database by using an ID: 373, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:57:27.507 [main] GenericDao - **********Query by ID Found: User{userId = '373', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 19:59:50.936 [http-nio-8080-exec-10] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 19:59:56.487 [http-nio-8080-exec-10] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 19:59:56.487 [http-nio-8080-exec-10] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 19:59:56.526 [http-nio-8080-exec-10] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:59:56.526 [http-nio-8080-exec-10] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 19:59:56.527 [http-nio-8080-exec-10] SearchRecipes - $$$$$$$$$ Working on finding the ingredients: [Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]
[INFO ] 2019-05-02 20:01:47.281 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 20:01:47.294 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 20:01:47.295 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 20:01:52.047 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 20:01:52.214 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 20:01:52.215 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 20:01:52.215 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 20:01:52.303 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 20:01:52.304 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 20:01:52.416 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:01:52.417 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 20:01:52.417 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 20:01:52.464 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:01:52.465 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:01:52.465 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 20:01:52.480 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:01:52.481 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:01:52.511 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:01:52.559 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 20:01:52.578 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 20:01:52.661 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:01:52.663 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 20:01:52.664 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 20:01:52.692 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:01:52.763 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:01:52.764 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 20:01:52.765 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:01:52.786 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 20:01:52.787 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:01:52.810 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 20:01:52.810 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 20:01:52.810 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:01:52.839 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 20:01:52.840 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T20:01:52.765, ingredients = []}
[INFO ] 2019-05-02 20:01:52.911 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 326, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T20:01:52.765, ingredients = []}
[INFO ] 2019-05-02 20:01:52.912 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 326, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T20:01:52.765, ingredients = []}
[INFO ] 2019-05-02 20:01:52.999 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:01:53.011 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 20:01:53.011 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:01:53.077 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 20:01:53.079 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 20:01:53.120 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:01:53.120 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:01:53.208 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:01:53.209 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 20:01:53.235 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:01:53.300 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:01:53.300 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 20:01:53.300 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 20:01:53.351 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:01:53.431 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:01:53.433 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 20:01:53.434 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:01:53.460 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 20:01:53.463 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T20:01:53.434, ingredients = []}
[INFO ] 2019-05-02 20:01:53.464 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T20:01:53.434, ingredients = []}
[INFO ] 2019-05-02 20:01:53.489 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 327, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T20:01:53.434, ingredients = []}
[INFO ] 2019-05-02 20:01:53.490 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 20:01:53.496 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 20:01:53.531 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 327, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T20:01:53, ingredients = []}]
[INFO ] 2019-05-02 20:01:53.532 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 20:01:53.536 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 20:01:53.552 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:01:53.552 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:01:53.572 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:01:53.669 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:01:53.670 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 20:01:53.670 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:01:53.681 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 20:01:53.681 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 20:01:53.683 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 20:01:53.689 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:01:53.694 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 20:01:53.776 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:01:53.777 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 20:01:53.777 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:01:53.804 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-02 20:01:53.895 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:01:53.896 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 20:01:53.896 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:01:53.982 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 20:01:54.062 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:01:54.062 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 20:01:54.063 [main] UserTest - -------Locale date time: 2019-05-02T20:01:54.063----------
[INFO ] 2019-05-02 20:01:54.063 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 20:01:54.078 [main] GenericDao - **********Entity inserted: User{userId = '374', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 20:01:54.078 [main] GenericDao - **********Query database by using an ID: 374, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:01:54.087 [main] GenericDao - **********Query by ID Found: User{userId = '374', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 20:01:54.146 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:01:54.146 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 20:01:54.146 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 20:01:54.156 [main] GenericDao - **********Saved|Updated entity: User{userId = '375', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 20:01:54.157 [main] GenericDao - **********Query database by using an ID: 375, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:01:54.166 [main] GenericDao - **********Query by ID Found: User{userId = '375', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 20:01:54.167 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:01:54.176 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-02 20:01:54.176 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 20:01:54.177 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 20:01:54.201 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 20:01:54.202 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:01:54.228 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 20:01:54.297 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:01:54.297 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 20:01:54.298 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:01:54.323 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 20:01:54.323 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:01:54.432 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 20:01:54.591 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:01:54.592 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 20:01:54.592 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 20:01:54.621 [main] GenericDao - **********Entity inserted: User{userId = '376', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 20:01:54.621 [main] GenericDao - **********Query database by using an ID: 376, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:01:54.632 [main] GenericDao - **********Query by ID Found: User{userId = '376', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 20:03:30.117 [http-nio-8080-exec-6] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:03:36.578 [http-nio-8080-exec-6] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 20:03:36.579 [http-nio-8080-exec-6] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 20:03:36.631 [http-nio-8080-exec-6] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:03:36.632 [http-nio-8080-exec-6] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:03:36.633 [http-nio-8080-exec-6] SearchRecipes - $$$$$$$$$ Working on finding the ingredients: [Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]
[INFO ] 2019-05-02 20:05:21.442 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 20:05:21.452 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 20:05:21.453 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 20:05:24.110 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 20:05:24.203 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 20:05:24.204 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 20:05:24.204 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 20:05:24.277 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 20:05:24.278 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 20:05:24.390 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:05:24.390 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 20:05:24.391 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 20:05:24.436 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:05:24.437 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:05:24.437 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 20:05:24.454 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:05:24.454 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:05:24.477 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:05:24.504 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 20:05:24.510 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 20:05:24.557 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:05:24.558 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 20:05:24.558 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 20:05:24.575 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:05:24.622 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:05:24.622 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 20:05:24.623 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:05:24.641 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 20:05:24.642 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:05:24.657 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 20:05:24.658 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 20:05:24.658 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:05:24.673 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 20:05:24.673 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T20:05:24.623, ingredients = []}
[INFO ] 2019-05-02 20:05:24.696 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 329, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T20:05:24.623, ingredients = []}
[INFO ] 2019-05-02 20:05:24.697 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 329, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T20:05:24.623, ingredients = []}
[INFO ] 2019-05-02 20:05:24.738 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:05:24.739 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 20:05:24.739 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:05:24.761 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 20:05:24.762 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 20:05:24.783 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:05:24.783 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:05:24.830 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:05:24.830 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 20:05:24.842 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:05:24.893 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:05:24.894 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 20:05:24.894 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 20:05:24.949 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:05:24.989 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:05:24.990 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 20:05:24.990 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:05:25.000 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 20:05:25.001 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T20:05:24.990, ingredients = []}
[INFO ] 2019-05-02 20:05:25.001 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T20:05:24.990, ingredients = []}
[INFO ] 2019-05-02 20:05:25.010 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 330, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T20:05:24.990, ingredients = []}
[INFO ] 2019-05-02 20:05:25.011 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 20:05:25.011 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 20:05:25.034 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 330, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T20:05:25, ingredients = []}]
[INFO ] 2019-05-02 20:05:25.034 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 20:05:25.035 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 20:05:25.050 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:05:25.051 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:05:25.060 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:05:25.125 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:05:25.126 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 20:05:25.126 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:05:25.132 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 20:05:25.132 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 20:05:25.134 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 20:05:25.139 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:05:25.144 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 20:05:25.189 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:05:25.189 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 20:05:25.190 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:05:25.201 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-02 20:05:25.240 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:05:25.240 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 20:05:25.240 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:05:25.312 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 20:05:25.349 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:05:25.350 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 20:05:25.350 [main] UserTest - -------Locale date time: 2019-05-02T20:05:25.350----------
[INFO ] 2019-05-02 20:05:25.350 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 20:05:25.365 [main] GenericDao - **********Entity inserted: User{userId = '377', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 20:05:25.366 [main] GenericDao - **********Query database by using an ID: 377, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:05:25.375 [main] GenericDao - **********Query by ID Found: User{userId = '377', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 20:05:25.417 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:05:25.418 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 20:05:25.418 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 20:05:25.426 [main] GenericDao - **********Saved|Updated entity: User{userId = '378', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 20:05:25.427 [main] GenericDao - **********Query database by using an ID: 378, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:05:25.432 [main] GenericDao - **********Query by ID Found: User{userId = '378', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 20:05:25.432 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:05:25.440 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-02 20:05:25.440 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 20:05:25.440 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 20:05:25.451 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 20:05:25.452 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:05:25.462 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 20:05:25.504 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:05:25.504 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 20:05:25.505 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:05:25.522 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 20:05:25.522 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:05:25.543 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 20:05:25.593 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:05:25.593 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 20:05:25.594 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 20:05:25.598 [main] GenericDao - **********Entity inserted: User{userId = '379', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 20:05:25.599 [main] GenericDao - **********Query database by using an ID: 379, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:05:25.603 [main] GenericDao - **********Query by ID Found: User{userId = '379', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 20:06:12.157 [http-nio-8080-exec-4] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:06:16.934 [http-nio-8080-exec-4] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 20:06:16.934 [http-nio-8080-exec-4] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 20:06:16.979 [http-nio-8080-exec-4] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:06:16.980 [http-nio-8080-exec-4] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:06:16.980 [http-nio-8080-exec-4] SearchRecipes - $$$$$$$$$ Working on finding the ingredients: [Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]
[INFO ] 2019-05-02 20:08:33.387 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 20:08:33.396 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 20:08:33.396 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 20:08:36.119 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 20:08:36.255 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 20:08:36.257 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 20:08:36.257 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 20:08:36.333 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 20:08:36.334 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 20:08:36.430 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:08:36.431 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 20:08:36.431 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 20:08:36.476 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:08:36.476 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:08:36.476 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 20:08:36.491 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:08:36.492 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:08:36.514 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:08:36.548 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 20:08:36.553 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 20:08:36.620 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:08:36.620 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 20:08:36.620 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 20:08:36.645 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:08:36.701 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:08:36.702 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 20:08:36.705 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:08:36.737 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 20:08:36.738 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:08:36.747 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 20:08:36.750 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 20:08:36.751 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:08:36.764 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 20:08:36.764 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T20:08:36.705, ingredients = []}
[INFO ] 2019-05-02 20:08:36.799 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 332, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T20:08:36.705, ingredients = []}
[INFO ] 2019-05-02 20:08:36.800 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 332, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T20:08:36.705, ingredients = []}
[INFO ] 2019-05-02 20:08:36.854 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:08:36.855 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 20:08:36.855 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:08:36.882 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 20:08:36.883 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 20:08:36.900 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:08:36.901 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:08:36.956 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:08:36.956 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 20:08:36.975 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:08:37.020 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:08:37.021 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 20:08:37.021 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 20:08:37.085 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:08:37.130 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:08:37.131 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 20:08:37.131 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:08:37.140 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 20:08:37.140 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T20:08:37.131, ingredients = []}
[INFO ] 2019-05-02 20:08:37.140 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T20:08:37.131, ingredients = []}
[INFO ] 2019-05-02 20:08:37.150 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 333, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T20:08:37.131, ingredients = []}
[INFO ] 2019-05-02 20:08:37.150 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 20:08:37.150 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 20:08:37.166 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 333, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T20:08:37, ingredients = []}]
[INFO ] 2019-05-02 20:08:37.166 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 20:08:37.166 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 20:08:37.182 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:08:37.182 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:08:37.194 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:08:37.271 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:08:37.272 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 20:08:37.274 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:08:37.285 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 20:08:37.287 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 20:08:37.289 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 20:08:37.296 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:08:37.299 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 20:08:37.346 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:08:37.346 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 20:08:37.346 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:08:37.360 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-02 20:08:37.407 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:08:37.407 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 20:08:37.409 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:08:37.498 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 20:08:37.539 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:08:37.539 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 20:08:37.539 [main] UserTest - -------Locale date time: 2019-05-02T20:08:37.539----------
[INFO ] 2019-05-02 20:08:37.540 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 20:08:37.547 [main] GenericDao - **********Entity inserted: User{userId = '380', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 20:08:37.547 [main] GenericDao - **********Query database by using an ID: 380, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:08:37.552 [main] GenericDao - **********Query by ID Found: User{userId = '380', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 20:08:37.587 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:08:37.588 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 20:08:37.588 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 20:08:37.601 [main] GenericDao - **********Saved|Updated entity: User{userId = '381', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 20:08:37.602 [main] GenericDao - **********Query database by using an ID: 381, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:08:37.606 [main] GenericDao - **********Query by ID Found: User{userId = '381', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 20:08:37.607 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:08:37.621 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-02 20:08:37.622 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 20:08:37.622 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 20:08:37.630 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 20:08:37.630 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:08:37.643 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 20:08:37.699 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:08:37.700 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 20:08:37.700 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:08:37.723 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 20:08:37.724 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:08:37.749 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 20:08:37.789 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:08:37.789 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 20:08:37.789 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 20:08:37.797 [main] GenericDao - **********Entity inserted: User{userId = '382', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 20:08:37.798 [main] GenericDao - **********Query database by using an ID: 382, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:08:37.804 [main] GenericDao - **********Query by ID Found: User{userId = '382', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 20:09:09.994 [http-nio-8080-exec-4] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:09:15.531 [http-nio-8080-exec-4] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 20:09:15.532 [http-nio-8080-exec-4] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 20:09:15.586 [http-nio-8080-exec-4] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:09:15.587 [http-nio-8080-exec-4] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:09:15.587 [http-nio-8080-exec-4] SearchRecipes - $$$$$$$$$ Working on finding the ingredients: [Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]
[INFO ] 2019-05-02 20:11:06.395 [http-nio-8080-exec-10] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:11:06.447 [http-nio-8080-exec-10] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 20:11:06.448 [http-nio-8080-exec-10] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 20:11:06.480 [http-nio-8080-exec-10] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}]
[INFO ] 2019-05-02 20:11:06.481 [http-nio-8080-exec-10] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}]
[INFO ] 2019-05-02 20:11:06.481 [http-nio-8080-exec-10] SearchRecipes - $$$$$$$$$ Working on finding the ingredients: [Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}]
[INFO ] 2019-05-02 20:11:52.240 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 20:11:52.251 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 20:11:52.252 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 20:11:55.006 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 20:11:55.091 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 20:11:55.092 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 20:11:55.093 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 20:11:55.166 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 20:11:55.166 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 20:11:55.267 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:11:55.268 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 20:11:55.268 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 20:11:55.311 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:11:55.312 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:11:55.312 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 20:11:55.327 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:11:55.327 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:11:55.348 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:11:55.388 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 20:11:55.393 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 20:11:55.441 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:11:55.442 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 20:11:55.443 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 20:11:55.464 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:11:55.518 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:11:55.519 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 20:11:55.520 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:11:55.537 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 20:11:55.538 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:11:55.550 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 20:11:55.551 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 20:11:55.551 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:11:55.568 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 20:11:55.568 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T20:11:55.520, ingredients = []}
[INFO ] 2019-05-02 20:11:55.597 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 335, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T20:11:55.520, ingredients = []}
[INFO ] 2019-05-02 20:11:55.598 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 335, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T20:11:55.520, ingredients = []}
[INFO ] 2019-05-02 20:11:55.648 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:11:55.649 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 20:11:55.649 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:11:55.686 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 20:11:55.686 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 20:11:55.706 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:11:55.706 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:11:55.762 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:11:55.763 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 20:11:55.780 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:11:55.836 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:11:55.839 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 20:11:55.839 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 20:11:55.903 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:11:55.949 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:11:55.950 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 20:11:55.950 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:11:55.958 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 20:11:55.959 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T20:11:55.950, ingredients = []}
[INFO ] 2019-05-02 20:11:55.959 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T20:11:55.950, ingredients = []}
[INFO ] 2019-05-02 20:11:55.966 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 336, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T20:11:55.950, ingredients = []}
[INFO ] 2019-05-02 20:11:55.966 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 20:11:55.966 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 20:11:55.987 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 336, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T20:11:56, ingredients = []}]
[INFO ] 2019-05-02 20:11:55.987 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 20:11:55.988 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 20:11:56.007 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:11:56.007 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:11:56.014 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:11:56.088 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:11:56.089 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 20:11:56.089 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:11:56.095 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 20:11:56.095 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 20:11:56.097 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 20:11:56.105 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:11:56.113 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 20:11:56.167 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:11:56.167 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 20:11:56.168 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:11:56.179 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-02 20:11:56.235 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:11:56.236 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 20:11:56.236 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:11:56.342 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 20:11:56.399 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:11:56.399 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 20:11:56.400 [main] UserTest - -------Locale date time: 2019-05-02T20:11:56.400----------
[INFO ] 2019-05-02 20:11:56.400 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 20:11:56.413 [main] GenericDao - **********Entity inserted: User{userId = '383', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 20:11:56.413 [main] GenericDao - **********Query database by using an ID: 383, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:11:56.419 [main] GenericDao - **********Query by ID Found: User{userId = '383', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 20:11:56.467 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:11:56.467 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 20:11:56.468 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 20:11:56.480 [main] GenericDao - **********Saved|Updated entity: User{userId = '384', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 20:11:56.480 [main] GenericDao - **********Query database by using an ID: 384, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:11:56.486 [main] GenericDao - **********Query by ID Found: User{userId = '384', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 20:11:56.487 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:11:56.500 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-02 20:11:56.500 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 20:11:56.501 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 20:11:56.513 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 20:11:56.513 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:11:56.534 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 20:11:56.579 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:11:56.579 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 20:11:56.579 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:11:56.593 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 20:11:56.593 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:11:56.614 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 20:11:56.661 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:11:56.662 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 20:11:56.662 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 20:11:56.669 [main] GenericDao - **********Entity inserted: User{userId = '385', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 20:11:56.669 [main] GenericDao - **********Query database by using an ID: 385, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:11:56.673 [main] GenericDao - **********Query by ID Found: User{userId = '385', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 20:12:43.352 [http-nio-8080-exec-5] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:12:48.631 [http-nio-8080-exec-5] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 20:12:48.635 [http-nio-8080-exec-5] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 20:12:48.673 [http-nio-8080-exec-5] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}]
[INFO ] 2019-05-02 20:12:48.673 [http-nio-8080-exec-5] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}]
[INFO ] 2019-05-02 20:12:48.674 [http-nio-8080-exec-5] SearchRecipes - $$$$$$$$$ Working on finding the ingredients: [Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]
[INFO ] 2019-05-02 20:50:28.552 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 20:50:28.564 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 20:50:28.564 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 20:50:31.357 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 20:50:31.523 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 20:50:31.524 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 20:50:31.524 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 20:50:31.613 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 20:50:31.613 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 20:50:31.708 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:50:31.709 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 20:50:31.710 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 20:50:31.765 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:50:31.765 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:50:31.766 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 20:50:31.790 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:50:31.790 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:50:31.818 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:50:31.877 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 20:50:31.883 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 20:50:31.942 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:50:31.942 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 20:50:31.942 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 20:50:31.969 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:50:32.022 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:50:32.023 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 20:50:32.024 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:50:32.042 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 20:50:32.044 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:50:32.054 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 20:50:32.055 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 20:50:32.055 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:50:32.074 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 20:50:32.074 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T20:50:32.024, ingredients = []}
[INFO ] 2019-05-02 20:50:32.108 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 338, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T20:50:32.024, ingredients = []}
[INFO ] 2019-05-02 20:50:32.108 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 338, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T20:50:32.024, ingredients = []}
[INFO ] 2019-05-02 20:50:32.153 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:50:32.155 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 20:50:32.156 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:50:32.188 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 20:50:32.188 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 20:50:32.217 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:50:32.217 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:50:32.296 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:50:32.297 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 20:50:32.315 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:50:32.364 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:50:32.365 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 20:50:32.365 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 20:50:32.418 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:50:32.478 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 20:50:32.479 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 20:50:32.481 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:50:32.509 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 20:50:32.510 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T20:50:32.480, ingredients = []}
[INFO ] 2019-05-02 20:50:32.510 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T20:50:32.480, ingredients = []}
[INFO ] 2019-05-02 20:50:32.525 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 339, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T20:50:32.480, ingredients = []}
[INFO ] 2019-05-02 20:50:32.525 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 20:50:32.525 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 20:50:32.544 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 339, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T20:50:32, ingredients = []}]
[INFO ] 2019-05-02 20:50:32.544 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 20:50:32.545 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 20:50:32.564 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 20:50:32.565 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:50:32.575 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 20:50:32.642 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:50:32.643 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 20:50:32.644 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:50:32.653 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 20:50:32.653 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 20:50:32.655 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 20:50:32.660 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:50:32.664 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 20:50:32.731 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:50:32.732 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 20:50:32.732 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:50:32.745 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-02 20:50:32.788 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:50:32.789 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 20:50:32.789 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:50:32.875 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 20:50:32.926 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:50:32.930 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 20:50:32.931 [main] UserTest - -------Locale date time: 2019-05-02T20:50:32.931----------
[INFO ] 2019-05-02 20:50:32.931 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 20:50:32.945 [main] GenericDao - **********Entity inserted: User{userId = '386', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 20:50:32.945 [main] GenericDao - **********Query database by using an ID: 386, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:50:32.951 [main] GenericDao - **********Query by ID Found: User{userId = '386', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 20:50:32.997 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:50:32.997 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 20:50:32.997 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 20:50:33.003 [main] GenericDao - **********Saved|Updated entity: User{userId = '387', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 20:50:33.003 [main] GenericDao - **********Query database by using an ID: 387, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:50:33.014 [main] GenericDao - **********Query by ID Found: User{userId = '387', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 20:50:33.014 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:50:33.024 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-02 20:50:33.025 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 20:50:33.025 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 20:50:33.042 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 20:50:33.043 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:50:33.052 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 20:50:33.109 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:50:33.110 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 20:50:33.112 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:50:33.131 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 20:50:33.131 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:50:33.158 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 20:50:33.211 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 20:50:33.212 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 20:50:33.213 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 20:50:33.217 [main] GenericDao - **********Entity inserted: User{userId = '388', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 20:50:33.218 [main] GenericDao - **********Query database by using an ID: 388, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:50:33.222 [main] GenericDao - **********Query by ID Found: User{userId = '388', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 20:51:12.956 [http-nio-8080-exec-7] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 20:51:19.135 [http-nio-8080-exec-7] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 20:51:19.135 [http-nio-8080-exec-7] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 20:51:19.183 [http-nio-8080-exec-7] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}]
[INFO ] 2019-05-02 20:51:19.184 [http-nio-8080-exec-7] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}]
[INFO ] 2019-05-02 20:51:19.184 [http-nio-8080-exec-7] SearchRecipes - $$$$$$$$$ Working on finding the ingredients: [Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]
[INFO ] 2019-05-02 21:00:10.197 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 21:00:10.206 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 21:00:10.206 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 21:00:12.962 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 21:00:13.081 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 21:00:13.081 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 21:00:13.082 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 21:00:13.146 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 21:00:13.147 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 21:00:13.260 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 21:00:13.261 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 21:00:13.261 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 21:00:13.306 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 21:00:13.307 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 21:00:13.307 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 21:00:13.331 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 21:00:13.331 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 21:00:13.361 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 21:00:13.408 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 21:00:13.413 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 21:00:13.460 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 21:00:13.461 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 21:00:13.461 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 21:00:13.485 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 21:00:13.539 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 21:00:13.540 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 21:00:13.541 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:00:13.558 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 21:00:13.558 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:00:13.592 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 21:00:13.592 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 21:00:13.592 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:00:13.610 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 21:00:13.610 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T21:00:13.541, ingredients = []}
[INFO ] 2019-05-02 21:00:13.645 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 341, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T21:00:13.541, ingredients = []}
[INFO ] 2019-05-02 21:00:13.646 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 341, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T21:00:13.541, ingredients = []}
[INFO ] 2019-05-02 21:00:13.683 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 21:00:13.684 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 21:00:13.684 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:00:13.715 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 21:00:13.715 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 21:00:13.755 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 21:00:13.755 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 21:00:13.831 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 21:00:13.831 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 21:00:13.851 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 21:00:13.901 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 21:00:13.901 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 21:00:13.902 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 21:00:13.967 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 21:00:14.041 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 21:00:14.042 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 21:00:14.044 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:00:14.062 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 21:00:14.062 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T21:00:14.044, ingredients = []}
[INFO ] 2019-05-02 21:00:14.062 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T21:00:14.044, ingredients = []}
[INFO ] 2019-05-02 21:00:14.073 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 342, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T21:00:14.044, ingredients = []}
[INFO ] 2019-05-02 21:00:14.074 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 21:00:14.074 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 21:00:14.098 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 342, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T21:00:14, ingredients = []}]
[INFO ] 2019-05-02 21:00:14.099 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 21:00:14.099 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 21:00:14.117 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 21:00:14.117 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 21:00:14.136 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 21:00:14.224 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 21:00:14.225 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 21:00:14.225 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:00:14.236 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 21:00:14.236 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 21:00:14.238 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 21:00:14.243 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:00:14.251 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 21:00:14.301 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 21:00:14.302 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 21:00:14.302 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:00:14.311 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-02 21:00:14.351 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 21:00:14.352 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 21:00:14.352 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:00:14.456 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 21:00:14.517 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 21:00:14.517 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 21:00:14.517 [main] UserTest - -------Locale date time: 2019-05-02T21:00:14.517----------
[INFO ] 2019-05-02 21:00:14.518 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 21:00:14.531 [main] GenericDao - **********Entity inserted: User{userId = '389', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 21:00:14.531 [main] GenericDao - **********Query database by using an ID: 389, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:00:14.542 [main] GenericDao - **********Query by ID Found: User{userId = '389', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 21:00:14.590 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 21:00:14.590 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 21:00:14.590 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 21:00:14.596 [main] GenericDao - **********Saved|Updated entity: User{userId = '390', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 21:00:14.596 [main] GenericDao - **********Query database by using an ID: 390, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:00:14.608 [main] GenericDao - **********Query by ID Found: User{userId = '390', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 21:00:14.608 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:00:14.621 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-02 21:00:14.621 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 21:00:14.621 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 21:00:14.631 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 21:00:14.632 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:00:14.647 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 21:00:14.696 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 21:00:14.697 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 21:00:14.697 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:00:14.710 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 21:00:14.710 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:00:14.735 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 21:00:14.794 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 21:00:14.794 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 21:00:14.794 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 21:00:14.799 [main] GenericDao - **********Entity inserted: User{userId = '391', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 21:00:14.800 [main] GenericDao - **********Query database by using an ID: 391, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:00:14.811 [main] GenericDao - **********Query by ID Found: User{userId = '391', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 21:01:00.591 [http-nio-8080-exec-7] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:01:06.097 [http-nio-8080-exec-7] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 21:01:06.097 [http-nio-8080-exec-7] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 21:01:06.177 [http-nio-8080-exec-7] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}]
[INFO ] 2019-05-02 21:01:06.180 [http-nio-8080-exec-7] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}]
[INFO ] 2019-05-02 21:01:06.181 [http-nio-8080-exec-7] SearchRecipes - $$$$$$$$$ Working on finding the ingredients: [Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]
[INFO ] 2019-05-02 21:01:45.717 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 21:01:45.728 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-02 21:01:45.729 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-02 21:01:48.489 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 21:01:48.570 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-02 21:01:48.570 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-02 21:01:48.570 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-02 21:01:48.650 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 21:01:48.651 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-02 21:01:48.749 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 21:01:48.749 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-02 21:01:48.750 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 21:01:48.804 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 21:01:48.805 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 21:01:48.805 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 21:01:48.828 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 21:01:48.828 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 21:01:48.853 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 21:01:48.889 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 21:01:48.893 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 21:01:48.953 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 21:01:48.954 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 21:01:48.954 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 21:01:48.972 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 21:01:49.016 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 21:01:49.017 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-02 21:01:49.017 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:01:49.035 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 21:01:49.036 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:01:49.055 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 21:01:49.056 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 21:01:49.056 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:01:49.069 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 21:01:49.069 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T21:01:49.017, ingredients = []}
[INFO ] 2019-05-02 21:01:49.113 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 344, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T21:01:49.017, ingredients = []}
[INFO ] 2019-05-02 21:01:49.113 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 344, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-02T21:01:49.017, ingredients = []}
[INFO ] 2019-05-02 21:01:49.171 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 21:01:49.172 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-02 21:01:49.172 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:01:49.198 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 21:01:49.199 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 21:01:49.230 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 21:01:49.231 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 21:01:49.286 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 21:01:49.289 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-02 21:01:49.304 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 21:01:49.379 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 21:01:49.380 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-02 21:01:49.380 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 21:01:49.448 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 21:01:49.518 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-02 21:01:49.519 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-02 21:01:49.520 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:01:49.536 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-02 21:01:49.537 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T21:01:49.520, ingredients = []}
[INFO ] 2019-05-02 21:01:49.537 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T21:01:49.520, ingredients = []}
[INFO ] 2019-05-02 21:01:49.545 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 345, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T21:01:49.520, ingredients = []}
[INFO ] 2019-05-02 21:01:49.545 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-02 21:01:49.545 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-02 21:01:49.570 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 345, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-02T21:01:50, ingredients = []}]
[INFO ] 2019-05-02 21:01:49.570 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-02 21:01:49.571 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-02 21:01:49.600 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 21:01:49.601 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 21:01:49.617 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-02 21:01:49.734 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 21:01:49.734 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-02 21:01:49.734 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:01:49.740 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 21:01:49.740 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 21:01:49.742 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-02 21:01:49.755 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:01:49.760 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-02 21:01:49.821 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 21:01:49.821 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-02 21:01:49.821 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:01:49.830 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-02 21:01:49.867 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 21:01:49.867 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-02 21:01:49.868 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:01:49.942 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 21:01:50.001 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 21:01:50.001 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-02 21:01:50.002 [main] UserTest - -------Locale date time: 2019-05-02T21:01:50.002----------
[INFO ] 2019-05-02 21:01:50.002 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 21:01:50.010 [main] GenericDao - **********Entity inserted: User{userId = '392', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 21:01:50.010 [main] GenericDao - **********Query database by using an ID: 392, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:01:50.024 [main] GenericDao - **********Query by ID Found: User{userId = '392', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-02 21:01:50.069 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 21:01:50.070 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-02 21:01:50.070 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 21:01:50.076 [main] GenericDao - **********Saved|Updated entity: User{userId = '393', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 21:01:50.077 [main] GenericDao - **********Query database by using an ID: 393, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:01:50.084 [main] GenericDao - **********Query by ID Found: User{userId = '393', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-02 21:01:50.084 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:01:50.095 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-02 21:01:50.095 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-02 21:01:50.096 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 21:01:50.111 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 21:01:50.111 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:01:50.134 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-02 21:01:50.207 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 21:01:50.209 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-02 21:01:50.209 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:01:50.231 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-02 21:01:50.232 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:01:50.255 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-02 21:01:50.305 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-02 21:01:50.306 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-02 21:01:50.306 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 21:01:50.317 [main] GenericDao - **********Entity inserted: User{userId = '394', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 21:01:50.317 [main] GenericDao - **********Query database by using an ID: 394, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:01:50.322 [main] GenericDao - **********Query by ID Found: User{userId = '394', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-02 21:02:59.057 [http-nio-8080-exec-5] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-02 21:03:03.961 [http-nio-8080-exec-5] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-02 21:03:03.962 [http-nio-8080-exec-5] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-02 21:03:04.004 [http-nio-8080-exec-5] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}]
[INFO ] 2019-05-02 21:03:04.005 [http-nio-8080-exec-5] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}]
[INFO ] 2019-05-02 21:03:04.005 [http-nio-8080-exec-5] SearchRecipes - $$$$$$$$$ Working on finding the ingredients: [Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]
[INFO ] 2019-05-02 21:03:29.827 [http-nio-8080-exec-9] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 21:03:29.923 [http-nio-8080-exec-9] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '8', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'AdminMan'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}, UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}, UserRecipes{recipeId = 4, user = User{userId = '10', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'General'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '11', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'General'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '13', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'General'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '14', firstName = 'Thor', lastName = 'Odinson', userName = 'Thor33', userPassword = 'General'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '15', firstName = 'Iron', lastName = 'Man', userName = 'Iman33', userPassword = 'General'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '15', firstName = 'Iron', lastName = 'Man', userName = 'Iman33', userPassword = 'General'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '16', firstName = 'Star', lastName = 'Lord', userName = 'LordOfStars', userPassword = 'General'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-02 21:03:35.153 [http-nio-8080-exec-2] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-02 21:03:35.232 [http-nio-8080-exec-2] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '8', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'AdminMan'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}, UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}, UserRecipes{recipeId = 4, user = User{userId = '10', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'General'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '11', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'General'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '13', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'General'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '14', firstName = 'Thor', lastName = 'Odinson', userName = 'Thor33', userPassword = 'General'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '15', firstName = 'Iron', lastName = 'Man', userName = 'Iman33', userPassword = 'General'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '15', firstName = 'Iron', lastName = 'Man', userName = 'Iman33', userPassword = 'General'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '16', firstName = 'Star', lastName = 'Lord', userName = 'LordOfStars', userPassword = 'General'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-03 16:20:42.269 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-03 16:20:42.302 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-03 16:20:42.303 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-03 16:20:49.817 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-03 16:20:49.943 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-03 16:20:49.943 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-03 16:20:49.944 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-03 16:20:50.062 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-03 16:20:50.063 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-03 16:20:50.238 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-03 16:20:50.239 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-03 16:20:50.241 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-03 16:20:50.307 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-03 16:20:50.308 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-03 16:20:50.308 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-03 16:20:50.328 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-03 16:20:50.328 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-03 16:20:50.384 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-03 16:20:50.469 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-03 16:20:50.476 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-03 16:20:50.530 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-03 16:20:50.531 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-03 16:20:50.531 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-03 16:20:50.562 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-03 16:20:50.622 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-03 16:20:50.623 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-03 16:20:50.625 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-03 16:20:50.638 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-03 16:20:50.638 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-03 16:20:50.671 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-03 16:20:50.672 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-03 16:20:50.673 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-03 16:20:50.693 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-03 16:20:50.694 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-03T16:20:50.625, ingredients = []}
[INFO ] 2019-05-03 16:20:50.748 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 347, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-03T16:20:50.625, ingredients = []}
[INFO ] 2019-05-03 16:20:50.748 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 347, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-03T16:20:50.625, ingredients = []}
[INFO ] 2019-05-03 16:20:50.819 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-03 16:20:50.821 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-03 16:20:50.822 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-03 16:20:50.851 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-03 16:20:50.851 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-03 16:20:50.874 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-03 16:20:50.874 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-03 16:20:50.982 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-03 16:20:50.983 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-03 16:20:51.007 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-03 16:20:51.069 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-03 16:20:51.069 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-03 16:20:51.070 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-03 16:20:51.131 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-03 16:20:51.216 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-03 16:20:51.217 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-03 16:20:51.218 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-03 16:20:51.232 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-03 16:20:51.232 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-03T16:20:51.218, ingredients = []}
[INFO ] 2019-05-03 16:20:51.233 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-03T16:20:51.218, ingredients = []}
[INFO ] 2019-05-03 16:20:51.246 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 348, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-03T16:20:51.218, ingredients = []}
[INFO ] 2019-05-03 16:20:51.247 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-03 16:20:51.247 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-03 16:20:51.270 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 348, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-03T16:20:51, ingredients = []}]
[INFO ] 2019-05-03 16:20:51.271 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-03 16:20:51.272 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-03 16:20:51.289 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-03 16:20:51.290 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-03 16:20:51.306 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-03 16:20:51.422 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-03 16:20:51.422 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-03 16:20:51.423 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-03 16:20:51.431 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-03 16:20:51.431 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-03 16:20:51.433 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-03 16:20:51.441 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-03 16:20:51.447 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-03 16:20:51.499 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-03 16:20:51.501 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-03 16:20:51.501 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-03 16:20:51.516 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-03 16:20:51.597 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-03 16:20:51.597 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-03 16:20:51.597 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-03 16:20:51.699 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-03 16:20:51.751 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-03 16:20:51.751 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-03 16:20:51.752 [main] UserTest - -------Locale date time: 2019-05-03T16:20:51.752----------
[INFO ] 2019-05-03 16:20:51.752 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-03 16:20:51.766 [main] GenericDao - **********Entity inserted: User{userId = '395', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-03 16:20:51.766 [main] GenericDao - **********Query database by using an ID: 395, of Type: class edu.matc.entity.User
[INFO ] 2019-05-03 16:20:51.773 [main] GenericDao - **********Query by ID Found: User{userId = '395', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-03 16:20:51.850 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-03 16:20:51.850 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-03 16:20:51.850 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-03 16:20:51.861 [main] GenericDao - **********Saved|Updated entity: User{userId = '396', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-03 16:20:51.861 [main] GenericDao - **********Query database by using an ID: 396, of Type: class edu.matc.entity.User
[INFO ] 2019-05-03 16:20:51.866 [main] GenericDao - **********Query by ID Found: User{userId = '396', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-03 16:20:51.867 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-03 16:20:51.880 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-03 16:20:51.880 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-03 16:20:51.880 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-03 16:20:51.891 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-03 16:20:51.891 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-03 16:20:51.904 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-03 16:20:51.946 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-03 16:20:51.947 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-03 16:20:51.947 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-03 16:20:51.966 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-03 16:20:51.966 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-03 16:20:51.993 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-03 16:20:52.051 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-03 16:20:52.052 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-03 16:20:52.052 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-03 16:20:52.062 [main] GenericDao - **********Entity inserted: User{userId = '397', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-03 16:20:52.063 [main] GenericDao - **********Query database by using an ID: 397, of Type: class edu.matc.entity.User
[INFO ] 2019-05-03 16:20:52.070 [main] GenericDao - **********Query by ID Found: User{userId = '397', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-03 16:21:56.015 [http-nio-8080-exec-7] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-03 16:22:00.577 [http-nio-8080-exec-7] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-03 16:22:00.577 [http-nio-8080-exec-7] GenericDao - **********Querying user recipes by ID: 9
[INFO ] 2019-05-03 16:22:00.613 [http-nio-8080-exec-7] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}]
[INFO ] 2019-05-03 16:22:00.613 [http-nio-8080-exec-7] SearchRecipes - Recipe Info: [UserRecipes{recipeId = 2, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]}, UserRecipes{recipeId = 3, user = User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = [Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}]}]
[INFO ] 2019-05-03 16:22:00.613 [http-nio-8080-exec-7] SearchRecipes - $$$$$$$$$ Working on finding the ingredients: [Ingredients{ingredientId = 1, ingredientName = Onion, ingredientCategory = Root Vegetable, price = 0, priceMeasurementUnit = Per Pound, brand = null, groceryLists = []}, Ingredients{ingredientId = 3, ingredientName = Can of Coconut Milk, ingredientCategory = Canned Food, price = 2, priceMeasurementUnit = Per 13.5 ounce can, brand = Chaokoh, groceryLists = []}, Ingredients{ingredientId = 2, ingredientName = Kale, ingredientCategory = Leafy Green Vegetable, price = 1, priceMeasurementUnit = Per Bundle, brand = null, groceryLists = []}]
