[INFO ] 2019-05-05 12:03:43.153 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-05 12:03:43.171 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-05 12:03:43.171 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-05 12:03:46.200 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 12:03:46.350 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-05 12:03:46.350 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-05 12:03:46.351 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-05 12:03:46.437 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 12:03:46.437 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 12:03:46.556 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:03:46.557 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-05 12:03:46.557 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 12:03:46.617 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:03:46.621 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:03:46.622 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 12:03:46.638 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:03:46.638 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:03:46.691 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:03:46.723 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 12:03:46.728 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-05 12:03:46.806 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:03:46.807 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-05 12:03:46.807 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 12:03:46.839 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:03:46.898 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:03:46.899 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-05 12:03:46.900 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:03:46.928 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 12:03:46.929 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:03:46.953 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 12:03:46.953 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 12:03:46.953 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:03:46.965 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 12:03:46.965 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T12:03:46.900, ingredients = []}
[INFO ] 2019-05-05 12:03:47.000 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 425, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T12:03:46.900, ingredients = []}
[INFO ] 2019-05-05 12:03:47.002 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 425, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T12:03:46.900, ingredients = []}
[INFO ] 2019-05-05 12:03:47.058 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:03:47.059 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-05 12:03:47.059 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:03:47.084 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-05 12:03:47.084 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-05 12:03:47.111 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 12:03:47.112 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 12:03:47.161 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:03:47.161 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-05 12:03:47.179 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 12:03:47.222 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:03:47.223 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-05 12:03:47.223 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 12:03:47.273 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 12:03:47.332 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:03:47.333 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-05 12:03:47.334 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:03:47.350 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 12:03:47.350 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T12:03:47.334, ingredients = []}
[INFO ] 2019-05-05 12:03:47.350 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T12:03:47.334, ingredients = []}
[INFO ] 2019-05-05 12:03:47.362 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 426, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T12:03:47.334, ingredients = []}
[INFO ] 2019-05-05 12:03:47.363 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-05 12:03:47.363 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-05 12:03:47.380 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 426, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T12:03:47, ingredients = []}]
[INFO ] 2019-05-05 12:03:47.381 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-05 12:03:47.381 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-05 12:03:47.403 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 12:03:47.404 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:03:47.426 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:03:47.517 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:03:47.518 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-05 12:03:47.519 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:03:47.530 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 12:03:47.530 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 12:03:47.531 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 12:03:47.537 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:03:47.541 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-05 12:03:47.604 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:03:47.605 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-05 12:03:47.605 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:03:47.623 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-05 12:03:47.677 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:03:47.677 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-05 12:03:47.678 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:03:47.749 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-05 12:03:47.797 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:03:47.798 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-05 12:03:47.798 [main] UserTest - -------Locale date time: 2019-05-05T12:03:47.798----------
[INFO ] 2019-05-05 12:03:47.799 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 12:03:47.815 [main] GenericDao - **********Entity inserted: User{userId = '473', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 12:03:47.816 [main] GenericDao - **********Query database by using an ID: 473, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:03:47.823 [main] GenericDao - **********Query by ID Found: User{userId = '473', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 12:03:47.865 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:03:47.866 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-05 12:03:47.866 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 12:03:47.872 [main] GenericDao - **********Saved|Updated entity: User{userId = '474', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 12:03:47.872 [main] GenericDao - **********Query database by using an ID: 474, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:03:47.880 [main] GenericDao - **********Query by ID Found: User{userId = '474', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 12:03:47.880 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:03:47.896 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-05 12:03:47.897 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-05 12:03:47.897 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 12:03:47.906 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 12:03:47.907 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:03:47.921 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 12:03:47.969 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:03:47.970 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-05 12:03:47.970 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:03:47.991 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-05 12:03:47.992 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:03:48.022 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-05 12:03:48.066 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:03:48.066 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-05 12:03:48.066 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 12:03:48.074 [main] GenericDao - **********Entity inserted: User{userId = '475', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 12:03:48.074 [main] GenericDao - **********Query database by using an ID: 475, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:03:48.079 [main] GenericDao - **********Query by ID Found: User{userId = '475', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 12:03:49.732 [main] YummlyDataGrabber - $$$$$$$$$$ Criteria Request returned Object: Criteria{facetCounts = 'FacetCounts{}',criteria = 'Criteria{facetCounts = 'null',criteria = 'null',attribution = 'null',matches = 'null',totalMatchCount = '0',q = 'Pad Thai',allowedIngredient = 'null',excludedIngredient = 'null'}',attribution = 'Attribution{logo = 'https://static.yummly.co/api-logo.png',html = 'Recipe search powered by <a href='http://www.yummly.co/recipes'><img alt='Yummly' src='https://static.yummly.co/api-logo.png'/></a>',text = 'Recipe search powered by Yummly',url = 'http://www.yummly.co/recipes/'}',matches = '[MatchesItem{recipeName = 'Classic Pad Thai',flavors = 'null',sourceDisplayName = 'Taste',smallImageUrls = '[https://lh3.googleusercontent.com/n6-iEQ-eB_tZ2xZ_9MQ7VrviKyNUG22WwXOrQ4sCnoc3k_R3ROGhVruW2nf74SqKiqTYVpIHj4WEVPROsUEBnH0=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9YxdRCk-f2qJ6aVEuyFIfBOyK2ae_qMABx-WAboDFPkt-V_4rk3OCW6zqbBGDlq8XkPBo7v7m_FMoqhaRBHLM0=s90-c'}',ingredients = '[minced garlic, thai chiles, palm sugar, tamarind paste, asian fish sauce, fresh lime juice, pad thai noodles, canola oil, large shrimp, red pepper flakes, eggs, extra firm tofu, carrots, bean sprouts, green onions, cilantro leaves, roasted peanuts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Classic-Pad-Thai-2151767'}, MatchesItem{recipeName = 'Shrimp Pad-Thai',flavors = 'null',sourceDisplayName = 'simple.artistic.cooking',smallImageUrls = '[https://lh3.googleusercontent.com/THkysjs-7NkPHvVlAHnMQ8QJbB83_v7glyf_LjGs6buHIusQixQ5OzzNrfiTxVUxuqbHXn4MHZ6gXJ4FN3u7qBU=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/F-3Ds9UUGjz6puJq4xVBr4ISkYWN2gxjRQHpwph7YLG54JSL13A0cJVVsErotaNDg8JPdubKEE0iv1-kTiSt=s90-c'}',ingredients = '[rice noodles, low sodium soy sauce, fish sauce, fresh lime juice, dark brown sugar, Sriracha, crushed red pepper flakes, peanut oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh cilantro, limes, ginger, unsalted peanuts]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-2694178'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'A Day In The Kitchen',smallImageUrls = '[https://lh3.googleusercontent.com/GlwJwX-yAdImsrz97yzYyRAGSlPAXKIk8Bj7itYPzjLUDvmoXnBBF58avmrlL1DlnHTsB_HgQfiAndOT_cmr5mI=s90]',totalTimeInSeconds = '3600',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9o1lAlM-DruGaSqqvBMNbEwDQjkKAaT88P84Z86YQaEicB206-ria1E6xnNUeq3kOgjWmvs5kgIlh-jEUOQ=s90-c'}',ingredients = '[pad thai noodles, deveined shrimp, eggs, small carrot, green onion, garlic cloves, light olive oil, water, tamarind paste, oyster sauce, coconut sugar, fish sauce, soy sauce, bean sprouts, chopped peanuts, dried chili flakes, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Shrimp-Pad-Thai-2511725'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'null',sourceDisplayName = 'Bookcooker',smallImageUrls = '[https://lh3.googleusercontent.com/oRA3RBaVweVu-mbgLigmJBT1a5dK8mZGJgWBijAIz5kSfGy5ctOulTP3iF7HCJR3d3rnK2h2H0BEztVoGAjb3j4=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/GHOVr9l6K3s3_MIlQRGmGjE1cLy-Xnvlj94n3-RF7JdYXM-hWfFXtAJqPIkfxHTZAAbiVjeA-F57kRpXHJ7-ww=s90-c'}',ingredients = '[pad thai noodles, raw sugar, tamarind paste, fish sauce, rice vinegar, minced ginger, minced garlic, shallot, lemongrass, peanut oil, large eggs, cooked shrimp, extra firm tofu, scallions, peanuts, bean sprouts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1753549'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.3333333333333333',sweet = '0.16666666666666666',sour = '0.3333333333333333',bitter = '0.16666666666666666',piquant = '0.6666666666666666'}',sourceDisplayName = 'The Hungry Mouse',smallImageUrls = '[https://lh3.googleusercontent.com/kjWQ0yDHnfexuAGuUUb3pkrELmSDKiox3NVVVcf2qUNac9z4GdWsXu30RQomuRLuDXWUoNAJkDA-oyXOGyeT=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/taNW2mFGX9SDg4tgPbUjD5VyOulKfgmBf07EgFKYxXy1wdJXSrvZbGIKA0dYfKhKEgid5NprMS5vrv9GlwfnfA=s90-c'}',ingredients = '[rice noodles, boiling water, vegetable oil, cilantro, red chile, large shrimp, shallots, large eggs, sugar, oyster sauce, Thai fish sauce, fresh lime juice, bean sprouts, scallions, unsalted roasted peanuts, lime]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1764933'}, MatchesItem{recipeName = 'Chicken Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.8333333333333334',bitter = '0.6666666666666666',piquant = '0.5'}',sourceDisplayName = 'Cooking Classy',smallImageUrls = '[https://lh3.googleusercontent.com/wxHAOLhlPjO1Vm0nUPYfLdhlSY9fy-_LiJheciGzbVSmFY3TwK0vUD6Squ3EbFslSyzfJm_LxV8yO2mg8GoZ=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/e2DuGFKLDaj_lzdDoTUQSHq-9KeUFtlsv7-W2meNBkzn42n308SAqVC1W1BEMw_zFkAg_K1SIvAg-EFcEbcREA=s90-c'}',ingredients = '[rice noodles, boneless, skinless chicken breasts, vegetable oil, dark brown sugar, soy sauce, rice vinegar, lime juice, fish sauce, red bell pepper, matchstick carrots, garlic, green onions, bean sprouts, large eggs, unsalted peanuts, cilantro, red pepper flakes, sesame seeds]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Chicken-Pad-Thai-2213155'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.3333333333333333',bitter = '0.6666666666666666',piquant = '0.3333333333333333'}',sourceDisplayName = 'From Jessica's Kitchen',smallImageUrls = '[http://lh5.ggpht.com/tG9DQTsQN-Q7Vgy7mt0QAEDGtpy5xIjucpNpemEpZ4FwhrhvlN-7PoNF3-ZYRBtRzXCvv8VtuxjP2py7o9PhTrY=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh5.ggpht.com/2okQfHyuVIWk5uokYUkxoKUcQGvWkoY0QMbDClsnhfFj8I125HhW-zO7TFmsSusOiqRbFJoZ8cR6hpwxJM8v1jM=s90-c'}',ingredients = '[fresh lime juice, sugar, fish sauce, chili sauce, tamarind paste, brown sugar, chicken stock, red pepper flakes, kosher salt, vegetable oil, garlic cloves, shallots, chicken, shrimp, eggs, bean sprouts, fresh cilantro, roasted peanuts, scallions, rice noodles]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-972593'}, MatchesItem{recipeName = 'Quick Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'Food & Wine',smallImageUrls = '[http://lh3.googleusercontent.com/WFJa5dApcA64f4YS5W7w-Q38pzXL8e5f1f7QNKLW9NrokqF4z5_T0k8Q01eOgECYojSj5ritfz49OYQMr3_CxS4=s90]',totalTimeInSeconds = '1800',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/18irSqmW3lj0CrrGnEUn9FaiyuzU5CLxMAYeRU-U43knhaaXzDW6hOvw_FK0uEWkZB8VrESVnd6J6WMEI1wBnow=s90-c'}',ingredients = '[thai noodles, asian fish sauce, light brown sugar, fresh lime juice, Thai bird chiles, canola oil, shallots, large garlic cloves, medium shrimp, large eggs, scallions, roasted peanuts, bean sprouts, chopped cilantro]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Quick-Shrimp-Pad-Thai-1095426'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.8333333333333334',sweet = '0.5',sour = '0.3333333333333333',bitter = '0.8333333333333334',piquant = '0.6666666666666666'}',sourceDisplayName = 'MyRecipes',smallImageUrls = '[http://lh3.googleusercontent.com/X3vmGqU0FQfHiWa-RXC2H8_j5eP7YlaMaekrKHYuyqNt8PUJyTY-OKGQemj7y-q4DoGLL9krhmfCwwpE2_VHsw=s90]',totalTimeInSeconds = '1500',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/PEwp_Rt5ikN1kriUXm34UMwVMINSK3L9GEecCkGX900bH6FIQYMH9ex7FlqAADz_qZmpZHe4mG_xFyrxs0S_=s90-c'}',ingredients = '[rice noodles, dark brown sugar, lower sodium soy sauce, fish sauce, fresh lime juice, Sriracha, canola oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh basil]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-1085805'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.5',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.16666666666666666',bitter = '0.8333333333333334',piquant = '0.16666666666666666'}',sourceDisplayName = 'Williams-Sonoma',smallImageUrls = '[http://lh4.ggpht.com/cNeTmf82YRoFFXbJ7kpBIZAZ1tOKGtMau_kEzLZcHuCsoeEL7GcoPhPVoTDKpnmpJL5X_bxPoKZm9lU_ltaS=s90]',totalTimeInSeconds = '600',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh4.ggpht.com/bnrxERK9dvDKbsEb7PabRSFC-n2VXlWXj3_2GLtjtVmmAhZoFikVq7CtggANrTwYz_LdidpSFCcdC6cWKdUS_g=s90-c'}',ingredients = '[rice noodles, asian fish sauce, fresh lime juice, sugar, canola oil, medium shrimp, garlic cloves, red pepper flakes, eggs, bean sprouts, unsalted roasted peanuts, sliced green onions, chopped fresh cilantro, chopped fresh mint]',attributes = 'Attributes{course = 'null',holiday = 'null',cuisine = '[Asian, Thai]'}',id = 'Pad-Thai-641068'}]',totalMatchCount = '1361',q = 'null',allowedIngredient = 'null',excludedIngredient = 'null'}
[INFO ] 2019-05-05 12:03:49.733 [main] YummlyDataGrabber - $$$$$$$$$$ Ingredients: minced garlic
[INFO ] 2019-05-05 12:03:49.734 [main] YummlyDataGrabber - $$$$$$$$$$ Matches: [MatchesItem{recipeName = 'Classic Pad Thai',flavors = 'null',sourceDisplayName = 'Taste',smallImageUrls = '[https://lh3.googleusercontent.com/n6-iEQ-eB_tZ2xZ_9MQ7VrviKyNUG22WwXOrQ4sCnoc3k_R3ROGhVruW2nf74SqKiqTYVpIHj4WEVPROsUEBnH0=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9YxdRCk-f2qJ6aVEuyFIfBOyK2ae_qMABx-WAboDFPkt-V_4rk3OCW6zqbBGDlq8XkPBo7v7m_FMoqhaRBHLM0=s90-c'}',ingredients = '[minced garlic, thai chiles, palm sugar, tamarind paste, asian fish sauce, fresh lime juice, pad thai noodles, canola oil, large shrimp, red pepper flakes, eggs, extra firm tofu, carrots, bean sprouts, green onions, cilantro leaves, roasted peanuts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Classic-Pad-Thai-2151767'}, MatchesItem{recipeName = 'Shrimp Pad-Thai',flavors = 'null',sourceDisplayName = 'simple.artistic.cooking',smallImageUrls = '[https://lh3.googleusercontent.com/THkysjs-7NkPHvVlAHnMQ8QJbB83_v7glyf_LjGs6buHIusQixQ5OzzNrfiTxVUxuqbHXn4MHZ6gXJ4FN3u7qBU=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/F-3Ds9UUGjz6puJq4xVBr4ISkYWN2gxjRQHpwph7YLG54JSL13A0cJVVsErotaNDg8JPdubKEE0iv1-kTiSt=s90-c'}',ingredients = '[rice noodles, low sodium soy sauce, fish sauce, fresh lime juice, dark brown sugar, Sriracha, crushed red pepper flakes, peanut oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh cilantro, limes, ginger, unsalted peanuts]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-2694178'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'A Day In The Kitchen',smallImageUrls = '[https://lh3.googleusercontent.com/GlwJwX-yAdImsrz97yzYyRAGSlPAXKIk8Bj7itYPzjLUDvmoXnBBF58avmrlL1DlnHTsB_HgQfiAndOT_cmr5mI=s90]',totalTimeInSeconds = '3600',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9o1lAlM-DruGaSqqvBMNbEwDQjkKAaT88P84Z86YQaEicB206-ria1E6xnNUeq3kOgjWmvs5kgIlh-jEUOQ=s90-c'}',ingredients = '[pad thai noodles, deveined shrimp, eggs, small carrot, green onion, garlic cloves, light olive oil, water, tamarind paste, oyster sauce, coconut sugar, fish sauce, soy sauce, bean sprouts, chopped peanuts, dried chili flakes, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Shrimp-Pad-Thai-2511725'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'null',sourceDisplayName = 'Bookcooker',smallImageUrls = '[https://lh3.googleusercontent.com/oRA3RBaVweVu-mbgLigmJBT1a5dK8mZGJgWBijAIz5kSfGy5ctOulTP3iF7HCJR3d3rnK2h2H0BEztVoGAjb3j4=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/GHOVr9l6K3s3_MIlQRGmGjE1cLy-Xnvlj94n3-RF7JdYXM-hWfFXtAJqPIkfxHTZAAbiVjeA-F57kRpXHJ7-ww=s90-c'}',ingredients = '[pad thai noodles, raw sugar, tamarind paste, fish sauce, rice vinegar, minced ginger, minced garlic, shallot, lemongrass, peanut oil, large eggs, cooked shrimp, extra firm tofu, scallions, peanuts, bean sprouts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1753549'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.3333333333333333',sweet = '0.16666666666666666',sour = '0.3333333333333333',bitter = '0.16666666666666666',piquant = '0.6666666666666666'}',sourceDisplayName = 'The Hungry Mouse',smallImageUrls = '[https://lh3.googleusercontent.com/kjWQ0yDHnfexuAGuUUb3pkrELmSDKiox3NVVVcf2qUNac9z4GdWsXu30RQomuRLuDXWUoNAJkDA-oyXOGyeT=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/taNW2mFGX9SDg4tgPbUjD5VyOulKfgmBf07EgFKYxXy1wdJXSrvZbGIKA0dYfKhKEgid5NprMS5vrv9GlwfnfA=s90-c'}',ingredients = '[rice noodles, boiling water, vegetable oil, cilantro, red chile, large shrimp, shallots, large eggs, sugar, oyster sauce, Thai fish sauce, fresh lime juice, bean sprouts, scallions, unsalted roasted peanuts, lime]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1764933'}, MatchesItem{recipeName = 'Chicken Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.8333333333333334',bitter = '0.6666666666666666',piquant = '0.5'}',sourceDisplayName = 'Cooking Classy',smallImageUrls = '[https://lh3.googleusercontent.com/wxHAOLhlPjO1Vm0nUPYfLdhlSY9fy-_LiJheciGzbVSmFY3TwK0vUD6Squ3EbFslSyzfJm_LxV8yO2mg8GoZ=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/e2DuGFKLDaj_lzdDoTUQSHq-9KeUFtlsv7-W2meNBkzn42n308SAqVC1W1BEMw_zFkAg_K1SIvAg-EFcEbcREA=s90-c'}',ingredients = '[rice noodles, boneless, skinless chicken breasts, vegetable oil, dark brown sugar, soy sauce, rice vinegar, lime juice, fish sauce, red bell pepper, matchstick carrots, garlic, green onions, bean sprouts, large eggs, unsalted peanuts, cilantro, red pepper flakes, sesame seeds]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Chicken-Pad-Thai-2213155'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.3333333333333333',bitter = '0.6666666666666666',piquant = '0.3333333333333333'}',sourceDisplayName = 'From Jessica's Kitchen',smallImageUrls = '[http://lh5.ggpht.com/tG9DQTsQN-Q7Vgy7mt0QAEDGtpy5xIjucpNpemEpZ4FwhrhvlN-7PoNF3-ZYRBtRzXCvv8VtuxjP2py7o9PhTrY=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh5.ggpht.com/2okQfHyuVIWk5uokYUkxoKUcQGvWkoY0QMbDClsnhfFj8I125HhW-zO7TFmsSusOiqRbFJoZ8cR6hpwxJM8v1jM=s90-c'}',ingredients = '[fresh lime juice, sugar, fish sauce, chili sauce, tamarind paste, brown sugar, chicken stock, red pepper flakes, kosher salt, vegetable oil, garlic cloves, shallots, chicken, shrimp, eggs, bean sprouts, fresh cilantro, roasted peanuts, scallions, rice noodles]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-972593'}, MatchesItem{recipeName = 'Quick Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'Food & Wine',smallImageUrls = '[http://lh3.googleusercontent.com/WFJa5dApcA64f4YS5W7w-Q38pzXL8e5f1f7QNKLW9NrokqF4z5_T0k8Q01eOgECYojSj5ritfz49OYQMr3_CxS4=s90]',totalTimeInSeconds = '1800',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/18irSqmW3lj0CrrGnEUn9FaiyuzU5CLxMAYeRU-U43knhaaXzDW6hOvw_FK0uEWkZB8VrESVnd6J6WMEI1wBnow=s90-c'}',ingredients = '[thai noodles, asian fish sauce, light brown sugar, fresh lime juice, Thai bird chiles, canola oil, shallots, large garlic cloves, medium shrimp, large eggs, scallions, roasted peanuts, bean sprouts, chopped cilantro]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Quick-Shrimp-Pad-Thai-1095426'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.8333333333333334',sweet = '0.5',sour = '0.3333333333333333',bitter = '0.8333333333333334',piquant = '0.6666666666666666'}',sourceDisplayName = 'MyRecipes',smallImageUrls = '[http://lh3.googleusercontent.com/X3vmGqU0FQfHiWa-RXC2H8_j5eP7YlaMaekrKHYuyqNt8PUJyTY-OKGQemj7y-q4DoGLL9krhmfCwwpE2_VHsw=s90]',totalTimeInSeconds = '1500',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/PEwp_Rt5ikN1kriUXm34UMwVMINSK3L9GEecCkGX900bH6FIQYMH9ex7FlqAADz_qZmpZHe4mG_xFyrxs0S_=s90-c'}',ingredients = '[rice noodles, dark brown sugar, lower sodium soy sauce, fish sauce, fresh lime juice, Sriracha, canola oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh basil]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-1085805'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.5',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.16666666666666666',bitter = '0.8333333333333334',piquant = '0.16666666666666666'}',sourceDisplayName = 'Williams-Sonoma',smallImageUrls = '[http://lh4.ggpht.com/cNeTmf82YRoFFXbJ7kpBIZAZ1tOKGtMau_kEzLZcHuCsoeEL7GcoPhPVoTDKpnmpJL5X_bxPoKZm9lU_ltaS=s90]',totalTimeInSeconds = '600',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh4.ggpht.com/bnrxERK9dvDKbsEb7PabRSFC-n2VXlWXj3_2GLtjtVmmAhZoFikVq7CtggANrTwYz_LdidpSFCcdC6cWKdUS_g=s90-c'}',ingredients = '[rice noodles, asian fish sauce, fresh lime juice, sugar, canola oil, medium shrimp, garlic cloves, red pepper flakes, eggs, bean sprouts, unsalted roasted peanuts, sliced green onions, chopped fresh cilantro, chopped fresh mint]',attributes = 'Attributes{course = 'null',holiday = 'null',cuisine = '[Asian, Thai]'}',id = 'Pad-Thai-641068'}]
[INFO ] 2019-05-05 12:03:49.735 [main] YummlyDataGrabber - $$$$$$$$$$ Attribution: Attribution{logo = 'https://static.yummly.co/api-logo.png',html = 'Recipe search powered by <a href='http://www.yummly.co/recipes'><img alt='Yummly' src='https://static.yummly.co/api-logo.png'/></a>',text = 'Recipe search powered by Yummly',url = 'http://www.yummly.co/recipes/'}
[INFO ] 2019-05-05 12:03:49.735 [main] YummlyDataGrabber - $$$$$$$$$$ Facet Counts: FacetCounts{}
[INFO ] 2019-05-05 12:03:49.735 [main] YummlyDataGrabber - $$$$$$$$$$ Total Match Count: 1361
[INFO ] 2019-05-05 12:03:49.736 [main] YummlyDataGrabber - $$$$$$$$$$ Allowed Ingredients: null
[INFO ] 2019-05-05 12:03:49.736 [main] YummlyDataGrabber - $$$$$$$$$$ Excluded Ingredients: null
[INFO ] 2019-05-05 12:03:49.736 [main] YummlyDataGrabber - $$$$$$$$$$ Q: null
[INFO ] 2019-05-05 12:03:49.737 [main] TestYummlyApi - Found Criteria from Q: Classic Pad Thai
[INFO ] 2019-05-05 12:04:41.436 [http-nio-8080-exec-2] GenericDao - **********Query Using Last Name:  hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:04:46.042 [http-nio-8080-exec-2] GenericDao - **********Query by Last Name Found: [User{userId = '8', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'AdminMan'}]
[INFO ] 2019-05-05 12:04:46.042 [http-nio-8080-exec-2] GenericDao - **********Querying grocery list by user id: 8
[INFO ] 2019-05-05 12:04:46.099 [http-nio-8080-exec-2] GenericDao - *********Query found grocery lists by ID: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 12:04:46.100 [http-nio-8080-exec-2] SearchGrocerylist - Grocery List Object Results from Search by Last Name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 12:04:46.101 [http-nio-8080-exec-2] SearchGrocerylist - ********** Current User Name: andrewpark, 1null, 2: null, 3: null
[INFO ] 2019-05-05 12:12:57.687 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-05 12:12:57.699 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-05 12:12:57.699 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-05 12:13:00.338 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 12:13:00.464 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-05 12:13:00.465 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-05 12:13:00.465 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-05 12:13:00.547 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 12:13:00.548 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 12:13:00.643 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:13:00.644 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-05 12:13:00.644 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 12:13:00.683 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:13:00.683 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:13:00.684 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 12:13:00.699 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:13:00.700 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:13:00.718 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:13:00.742 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 12:13:00.747 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-05 12:13:00.802 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:13:00.802 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-05 12:13:00.803 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 12:13:00.818 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:13:00.871 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:13:00.872 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-05 12:13:00.873 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:13:00.885 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 12:13:00.885 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:13:00.897 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 12:13:00.898 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 12:13:00.898 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:13:00.908 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 12:13:00.908 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T12:13:00.873, ingredients = []}
[INFO ] 2019-05-05 12:13:00.937 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 428, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T12:13:00.873, ingredients = []}
[INFO ] 2019-05-05 12:13:00.937 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 428, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T12:13:00.873, ingredients = []}
[INFO ] 2019-05-05 12:13:00.989 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:13:00.991 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-05 12:13:00.992 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:13:01.026 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-05 12:13:01.027 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-05 12:13:01.055 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 12:13:01.056 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 12:13:01.101 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:13:01.101 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-05 12:13:01.115 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 12:13:01.157 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:13:01.158 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-05 12:13:01.158 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 12:13:01.219 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 12:13:01.267 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:13:01.267 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-05 12:13:01.268 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:13:01.278 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 12:13:01.278 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T12:13:01.268, ingredients = []}
[INFO ] 2019-05-05 12:13:01.278 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T12:13:01.268, ingredients = []}
[INFO ] 2019-05-05 12:13:01.285 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 429, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T12:13:01.268, ingredients = []}
[INFO ] 2019-05-05 12:13:01.285 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-05 12:13:01.286 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-05 12:13:01.304 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 429, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T12:13:01, ingredients = []}]
[INFO ] 2019-05-05 12:13:01.304 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-05 12:13:01.304 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-05 12:13:01.322 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 12:13:01.322 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:13:01.331 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:13:01.386 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:13:01.386 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-05 12:13:01.387 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:13:01.392 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 12:13:01.392 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 12:13:01.394 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 12:13:01.399 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:13:01.403 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-05 12:13:01.452 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:13:01.453 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-05 12:13:01.453 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:13:01.462 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-05 12:13:01.505 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:13:01.506 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-05 12:13:01.506 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:13:01.578 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-05 12:13:01.642 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:13:01.642 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-05 12:13:01.643 [main] UserTest - -------Locale date time: 2019-05-05T12:13:01.643----------
[INFO ] 2019-05-05 12:13:01.643 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 12:13:01.653 [main] GenericDao - **********Entity inserted: User{userId = '476', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 12:13:01.654 [main] GenericDao - **********Query database by using an ID: 476, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:13:01.666 [main] GenericDao - **********Query by ID Found: User{userId = '476', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 12:13:01.705 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:13:01.705 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-05 12:13:01.705 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 12:13:01.711 [main] GenericDao - **********Saved|Updated entity: User{userId = '477', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 12:13:01.711 [main] GenericDao - **********Query database by using an ID: 477, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:13:01.715 [main] GenericDao - **********Query by ID Found: User{userId = '477', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 12:13:01.715 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:13:01.722 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-05 12:13:01.723 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-05 12:13:01.723 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 12:13:01.739 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 12:13:01.739 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:13:01.748 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 12:13:01.792 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:13:01.793 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-05 12:13:01.793 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:13:01.809 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-05 12:13:01.809 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:13:01.838 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-05 12:13:01.878 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:13:01.878 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-05 12:13:01.879 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 12:13:01.883 [main] GenericDao - **********Entity inserted: User{userId = '478', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 12:13:01.884 [main] GenericDao - **********Query database by using an ID: 478, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:13:01.888 [main] GenericDao - **********Query by ID Found: User{userId = '478', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 12:13:03.409 [main] YummlyDataGrabber - $$$$$$$$$$ Criteria Request returned Object: Criteria{facetCounts = 'FacetCounts{}',criteria = 'Criteria{facetCounts = 'null',criteria = 'null',attribution = 'null',matches = 'null',totalMatchCount = '0',q = 'Pad Thai',allowedIngredient = 'null',excludedIngredient = 'null'}',attribution = 'Attribution{logo = 'https://static.yummly.co/api-logo.png',html = 'Recipe search powered by <a href='http://www.yummly.co/recipes'><img alt='Yummly' src='https://static.yummly.co/api-logo.png'/></a>',text = 'Recipe search powered by Yummly',url = 'http://www.yummly.co/recipes/'}',matches = '[MatchesItem{recipeName = 'Classic Pad Thai',flavors = 'null',sourceDisplayName = 'Taste',smallImageUrls = '[https://lh3.googleusercontent.com/n6-iEQ-eB_tZ2xZ_9MQ7VrviKyNUG22WwXOrQ4sCnoc3k_R3ROGhVruW2nf74SqKiqTYVpIHj4WEVPROsUEBnH0=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9YxdRCk-f2qJ6aVEuyFIfBOyK2ae_qMABx-WAboDFPkt-V_4rk3OCW6zqbBGDlq8XkPBo7v7m_FMoqhaRBHLM0=s90-c'}',ingredients = '[minced garlic, thai chiles, palm sugar, tamarind paste, asian fish sauce, fresh lime juice, pad thai noodles, canola oil, large shrimp, red pepper flakes, eggs, extra firm tofu, carrots, bean sprouts, green onions, cilantro leaves, roasted peanuts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Classic-Pad-Thai-2151767'}, MatchesItem{recipeName = 'Shrimp Pad-Thai',flavors = 'null',sourceDisplayName = 'simple.artistic.cooking',smallImageUrls = '[https://lh3.googleusercontent.com/THkysjs-7NkPHvVlAHnMQ8QJbB83_v7glyf_LjGs6buHIusQixQ5OzzNrfiTxVUxuqbHXn4MHZ6gXJ4FN3u7qBU=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/F-3Ds9UUGjz6puJq4xVBr4ISkYWN2gxjRQHpwph7YLG54JSL13A0cJVVsErotaNDg8JPdubKEE0iv1-kTiSt=s90-c'}',ingredients = '[rice noodles, low sodium soy sauce, fish sauce, fresh lime juice, dark brown sugar, Sriracha, crushed red pepper flakes, peanut oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh cilantro, limes, ginger, unsalted peanuts]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-2694178'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'A Day In The Kitchen',smallImageUrls = '[https://lh3.googleusercontent.com/GlwJwX-yAdImsrz97yzYyRAGSlPAXKIk8Bj7itYPzjLUDvmoXnBBF58avmrlL1DlnHTsB_HgQfiAndOT_cmr5mI=s90]',totalTimeInSeconds = '3600',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9o1lAlM-DruGaSqqvBMNbEwDQjkKAaT88P84Z86YQaEicB206-ria1E6xnNUeq3kOgjWmvs5kgIlh-jEUOQ=s90-c'}',ingredients = '[pad thai noodles, deveined shrimp, eggs, small carrot, green onion, garlic cloves, light olive oil, water, tamarind paste, oyster sauce, coconut sugar, fish sauce, soy sauce, bean sprouts, chopped peanuts, dried chili flakes, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Shrimp-Pad-Thai-2511725'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'null',sourceDisplayName = 'Bookcooker',smallImageUrls = '[https://lh3.googleusercontent.com/oRA3RBaVweVu-mbgLigmJBT1a5dK8mZGJgWBijAIz5kSfGy5ctOulTP3iF7HCJR3d3rnK2h2H0BEztVoGAjb3j4=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/GHOVr9l6K3s3_MIlQRGmGjE1cLy-Xnvlj94n3-RF7JdYXM-hWfFXtAJqPIkfxHTZAAbiVjeA-F57kRpXHJ7-ww=s90-c'}',ingredients = '[pad thai noodles, raw sugar, tamarind paste, fish sauce, rice vinegar, minced ginger, minced garlic, shallot, lemongrass, peanut oil, large eggs, cooked shrimp, extra firm tofu, scallions, peanuts, bean sprouts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1753549'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.3333333333333333',sweet = '0.16666666666666666',sour = '0.3333333333333333',bitter = '0.16666666666666666',piquant = '0.6666666666666666'}',sourceDisplayName = 'The Hungry Mouse',smallImageUrls = '[https://lh3.googleusercontent.com/kjWQ0yDHnfexuAGuUUb3pkrELmSDKiox3NVVVcf2qUNac9z4GdWsXu30RQomuRLuDXWUoNAJkDA-oyXOGyeT=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/taNW2mFGX9SDg4tgPbUjD5VyOulKfgmBf07EgFKYxXy1wdJXSrvZbGIKA0dYfKhKEgid5NprMS5vrv9GlwfnfA=s90-c'}',ingredients = '[rice noodles, boiling water, vegetable oil, cilantro, red chile, large shrimp, shallots, large eggs, sugar, oyster sauce, Thai fish sauce, fresh lime juice, bean sprouts, scallions, unsalted roasted peanuts, lime]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1764933'}, MatchesItem{recipeName = 'Chicken Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.8333333333333334',bitter = '0.6666666666666666',piquant = '0.5'}',sourceDisplayName = 'Cooking Classy',smallImageUrls = '[https://lh3.googleusercontent.com/wxHAOLhlPjO1Vm0nUPYfLdhlSY9fy-_LiJheciGzbVSmFY3TwK0vUD6Squ3EbFslSyzfJm_LxV8yO2mg8GoZ=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/e2DuGFKLDaj_lzdDoTUQSHq-9KeUFtlsv7-W2meNBkzn42n308SAqVC1W1BEMw_zFkAg_K1SIvAg-EFcEbcREA=s90-c'}',ingredients = '[rice noodles, boneless, skinless chicken breasts, vegetable oil, dark brown sugar, soy sauce, rice vinegar, lime juice, fish sauce, red bell pepper, matchstick carrots, garlic, green onions, bean sprouts, large eggs, unsalted peanuts, cilantro, red pepper flakes, sesame seeds]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Chicken-Pad-Thai-2213155'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.3333333333333333',bitter = '0.6666666666666666',piquant = '0.3333333333333333'}',sourceDisplayName = 'From Jessica's Kitchen',smallImageUrls = '[http://lh5.ggpht.com/tG9DQTsQN-Q7Vgy7mt0QAEDGtpy5xIjucpNpemEpZ4FwhrhvlN-7PoNF3-ZYRBtRzXCvv8VtuxjP2py7o9PhTrY=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh5.ggpht.com/2okQfHyuVIWk5uokYUkxoKUcQGvWkoY0QMbDClsnhfFj8I125HhW-zO7TFmsSusOiqRbFJoZ8cR6hpwxJM8v1jM=s90-c'}',ingredients = '[fresh lime juice, sugar, fish sauce, chili sauce, tamarind paste, brown sugar, chicken stock, red pepper flakes, kosher salt, vegetable oil, garlic cloves, shallots, chicken, shrimp, eggs, bean sprouts, fresh cilantro, roasted peanuts, scallions, rice noodles]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-972593'}, MatchesItem{recipeName = 'Quick Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'Food & Wine',smallImageUrls = '[http://lh3.googleusercontent.com/WFJa5dApcA64f4YS5W7w-Q38pzXL8e5f1f7QNKLW9NrokqF4z5_T0k8Q01eOgECYojSj5ritfz49OYQMr3_CxS4=s90]',totalTimeInSeconds = '1800',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/18irSqmW3lj0CrrGnEUn9FaiyuzU5CLxMAYeRU-U43knhaaXzDW6hOvw_FK0uEWkZB8VrESVnd6J6WMEI1wBnow=s90-c'}',ingredients = '[thai noodles, asian fish sauce, light brown sugar, fresh lime juice, Thai bird chiles, canola oil, shallots, large garlic cloves, medium shrimp, large eggs, scallions, roasted peanuts, bean sprouts, chopped cilantro]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Quick-Shrimp-Pad-Thai-1095426'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.8333333333333334',sweet = '0.5',sour = '0.3333333333333333',bitter = '0.8333333333333334',piquant = '0.6666666666666666'}',sourceDisplayName = 'MyRecipes',smallImageUrls = '[http://lh3.googleusercontent.com/X3vmGqU0FQfHiWa-RXC2H8_j5eP7YlaMaekrKHYuyqNt8PUJyTY-OKGQemj7y-q4DoGLL9krhmfCwwpE2_VHsw=s90]',totalTimeInSeconds = '1500',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/PEwp_Rt5ikN1kriUXm34UMwVMINSK3L9GEecCkGX900bH6FIQYMH9ex7FlqAADz_qZmpZHe4mG_xFyrxs0S_=s90-c'}',ingredients = '[rice noodles, dark brown sugar, lower sodium soy sauce, fish sauce, fresh lime juice, Sriracha, canola oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh basil]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-1085805'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.5',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.16666666666666666',bitter = '0.8333333333333334',piquant = '0.16666666666666666'}',sourceDisplayName = 'Williams-Sonoma',smallImageUrls = '[http://lh4.ggpht.com/cNeTmf82YRoFFXbJ7kpBIZAZ1tOKGtMau_kEzLZcHuCsoeEL7GcoPhPVoTDKpnmpJL5X_bxPoKZm9lU_ltaS=s90]',totalTimeInSeconds = '600',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh4.ggpht.com/bnrxERK9dvDKbsEb7PabRSFC-n2VXlWXj3_2GLtjtVmmAhZoFikVq7CtggANrTwYz_LdidpSFCcdC6cWKdUS_g=s90-c'}',ingredients = '[rice noodles, asian fish sauce, fresh lime juice, sugar, canola oil, medium shrimp, garlic cloves, red pepper flakes, eggs, bean sprouts, unsalted roasted peanuts, sliced green onions, chopped fresh cilantro, chopped fresh mint]',attributes = 'Attributes{course = 'null',holiday = 'null',cuisine = '[Asian, Thai]'}',id = 'Pad-Thai-641068'}]',totalMatchCount = '1361',q = 'null',allowedIngredient = 'null',excludedIngredient = 'null'}
[INFO ] 2019-05-05 12:13:03.410 [main] YummlyDataGrabber - $$$$$$$$$$ Ingredients: minced garlic
[INFO ] 2019-05-05 12:13:03.410 [main] YummlyDataGrabber - $$$$$$$$$$ Matches: [MatchesItem{recipeName = 'Classic Pad Thai',flavors = 'null',sourceDisplayName = 'Taste',smallImageUrls = '[https://lh3.googleusercontent.com/n6-iEQ-eB_tZ2xZ_9MQ7VrviKyNUG22WwXOrQ4sCnoc3k_R3ROGhVruW2nf74SqKiqTYVpIHj4WEVPROsUEBnH0=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9YxdRCk-f2qJ6aVEuyFIfBOyK2ae_qMABx-WAboDFPkt-V_4rk3OCW6zqbBGDlq8XkPBo7v7m_FMoqhaRBHLM0=s90-c'}',ingredients = '[minced garlic, thai chiles, palm sugar, tamarind paste, asian fish sauce, fresh lime juice, pad thai noodles, canola oil, large shrimp, red pepper flakes, eggs, extra firm tofu, carrots, bean sprouts, green onions, cilantro leaves, roasted peanuts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Classic-Pad-Thai-2151767'}, MatchesItem{recipeName = 'Shrimp Pad-Thai',flavors = 'null',sourceDisplayName = 'simple.artistic.cooking',smallImageUrls = '[https://lh3.googleusercontent.com/THkysjs-7NkPHvVlAHnMQ8QJbB83_v7glyf_LjGs6buHIusQixQ5OzzNrfiTxVUxuqbHXn4MHZ6gXJ4FN3u7qBU=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/F-3Ds9UUGjz6puJq4xVBr4ISkYWN2gxjRQHpwph7YLG54JSL13A0cJVVsErotaNDg8JPdubKEE0iv1-kTiSt=s90-c'}',ingredients = '[rice noodles, low sodium soy sauce, fish sauce, fresh lime juice, dark brown sugar, Sriracha, crushed red pepper flakes, peanut oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh cilantro, limes, ginger, unsalted peanuts]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-2694178'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'A Day In The Kitchen',smallImageUrls = '[https://lh3.googleusercontent.com/GlwJwX-yAdImsrz97yzYyRAGSlPAXKIk8Bj7itYPzjLUDvmoXnBBF58avmrlL1DlnHTsB_HgQfiAndOT_cmr5mI=s90]',totalTimeInSeconds = '3600',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9o1lAlM-DruGaSqqvBMNbEwDQjkKAaT88P84Z86YQaEicB206-ria1E6xnNUeq3kOgjWmvs5kgIlh-jEUOQ=s90-c'}',ingredients = '[pad thai noodles, deveined shrimp, eggs, small carrot, green onion, garlic cloves, light olive oil, water, tamarind paste, oyster sauce, coconut sugar, fish sauce, soy sauce, bean sprouts, chopped peanuts, dried chili flakes, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Shrimp-Pad-Thai-2511725'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'null',sourceDisplayName = 'Bookcooker',smallImageUrls = '[https://lh3.googleusercontent.com/oRA3RBaVweVu-mbgLigmJBT1a5dK8mZGJgWBijAIz5kSfGy5ctOulTP3iF7HCJR3d3rnK2h2H0BEztVoGAjb3j4=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/GHOVr9l6K3s3_MIlQRGmGjE1cLy-Xnvlj94n3-RF7JdYXM-hWfFXtAJqPIkfxHTZAAbiVjeA-F57kRpXHJ7-ww=s90-c'}',ingredients = '[pad thai noodles, raw sugar, tamarind paste, fish sauce, rice vinegar, minced ginger, minced garlic, shallot, lemongrass, peanut oil, large eggs, cooked shrimp, extra firm tofu, scallions, peanuts, bean sprouts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1753549'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.3333333333333333',sweet = '0.16666666666666666',sour = '0.3333333333333333',bitter = '0.16666666666666666',piquant = '0.6666666666666666'}',sourceDisplayName = 'The Hungry Mouse',smallImageUrls = '[https://lh3.googleusercontent.com/kjWQ0yDHnfexuAGuUUb3pkrELmSDKiox3NVVVcf2qUNac9z4GdWsXu30RQomuRLuDXWUoNAJkDA-oyXOGyeT=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/taNW2mFGX9SDg4tgPbUjD5VyOulKfgmBf07EgFKYxXy1wdJXSrvZbGIKA0dYfKhKEgid5NprMS5vrv9GlwfnfA=s90-c'}',ingredients = '[rice noodles, boiling water, vegetable oil, cilantro, red chile, large shrimp, shallots, large eggs, sugar, oyster sauce, Thai fish sauce, fresh lime juice, bean sprouts, scallions, unsalted roasted peanuts, lime]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1764933'}, MatchesItem{recipeName = 'Chicken Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.8333333333333334',bitter = '0.6666666666666666',piquant = '0.5'}',sourceDisplayName = 'Cooking Classy',smallImageUrls = '[https://lh3.googleusercontent.com/wxHAOLhlPjO1Vm0nUPYfLdhlSY9fy-_LiJheciGzbVSmFY3TwK0vUD6Squ3EbFslSyzfJm_LxV8yO2mg8GoZ=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/e2DuGFKLDaj_lzdDoTUQSHq-9KeUFtlsv7-W2meNBkzn42n308SAqVC1W1BEMw_zFkAg_K1SIvAg-EFcEbcREA=s90-c'}',ingredients = '[rice noodles, boneless, skinless chicken breasts, vegetable oil, dark brown sugar, soy sauce, rice vinegar, lime juice, fish sauce, red bell pepper, matchstick carrots, garlic, green onions, bean sprouts, large eggs, unsalted peanuts, cilantro, red pepper flakes, sesame seeds]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Chicken-Pad-Thai-2213155'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.3333333333333333',bitter = '0.6666666666666666',piquant = '0.3333333333333333'}',sourceDisplayName = 'From Jessica's Kitchen',smallImageUrls = '[http://lh5.ggpht.com/tG9DQTsQN-Q7Vgy7mt0QAEDGtpy5xIjucpNpemEpZ4FwhrhvlN-7PoNF3-ZYRBtRzXCvv8VtuxjP2py7o9PhTrY=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh5.ggpht.com/2okQfHyuVIWk5uokYUkxoKUcQGvWkoY0QMbDClsnhfFj8I125HhW-zO7TFmsSusOiqRbFJoZ8cR6hpwxJM8v1jM=s90-c'}',ingredients = '[fresh lime juice, sugar, fish sauce, chili sauce, tamarind paste, brown sugar, chicken stock, red pepper flakes, kosher salt, vegetable oil, garlic cloves, shallots, chicken, shrimp, eggs, bean sprouts, fresh cilantro, roasted peanuts, scallions, rice noodles]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-972593'}, MatchesItem{recipeName = 'Quick Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'Food & Wine',smallImageUrls = '[http://lh3.googleusercontent.com/WFJa5dApcA64f4YS5W7w-Q38pzXL8e5f1f7QNKLW9NrokqF4z5_T0k8Q01eOgECYojSj5ritfz49OYQMr3_CxS4=s90]',totalTimeInSeconds = '1800',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/18irSqmW3lj0CrrGnEUn9FaiyuzU5CLxMAYeRU-U43knhaaXzDW6hOvw_FK0uEWkZB8VrESVnd6J6WMEI1wBnow=s90-c'}',ingredients = '[thai noodles, asian fish sauce, light brown sugar, fresh lime juice, Thai bird chiles, canola oil, shallots, large garlic cloves, medium shrimp, large eggs, scallions, roasted peanuts, bean sprouts, chopped cilantro]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Quick-Shrimp-Pad-Thai-1095426'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.8333333333333334',sweet = '0.5',sour = '0.3333333333333333',bitter = '0.8333333333333334',piquant = '0.6666666666666666'}',sourceDisplayName = 'MyRecipes',smallImageUrls = '[http://lh3.googleusercontent.com/X3vmGqU0FQfHiWa-RXC2H8_j5eP7YlaMaekrKHYuyqNt8PUJyTY-OKGQemj7y-q4DoGLL9krhmfCwwpE2_VHsw=s90]',totalTimeInSeconds = '1500',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/PEwp_Rt5ikN1kriUXm34UMwVMINSK3L9GEecCkGX900bH6FIQYMH9ex7FlqAADz_qZmpZHe4mG_xFyrxs0S_=s90-c'}',ingredients = '[rice noodles, dark brown sugar, lower sodium soy sauce, fish sauce, fresh lime juice, Sriracha, canola oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh basil]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-1085805'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.5',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.16666666666666666',bitter = '0.8333333333333334',piquant = '0.16666666666666666'}',sourceDisplayName = 'Williams-Sonoma',smallImageUrls = '[http://lh4.ggpht.com/cNeTmf82YRoFFXbJ7kpBIZAZ1tOKGtMau_kEzLZcHuCsoeEL7GcoPhPVoTDKpnmpJL5X_bxPoKZm9lU_ltaS=s90]',totalTimeInSeconds = '600',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh4.ggpht.com/bnrxERK9dvDKbsEb7PabRSFC-n2VXlWXj3_2GLtjtVmmAhZoFikVq7CtggANrTwYz_LdidpSFCcdC6cWKdUS_g=s90-c'}',ingredients = '[rice noodles, asian fish sauce, fresh lime juice, sugar, canola oil, medium shrimp, garlic cloves, red pepper flakes, eggs, bean sprouts, unsalted roasted peanuts, sliced green onions, chopped fresh cilantro, chopped fresh mint]',attributes = 'Attributes{course = 'null',holiday = 'null',cuisine = '[Asian, Thai]'}',id = 'Pad-Thai-641068'}]
[INFO ] 2019-05-05 12:13:03.411 [main] YummlyDataGrabber - $$$$$$$$$$ Attribution: Attribution{logo = 'https://static.yummly.co/api-logo.png',html = 'Recipe search powered by <a href='http://www.yummly.co/recipes'><img alt='Yummly' src='https://static.yummly.co/api-logo.png'/></a>',text = 'Recipe search powered by Yummly',url = 'http://www.yummly.co/recipes/'}
[INFO ] 2019-05-05 12:13:03.411 [main] YummlyDataGrabber - $$$$$$$$$$ Facet Counts: FacetCounts{}
[INFO ] 2019-05-05 12:13:03.412 [main] YummlyDataGrabber - $$$$$$$$$$ Total Match Count: 1361
[INFO ] 2019-05-05 12:13:03.412 [main] YummlyDataGrabber - $$$$$$$$$$ Allowed Ingredients: null
[INFO ] 2019-05-05 12:13:03.412 [main] YummlyDataGrabber - $$$$$$$$$$ Excluded Ingredients: null
[INFO ] 2019-05-05 12:13:03.412 [main] YummlyDataGrabber - $$$$$$$$$$ Q: null
[INFO ] 2019-05-05 12:13:03.412 [main] TestYummlyApi - Found Criteria from Q: Classic Pad Thai
[INFO ] 2019-05-05 12:14:00.899 [http-nio-8080-exec-2] GenericDao - **********Query Using Last Name:  hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:14:05.302 [http-nio-8080-exec-2] GenericDao - **********Query by Last Name Found: [User{userId = '8', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'AdminMan'}]
[INFO ] 2019-05-05 12:14:05.302 [http-nio-8080-exec-2] GenericDao - **********Querying grocery list by user id: 8
[INFO ] 2019-05-05 12:14:05.353 [http-nio-8080-exec-2] GenericDao - *********Query found grocery lists by ID: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 12:14:05.353 [http-nio-8080-exec-2] SearchGrocerylist - Grocery List Object Results from Search by Last Name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 12:14:05.354 [http-nio-8080-exec-2] SearchGrocerylist - ********** Current User Name: null
[INFO ] 2019-05-05 12:34:11.398 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-05 12:34:11.413 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-05 12:34:11.413 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-05 12:34:15.934 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 12:34:16.023 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-05 12:34:16.024 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-05 12:34:16.024 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-05 12:34:16.334 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 12:34:16.334 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 12:34:16.677 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:34:16.678 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-05 12:34:16.681 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 12:34:16.744 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:34:16.745 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:34:16.745 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 12:34:16.766 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:34:16.767 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:34:16.801 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:34:16.835 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 12:34:16.841 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-05 12:34:16.927 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:34:16.930 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-05 12:34:16.930 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 12:34:16.968 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:34:17.035 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:34:17.036 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-05 12:34:17.037 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:34:17.054 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 12:34:17.055 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:34:17.076 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 12:34:17.076 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 12:34:17.077 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:34:17.087 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 12:34:17.088 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T12:34:17.037, ingredients = []}
[INFO ] 2019-05-05 12:34:17.112 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 431, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T12:34:17.037, ingredients = []}
[INFO ] 2019-05-05 12:34:17.112 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 431, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T12:34:17.037, ingredients = []}
[INFO ] 2019-05-05 12:34:17.173 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:34:17.174 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-05 12:34:17.175 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:34:17.213 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-05 12:34:17.214 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-05 12:34:17.251 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 12:34:17.252 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 12:34:17.308 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:34:17.309 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-05 12:34:17.325 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 12:34:17.375 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:34:17.376 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-05 12:34:17.376 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 12:34:17.453 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 12:34:17.516 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:34:17.519 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-05 12:34:17.520 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:34:17.533 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 12:34:17.534 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T12:34:17.520, ingredients = []}
[INFO ] 2019-05-05 12:34:17.534 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T12:34:17.520, ingredients = []}
[INFO ] 2019-05-05 12:34:17.549 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 432, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T12:34:17.520, ingredients = []}
[INFO ] 2019-05-05 12:34:17.551 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-05 12:34:17.553 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-05 12:34:17.589 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 432, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T12:34:18, ingredients = []}]
[INFO ] 2019-05-05 12:34:17.589 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-05 12:34:17.589 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-05 12:34:17.611 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 12:34:17.611 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:34:17.639 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:34:17.747 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:34:17.748 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-05 12:34:17.749 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:34:17.757 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 12:34:17.758 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 12:34:17.759 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 12:34:17.766 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:34:17.775 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-05 12:34:17.833 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:34:17.833 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-05 12:34:17.834 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:34:17.842 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-05 12:34:17.892 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:34:17.893 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-05 12:34:17.893 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:34:17.977 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-05 12:34:18.028 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:34:18.029 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-05 12:34:18.029 [main] UserTest - -------Locale date time: 2019-05-05T12:34:18.029----------
[INFO ] 2019-05-05 12:34:18.029 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 12:34:18.050 [main] GenericDao - **********Entity inserted: User{userId = '479', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 12:34:18.051 [main] GenericDao - **********Query database by using an ID: 479, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:34:18.059 [main] GenericDao - **********Query by ID Found: User{userId = '479', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 12:34:18.113 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:34:18.114 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-05 12:34:18.115 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 12:34:18.124 [main] GenericDao - **********Saved|Updated entity: User{userId = '480', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 12:34:18.124 [main] GenericDao - **********Query database by using an ID: 480, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:34:18.138 [main] GenericDao - **********Query by ID Found: User{userId = '480', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 12:34:18.139 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:34:18.149 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-05 12:34:18.150 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-05 12:34:18.150 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 12:34:18.165 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 12:34:18.165 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:34:18.187 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 12:34:18.356 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:34:18.357 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-05 12:34:18.357 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:34:18.371 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-05 12:34:18.373 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:34:18.410 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-05 12:34:18.471 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:34:18.471 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-05 12:34:18.471 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 12:34:18.481 [main] GenericDao - **********Entity inserted: User{userId = '481', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 12:34:18.481 [main] GenericDao - **********Query database by using an ID: 481, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:34:18.486 [main] GenericDao - **********Query by ID Found: User{userId = '481', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 12:34:20.196 [main] YummlyDataGrabber - $$$$$$$$$$ Criteria Request returned Object: Criteria{facetCounts = 'FacetCounts{}',criteria = 'Criteria{facetCounts = 'null',criteria = 'null',attribution = 'null',matches = 'null',totalMatchCount = '0',q = 'Pad Thai',allowedIngredient = 'null',excludedIngredient = 'null'}',attribution = 'Attribution{logo = 'https://static.yummly.co/api-logo.png',html = 'Recipe search powered by <a href='http://www.yummly.co/recipes'><img alt='Yummly' src='https://static.yummly.co/api-logo.png'/></a>',text = 'Recipe search powered by Yummly',url = 'http://www.yummly.co/recipes/'}',matches = '[MatchesItem{recipeName = 'Classic Pad Thai',flavors = 'null',sourceDisplayName = 'Taste',smallImageUrls = '[https://lh3.googleusercontent.com/n6-iEQ-eB_tZ2xZ_9MQ7VrviKyNUG22WwXOrQ4sCnoc3k_R3ROGhVruW2nf74SqKiqTYVpIHj4WEVPROsUEBnH0=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9YxdRCk-f2qJ6aVEuyFIfBOyK2ae_qMABx-WAboDFPkt-V_4rk3OCW6zqbBGDlq8XkPBo7v7m_FMoqhaRBHLM0=s90-c'}',ingredients = '[minced garlic, thai chiles, palm sugar, tamarind paste, asian fish sauce, fresh lime juice, pad thai noodles, canola oil, large shrimp, red pepper flakes, eggs, extra firm tofu, carrots, bean sprouts, green onions, cilantro leaves, roasted peanuts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Classic-Pad-Thai-2151767'}, MatchesItem{recipeName = 'Shrimp Pad-Thai',flavors = 'null',sourceDisplayName = 'simple.artistic.cooking',smallImageUrls = '[https://lh3.googleusercontent.com/THkysjs-7NkPHvVlAHnMQ8QJbB83_v7glyf_LjGs6buHIusQixQ5OzzNrfiTxVUxuqbHXn4MHZ6gXJ4FN3u7qBU=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/F-3Ds9UUGjz6puJq4xVBr4ISkYWN2gxjRQHpwph7YLG54JSL13A0cJVVsErotaNDg8JPdubKEE0iv1-kTiSt=s90-c'}',ingredients = '[rice noodles, low sodium soy sauce, fish sauce, fresh lime juice, dark brown sugar, Sriracha, crushed red pepper flakes, peanut oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh cilantro, limes, ginger, unsalted peanuts]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-2694178'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'A Day In The Kitchen',smallImageUrls = '[https://lh3.googleusercontent.com/GlwJwX-yAdImsrz97yzYyRAGSlPAXKIk8Bj7itYPzjLUDvmoXnBBF58avmrlL1DlnHTsB_HgQfiAndOT_cmr5mI=s90]',totalTimeInSeconds = '3600',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9o1lAlM-DruGaSqqvBMNbEwDQjkKAaT88P84Z86YQaEicB206-ria1E6xnNUeq3kOgjWmvs5kgIlh-jEUOQ=s90-c'}',ingredients = '[pad thai noodles, deveined shrimp, eggs, small carrot, green onion, garlic cloves, light olive oil, water, tamarind paste, oyster sauce, coconut sugar, fish sauce, soy sauce, bean sprouts, chopped peanuts, dried chili flakes, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Shrimp-Pad-Thai-2511725'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'null',sourceDisplayName = 'Bookcooker',smallImageUrls = '[https://lh3.googleusercontent.com/oRA3RBaVweVu-mbgLigmJBT1a5dK8mZGJgWBijAIz5kSfGy5ctOulTP3iF7HCJR3d3rnK2h2H0BEztVoGAjb3j4=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/GHOVr9l6K3s3_MIlQRGmGjE1cLy-Xnvlj94n3-RF7JdYXM-hWfFXtAJqPIkfxHTZAAbiVjeA-F57kRpXHJ7-ww=s90-c'}',ingredients = '[pad thai noodles, raw sugar, tamarind paste, fish sauce, rice vinegar, minced ginger, minced garlic, shallot, lemongrass, peanut oil, large eggs, cooked shrimp, extra firm tofu, scallions, peanuts, bean sprouts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1753549'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.3333333333333333',sweet = '0.16666666666666666',sour = '0.3333333333333333',bitter = '0.16666666666666666',piquant = '0.6666666666666666'}',sourceDisplayName = 'The Hungry Mouse',smallImageUrls = '[https://lh3.googleusercontent.com/kjWQ0yDHnfexuAGuUUb3pkrELmSDKiox3NVVVcf2qUNac9z4GdWsXu30RQomuRLuDXWUoNAJkDA-oyXOGyeT=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/taNW2mFGX9SDg4tgPbUjD5VyOulKfgmBf07EgFKYxXy1wdJXSrvZbGIKA0dYfKhKEgid5NprMS5vrv9GlwfnfA=s90-c'}',ingredients = '[rice noodles, boiling water, vegetable oil, cilantro, red chile, large shrimp, shallots, large eggs, sugar, oyster sauce, Thai fish sauce, fresh lime juice, bean sprouts, scallions, unsalted roasted peanuts, lime]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1764933'}, MatchesItem{recipeName = 'Chicken Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.8333333333333334',bitter = '0.6666666666666666',piquant = '0.5'}',sourceDisplayName = 'Cooking Classy',smallImageUrls = '[https://lh3.googleusercontent.com/wxHAOLhlPjO1Vm0nUPYfLdhlSY9fy-_LiJheciGzbVSmFY3TwK0vUD6Squ3EbFslSyzfJm_LxV8yO2mg8GoZ=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/e2DuGFKLDaj_lzdDoTUQSHq-9KeUFtlsv7-W2meNBkzn42n308SAqVC1W1BEMw_zFkAg_K1SIvAg-EFcEbcREA=s90-c'}',ingredients = '[rice noodles, boneless, skinless chicken breasts, vegetable oil, dark brown sugar, soy sauce, rice vinegar, lime juice, fish sauce, red bell pepper, matchstick carrots, garlic, green onions, bean sprouts, large eggs, unsalted peanuts, cilantro, red pepper flakes, sesame seeds]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Chicken-Pad-Thai-2213155'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.3333333333333333',bitter = '0.6666666666666666',piquant = '0.3333333333333333'}',sourceDisplayName = 'From Jessica's Kitchen',smallImageUrls = '[http://lh5.ggpht.com/tG9DQTsQN-Q7Vgy7mt0QAEDGtpy5xIjucpNpemEpZ4FwhrhvlN-7PoNF3-ZYRBtRzXCvv8VtuxjP2py7o9PhTrY=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh5.ggpht.com/2okQfHyuVIWk5uokYUkxoKUcQGvWkoY0QMbDClsnhfFj8I125HhW-zO7TFmsSusOiqRbFJoZ8cR6hpwxJM8v1jM=s90-c'}',ingredients = '[fresh lime juice, sugar, fish sauce, chili sauce, tamarind paste, brown sugar, chicken stock, red pepper flakes, kosher salt, vegetable oil, garlic cloves, shallots, chicken, shrimp, eggs, bean sprouts, fresh cilantro, roasted peanuts, scallions, rice noodles]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-972593'}, MatchesItem{recipeName = 'Quick Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'Food & Wine',smallImageUrls = '[http://lh3.googleusercontent.com/WFJa5dApcA64f4YS5W7w-Q38pzXL8e5f1f7QNKLW9NrokqF4z5_T0k8Q01eOgECYojSj5ritfz49OYQMr3_CxS4=s90]',totalTimeInSeconds = '1800',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/18irSqmW3lj0CrrGnEUn9FaiyuzU5CLxMAYeRU-U43knhaaXzDW6hOvw_FK0uEWkZB8VrESVnd6J6WMEI1wBnow=s90-c'}',ingredients = '[thai noodles, asian fish sauce, light brown sugar, fresh lime juice, Thai bird chiles, canola oil, shallots, large garlic cloves, medium shrimp, large eggs, scallions, roasted peanuts, bean sprouts, chopped cilantro]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Quick-Shrimp-Pad-Thai-1095426'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.8333333333333334',sweet = '0.5',sour = '0.3333333333333333',bitter = '0.8333333333333334',piquant = '0.6666666666666666'}',sourceDisplayName = 'MyRecipes',smallImageUrls = '[http://lh3.googleusercontent.com/X3vmGqU0FQfHiWa-RXC2H8_j5eP7YlaMaekrKHYuyqNt8PUJyTY-OKGQemj7y-q4DoGLL9krhmfCwwpE2_VHsw=s90]',totalTimeInSeconds = '1500',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/PEwp_Rt5ikN1kriUXm34UMwVMINSK3L9GEecCkGX900bH6FIQYMH9ex7FlqAADz_qZmpZHe4mG_xFyrxs0S_=s90-c'}',ingredients = '[rice noodles, dark brown sugar, lower sodium soy sauce, fish sauce, fresh lime juice, Sriracha, canola oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh basil]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-1085805'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.5',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.16666666666666666',bitter = '0.8333333333333334',piquant = '0.16666666666666666'}',sourceDisplayName = 'Williams-Sonoma',smallImageUrls = '[http://lh4.ggpht.com/cNeTmf82YRoFFXbJ7kpBIZAZ1tOKGtMau_kEzLZcHuCsoeEL7GcoPhPVoTDKpnmpJL5X_bxPoKZm9lU_ltaS=s90]',totalTimeInSeconds = '600',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh4.ggpht.com/bnrxERK9dvDKbsEb7PabRSFC-n2VXlWXj3_2GLtjtVmmAhZoFikVq7CtggANrTwYz_LdidpSFCcdC6cWKdUS_g=s90-c'}',ingredients = '[rice noodles, asian fish sauce, fresh lime juice, sugar, canola oil, medium shrimp, garlic cloves, red pepper flakes, eggs, bean sprouts, unsalted roasted peanuts, sliced green onions, chopped fresh cilantro, chopped fresh mint]',attributes = 'Attributes{course = 'null',holiday = 'null',cuisine = '[Asian, Thai]'}',id = 'Pad-Thai-641068'}]',totalMatchCount = '1361',q = 'null',allowedIngredient = 'null',excludedIngredient = 'null'}
[INFO ] 2019-05-05 12:34:20.197 [main] YummlyDataGrabber - $$$$$$$$$$ Ingredients: minced garlic
[INFO ] 2019-05-05 12:34:20.199 [main] YummlyDataGrabber - $$$$$$$$$$ Matches: [MatchesItem{recipeName = 'Classic Pad Thai',flavors = 'null',sourceDisplayName = 'Taste',smallImageUrls = '[https://lh3.googleusercontent.com/n6-iEQ-eB_tZ2xZ_9MQ7VrviKyNUG22WwXOrQ4sCnoc3k_R3ROGhVruW2nf74SqKiqTYVpIHj4WEVPROsUEBnH0=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9YxdRCk-f2qJ6aVEuyFIfBOyK2ae_qMABx-WAboDFPkt-V_4rk3OCW6zqbBGDlq8XkPBo7v7m_FMoqhaRBHLM0=s90-c'}',ingredients = '[minced garlic, thai chiles, palm sugar, tamarind paste, asian fish sauce, fresh lime juice, pad thai noodles, canola oil, large shrimp, red pepper flakes, eggs, extra firm tofu, carrots, bean sprouts, green onions, cilantro leaves, roasted peanuts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Classic-Pad-Thai-2151767'}, MatchesItem{recipeName = 'Shrimp Pad-Thai',flavors = 'null',sourceDisplayName = 'simple.artistic.cooking',smallImageUrls = '[https://lh3.googleusercontent.com/THkysjs-7NkPHvVlAHnMQ8QJbB83_v7glyf_LjGs6buHIusQixQ5OzzNrfiTxVUxuqbHXn4MHZ6gXJ4FN3u7qBU=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/F-3Ds9UUGjz6puJq4xVBr4ISkYWN2gxjRQHpwph7YLG54JSL13A0cJVVsErotaNDg8JPdubKEE0iv1-kTiSt=s90-c'}',ingredients = '[rice noodles, low sodium soy sauce, fish sauce, fresh lime juice, dark brown sugar, Sriracha, crushed red pepper flakes, peanut oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh cilantro, limes, ginger, unsalted peanuts]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-2694178'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'A Day In The Kitchen',smallImageUrls = '[https://lh3.googleusercontent.com/GlwJwX-yAdImsrz97yzYyRAGSlPAXKIk8Bj7itYPzjLUDvmoXnBBF58avmrlL1DlnHTsB_HgQfiAndOT_cmr5mI=s90]',totalTimeInSeconds = '3600',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9o1lAlM-DruGaSqqvBMNbEwDQjkKAaT88P84Z86YQaEicB206-ria1E6xnNUeq3kOgjWmvs5kgIlh-jEUOQ=s90-c'}',ingredients = '[pad thai noodles, deveined shrimp, eggs, small carrot, green onion, garlic cloves, light olive oil, water, tamarind paste, oyster sauce, coconut sugar, fish sauce, soy sauce, bean sprouts, chopped peanuts, dried chili flakes, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Shrimp-Pad-Thai-2511725'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'null',sourceDisplayName = 'Bookcooker',smallImageUrls = '[https://lh3.googleusercontent.com/oRA3RBaVweVu-mbgLigmJBT1a5dK8mZGJgWBijAIz5kSfGy5ctOulTP3iF7HCJR3d3rnK2h2H0BEztVoGAjb3j4=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/GHOVr9l6K3s3_MIlQRGmGjE1cLy-Xnvlj94n3-RF7JdYXM-hWfFXtAJqPIkfxHTZAAbiVjeA-F57kRpXHJ7-ww=s90-c'}',ingredients = '[pad thai noodles, raw sugar, tamarind paste, fish sauce, rice vinegar, minced ginger, minced garlic, shallot, lemongrass, peanut oil, large eggs, cooked shrimp, extra firm tofu, scallions, peanuts, bean sprouts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1753549'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.3333333333333333',sweet = '0.16666666666666666',sour = '0.3333333333333333',bitter = '0.16666666666666666',piquant = '0.6666666666666666'}',sourceDisplayName = 'The Hungry Mouse',smallImageUrls = '[https://lh3.googleusercontent.com/kjWQ0yDHnfexuAGuUUb3pkrELmSDKiox3NVVVcf2qUNac9z4GdWsXu30RQomuRLuDXWUoNAJkDA-oyXOGyeT=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/taNW2mFGX9SDg4tgPbUjD5VyOulKfgmBf07EgFKYxXy1wdJXSrvZbGIKA0dYfKhKEgid5NprMS5vrv9GlwfnfA=s90-c'}',ingredients = '[rice noodles, boiling water, vegetable oil, cilantro, red chile, large shrimp, shallots, large eggs, sugar, oyster sauce, Thai fish sauce, fresh lime juice, bean sprouts, scallions, unsalted roasted peanuts, lime]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1764933'}, MatchesItem{recipeName = 'Chicken Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.8333333333333334',bitter = '0.6666666666666666',piquant = '0.5'}',sourceDisplayName = 'Cooking Classy',smallImageUrls = '[https://lh3.googleusercontent.com/wxHAOLhlPjO1Vm0nUPYfLdhlSY9fy-_LiJheciGzbVSmFY3TwK0vUD6Squ3EbFslSyzfJm_LxV8yO2mg8GoZ=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/e2DuGFKLDaj_lzdDoTUQSHq-9KeUFtlsv7-W2meNBkzn42n308SAqVC1W1BEMw_zFkAg_K1SIvAg-EFcEbcREA=s90-c'}',ingredients = '[rice noodles, boneless, skinless chicken breasts, vegetable oil, dark brown sugar, soy sauce, rice vinegar, lime juice, fish sauce, red bell pepper, matchstick carrots, garlic, green onions, bean sprouts, large eggs, unsalted peanuts, cilantro, red pepper flakes, sesame seeds]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Chicken-Pad-Thai-2213155'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.3333333333333333',bitter = '0.6666666666666666',piquant = '0.3333333333333333'}',sourceDisplayName = 'From Jessica's Kitchen',smallImageUrls = '[http://lh5.ggpht.com/tG9DQTsQN-Q7Vgy7mt0QAEDGtpy5xIjucpNpemEpZ4FwhrhvlN-7PoNF3-ZYRBtRzXCvv8VtuxjP2py7o9PhTrY=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh5.ggpht.com/2okQfHyuVIWk5uokYUkxoKUcQGvWkoY0QMbDClsnhfFj8I125HhW-zO7TFmsSusOiqRbFJoZ8cR6hpwxJM8v1jM=s90-c'}',ingredients = '[fresh lime juice, sugar, fish sauce, chili sauce, tamarind paste, brown sugar, chicken stock, red pepper flakes, kosher salt, vegetable oil, garlic cloves, shallots, chicken, shrimp, eggs, bean sprouts, fresh cilantro, roasted peanuts, scallions, rice noodles]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-972593'}, MatchesItem{recipeName = 'Quick Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'Food & Wine',smallImageUrls = '[http://lh3.googleusercontent.com/WFJa5dApcA64f4YS5W7w-Q38pzXL8e5f1f7QNKLW9NrokqF4z5_T0k8Q01eOgECYojSj5ritfz49OYQMr3_CxS4=s90]',totalTimeInSeconds = '1800',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/18irSqmW3lj0CrrGnEUn9FaiyuzU5CLxMAYeRU-U43knhaaXzDW6hOvw_FK0uEWkZB8VrESVnd6J6WMEI1wBnow=s90-c'}',ingredients = '[thai noodles, asian fish sauce, light brown sugar, fresh lime juice, Thai bird chiles, canola oil, shallots, large garlic cloves, medium shrimp, large eggs, scallions, roasted peanuts, bean sprouts, chopped cilantro]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Quick-Shrimp-Pad-Thai-1095426'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.8333333333333334',sweet = '0.5',sour = '0.3333333333333333',bitter = '0.8333333333333334',piquant = '0.6666666666666666'}',sourceDisplayName = 'MyRecipes',smallImageUrls = '[http://lh3.googleusercontent.com/X3vmGqU0FQfHiWa-RXC2H8_j5eP7YlaMaekrKHYuyqNt8PUJyTY-OKGQemj7y-q4DoGLL9krhmfCwwpE2_VHsw=s90]',totalTimeInSeconds = '1500',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/PEwp_Rt5ikN1kriUXm34UMwVMINSK3L9GEecCkGX900bH6FIQYMH9ex7FlqAADz_qZmpZHe4mG_xFyrxs0S_=s90-c'}',ingredients = '[rice noodles, dark brown sugar, lower sodium soy sauce, fish sauce, fresh lime juice, Sriracha, canola oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh basil]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-1085805'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.5',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.16666666666666666',bitter = '0.8333333333333334',piquant = '0.16666666666666666'}',sourceDisplayName = 'Williams-Sonoma',smallImageUrls = '[http://lh4.ggpht.com/cNeTmf82YRoFFXbJ7kpBIZAZ1tOKGtMau_kEzLZcHuCsoeEL7GcoPhPVoTDKpnmpJL5X_bxPoKZm9lU_ltaS=s90]',totalTimeInSeconds = '600',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh4.ggpht.com/bnrxERK9dvDKbsEb7PabRSFC-n2VXlWXj3_2GLtjtVmmAhZoFikVq7CtggANrTwYz_LdidpSFCcdC6cWKdUS_g=s90-c'}',ingredients = '[rice noodles, asian fish sauce, fresh lime juice, sugar, canola oil, medium shrimp, garlic cloves, red pepper flakes, eggs, bean sprouts, unsalted roasted peanuts, sliced green onions, chopped fresh cilantro, chopped fresh mint]',attributes = 'Attributes{course = 'null',holiday = 'null',cuisine = '[Asian, Thai]'}',id = 'Pad-Thai-641068'}]
[INFO ] 2019-05-05 12:34:20.201 [main] YummlyDataGrabber - $$$$$$$$$$ Attribution: Attribution{logo = 'https://static.yummly.co/api-logo.png',html = 'Recipe search powered by <a href='http://www.yummly.co/recipes'><img alt='Yummly' src='https://static.yummly.co/api-logo.png'/></a>',text = 'Recipe search powered by Yummly',url = 'http://www.yummly.co/recipes/'}
[INFO ] 2019-05-05 12:34:20.202 [main] YummlyDataGrabber - $$$$$$$$$$ Facet Counts: FacetCounts{}
[INFO ] 2019-05-05 12:34:20.205 [main] YummlyDataGrabber - $$$$$$$$$$ Total Match Count: 1361
[INFO ] 2019-05-05 12:34:20.206 [main] YummlyDataGrabber - $$$$$$$$$$ Allowed Ingredients: null
[INFO ] 2019-05-05 12:34:20.206 [main] YummlyDataGrabber - $$$$$$$$$$ Excluded Ingredients: null
[INFO ] 2019-05-05 12:34:20.207 [main] YummlyDataGrabber - $$$$$$$$$$ Q: null
[INFO ] 2019-05-05 12:34:20.207 [main] TestYummlyApi - Found Criteria from Q: Classic Pad Thai
[INFO ] 2019-05-05 12:35:12.482 [http-nio-8080-exec-2] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:35:17.967 [http-nio-8080-exec-2] GenericDao - **********Query by Last Name Found: [User{userId = '8', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'AdminMan'}]
[INFO ] 2019-05-05 12:35:17.968 [http-nio-8080-exec-2] GenericDao - **********Querying grocery list by user id: 8
[INFO ] 2019-05-05 12:35:18.045 [http-nio-8080-exec-2] GenericDao - *********Query found grocery lists by ID: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 12:35:18.046 [http-nio-8080-exec-2] SearchGrocerylist - Grocery List Object Results from Search by Last Name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 12:35:18.046 [http-nio-8080-exec-2] SearchGrocerylist - ********** User Information: FORM
[INFO ] 2019-05-05 12:38:45.872 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-05 12:38:45.887 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-05 12:38:45.887 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-05 12:38:48.844 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 12:38:48.957 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-05 12:38:48.958 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-05 12:38:48.959 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-05 12:38:49.045 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 12:38:49.045 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 12:38:49.150 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:38:49.150 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-05 12:38:49.150 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 12:38:49.188 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:38:49.189 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:38:49.189 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 12:38:49.205 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:38:49.205 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:38:49.222 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:38:49.249 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 12:38:49.253 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-05 12:38:49.305 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:38:49.306 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-05 12:38:49.307 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 12:38:49.328 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:38:49.384 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:38:49.384 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-05 12:38:49.385 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:38:49.400 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 12:38:49.400 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:38:49.413 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 12:38:49.413 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 12:38:49.413 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:38:49.423 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 12:38:49.423 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T12:38:49.385, ingredients = []}
[INFO ] 2019-05-05 12:38:49.450 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 434, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T12:38:49.385, ingredients = []}
[INFO ] 2019-05-05 12:38:49.451 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 434, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T12:38:49.385, ingredients = []}
[INFO ] 2019-05-05 12:38:49.496 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:38:49.497 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-05 12:38:49.497 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:38:49.530 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-05 12:38:49.531 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-05 12:38:49.570 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 12:38:49.571 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 12:38:49.629 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:38:49.630 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-05 12:38:49.643 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 12:38:49.693 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:38:49.693 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-05 12:38:49.694 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 12:38:49.752 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 12:38:49.804 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:38:49.805 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-05 12:38:49.805 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:38:49.817 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 12:38:49.817 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T12:38:49.805, ingredients = []}
[INFO ] 2019-05-05 12:38:49.818 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T12:38:49.805, ingredients = []}
[INFO ] 2019-05-05 12:38:49.833 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 435, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T12:38:49.805, ingredients = []}
[INFO ] 2019-05-05 12:38:49.834 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-05 12:38:49.834 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-05 12:38:49.854 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 435, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T12:38:50, ingredients = []}]
[INFO ] 2019-05-05 12:38:49.855 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-05 12:38:49.855 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-05 12:38:49.870 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 12:38:49.870 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:38:49.880 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:38:49.948 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:38:49.949 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-05 12:38:49.950 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:38:49.955 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 12:38:49.956 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 12:38:49.958 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 12:38:49.963 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:38:49.967 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-05 12:38:50.016 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:38:50.017 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-05 12:38:50.017 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:38:50.025 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-05 12:38:50.067 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:38:50.068 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-05 12:38:50.068 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:38:50.153 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-05 12:38:50.210 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:38:50.211 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-05 12:38:50.213 [main] UserTest - -------Locale date time: 2019-05-05T12:38:50.212----------
[INFO ] 2019-05-05 12:38:50.213 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 12:38:50.226 [main] GenericDao - **********Entity inserted: User{userId = '482', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 12:38:50.226 [main] GenericDao - **********Query database by using an ID: 482, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:38:50.234 [main] GenericDao - **********Query by ID Found: User{userId = '482', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 12:38:50.283 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:38:50.284 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-05 12:38:50.284 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 12:38:50.292 [main] GenericDao - **********Saved|Updated entity: User{userId = '483', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 12:38:50.292 [main] GenericDao - **********Query database by using an ID: 483, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:38:50.299 [main] GenericDao - **********Query by ID Found: User{userId = '483', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 12:38:50.299 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:38:50.311 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-05 12:38:50.312 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-05 12:38:50.312 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 12:38:50.328 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 12:38:50.328 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:38:50.350 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 12:38:50.404 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:38:50.405 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-05 12:38:50.405 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:38:50.427 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-05 12:38:50.427 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:38:50.461 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-05 12:38:50.506 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:38:50.506 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-05 12:38:50.507 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 12:38:50.514 [main] GenericDao - **********Entity inserted: User{userId = '484', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 12:38:50.514 [main] GenericDao - **********Query database by using an ID: 484, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:38:50.520 [main] GenericDao - **********Query by ID Found: User{userId = '484', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 12:38:52.218 [main] YummlyDataGrabber - $$$$$$$$$$ Criteria Request returned Object: Criteria{facetCounts = 'FacetCounts{}',criteria = 'Criteria{facetCounts = 'null',criteria = 'null',attribution = 'null',matches = 'null',totalMatchCount = '0',q = 'Pad Thai',allowedIngredient = 'null',excludedIngredient = 'null'}',attribution = 'Attribution{logo = 'https://static.yummly.co/api-logo.png',html = 'Recipe search powered by <a href='http://www.yummly.co/recipes'><img alt='Yummly' src='https://static.yummly.co/api-logo.png'/></a>',text = 'Recipe search powered by Yummly',url = 'http://www.yummly.co/recipes/'}',matches = '[MatchesItem{recipeName = 'Classic Pad Thai',flavors = 'null',sourceDisplayName = 'Taste',smallImageUrls = '[https://lh3.googleusercontent.com/n6-iEQ-eB_tZ2xZ_9MQ7VrviKyNUG22WwXOrQ4sCnoc3k_R3ROGhVruW2nf74SqKiqTYVpIHj4WEVPROsUEBnH0=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9YxdRCk-f2qJ6aVEuyFIfBOyK2ae_qMABx-WAboDFPkt-V_4rk3OCW6zqbBGDlq8XkPBo7v7m_FMoqhaRBHLM0=s90-c'}',ingredients = '[minced garlic, thai chiles, palm sugar, tamarind paste, asian fish sauce, fresh lime juice, pad thai noodles, canola oil, large shrimp, red pepper flakes, eggs, extra firm tofu, carrots, bean sprouts, green onions, cilantro leaves, roasted peanuts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Classic-Pad-Thai-2151767'}, MatchesItem{recipeName = 'Shrimp Pad-Thai',flavors = 'null',sourceDisplayName = 'simple.artistic.cooking',smallImageUrls = '[https://lh3.googleusercontent.com/THkysjs-7NkPHvVlAHnMQ8QJbB83_v7glyf_LjGs6buHIusQixQ5OzzNrfiTxVUxuqbHXn4MHZ6gXJ4FN3u7qBU=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/F-3Ds9UUGjz6puJq4xVBr4ISkYWN2gxjRQHpwph7YLG54JSL13A0cJVVsErotaNDg8JPdubKEE0iv1-kTiSt=s90-c'}',ingredients = '[rice noodles, low sodium soy sauce, fish sauce, fresh lime juice, dark brown sugar, Sriracha, crushed red pepper flakes, peanut oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh cilantro, limes, ginger, unsalted peanuts]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-2694178'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'A Day In The Kitchen',smallImageUrls = '[https://lh3.googleusercontent.com/GlwJwX-yAdImsrz97yzYyRAGSlPAXKIk8Bj7itYPzjLUDvmoXnBBF58avmrlL1DlnHTsB_HgQfiAndOT_cmr5mI=s90]',totalTimeInSeconds = '3600',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9o1lAlM-DruGaSqqvBMNbEwDQjkKAaT88P84Z86YQaEicB206-ria1E6xnNUeq3kOgjWmvs5kgIlh-jEUOQ=s90-c'}',ingredients = '[pad thai noodles, deveined shrimp, eggs, small carrot, green onion, garlic cloves, light olive oil, water, tamarind paste, oyster sauce, coconut sugar, fish sauce, soy sauce, bean sprouts, chopped peanuts, dried chili flakes, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Shrimp-Pad-Thai-2511725'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'null',sourceDisplayName = 'Bookcooker',smallImageUrls = '[https://lh3.googleusercontent.com/oRA3RBaVweVu-mbgLigmJBT1a5dK8mZGJgWBijAIz5kSfGy5ctOulTP3iF7HCJR3d3rnK2h2H0BEztVoGAjb3j4=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/GHOVr9l6K3s3_MIlQRGmGjE1cLy-Xnvlj94n3-RF7JdYXM-hWfFXtAJqPIkfxHTZAAbiVjeA-F57kRpXHJ7-ww=s90-c'}',ingredients = '[pad thai noodles, raw sugar, tamarind paste, fish sauce, rice vinegar, minced ginger, minced garlic, shallot, lemongrass, peanut oil, large eggs, cooked shrimp, extra firm tofu, scallions, peanuts, bean sprouts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1753549'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.3333333333333333',sweet = '0.16666666666666666',sour = '0.3333333333333333',bitter = '0.16666666666666666',piquant = '0.6666666666666666'}',sourceDisplayName = 'The Hungry Mouse',smallImageUrls = '[https://lh3.googleusercontent.com/kjWQ0yDHnfexuAGuUUb3pkrELmSDKiox3NVVVcf2qUNac9z4GdWsXu30RQomuRLuDXWUoNAJkDA-oyXOGyeT=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/taNW2mFGX9SDg4tgPbUjD5VyOulKfgmBf07EgFKYxXy1wdJXSrvZbGIKA0dYfKhKEgid5NprMS5vrv9GlwfnfA=s90-c'}',ingredients = '[rice noodles, boiling water, vegetable oil, cilantro, red chile, large shrimp, shallots, large eggs, sugar, oyster sauce, Thai fish sauce, fresh lime juice, bean sprouts, scallions, unsalted roasted peanuts, lime]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1764933'}, MatchesItem{recipeName = 'Chicken Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.8333333333333334',bitter = '0.6666666666666666',piquant = '0.5'}',sourceDisplayName = 'Cooking Classy',smallImageUrls = '[https://lh3.googleusercontent.com/wxHAOLhlPjO1Vm0nUPYfLdhlSY9fy-_LiJheciGzbVSmFY3TwK0vUD6Squ3EbFslSyzfJm_LxV8yO2mg8GoZ=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/e2DuGFKLDaj_lzdDoTUQSHq-9KeUFtlsv7-W2meNBkzn42n308SAqVC1W1BEMw_zFkAg_K1SIvAg-EFcEbcREA=s90-c'}',ingredients = '[rice noodles, boneless, skinless chicken breasts, vegetable oil, dark brown sugar, soy sauce, rice vinegar, lime juice, fish sauce, red bell pepper, matchstick carrots, garlic, green onions, bean sprouts, large eggs, unsalted peanuts, cilantro, red pepper flakes, sesame seeds]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Chicken-Pad-Thai-2213155'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.3333333333333333',bitter = '0.6666666666666666',piquant = '0.3333333333333333'}',sourceDisplayName = 'From Jessica's Kitchen',smallImageUrls = '[http://lh5.ggpht.com/tG9DQTsQN-Q7Vgy7mt0QAEDGtpy5xIjucpNpemEpZ4FwhrhvlN-7PoNF3-ZYRBtRzXCvv8VtuxjP2py7o9PhTrY=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh5.ggpht.com/2okQfHyuVIWk5uokYUkxoKUcQGvWkoY0QMbDClsnhfFj8I125HhW-zO7TFmsSusOiqRbFJoZ8cR6hpwxJM8v1jM=s90-c'}',ingredients = '[fresh lime juice, sugar, fish sauce, chili sauce, tamarind paste, brown sugar, chicken stock, red pepper flakes, kosher salt, vegetable oil, garlic cloves, shallots, chicken, shrimp, eggs, bean sprouts, fresh cilantro, roasted peanuts, scallions, rice noodles]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-972593'}, MatchesItem{recipeName = 'Quick Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'Food & Wine',smallImageUrls = '[http://lh3.googleusercontent.com/WFJa5dApcA64f4YS5W7w-Q38pzXL8e5f1f7QNKLW9NrokqF4z5_T0k8Q01eOgECYojSj5ritfz49OYQMr3_CxS4=s90]',totalTimeInSeconds = '1800',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/18irSqmW3lj0CrrGnEUn9FaiyuzU5CLxMAYeRU-U43knhaaXzDW6hOvw_FK0uEWkZB8VrESVnd6J6WMEI1wBnow=s90-c'}',ingredients = '[thai noodles, asian fish sauce, light brown sugar, fresh lime juice, Thai bird chiles, canola oil, shallots, large garlic cloves, medium shrimp, large eggs, scallions, roasted peanuts, bean sprouts, chopped cilantro]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Quick-Shrimp-Pad-Thai-1095426'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.8333333333333334',sweet = '0.5',sour = '0.3333333333333333',bitter = '0.8333333333333334',piquant = '0.6666666666666666'}',sourceDisplayName = 'MyRecipes',smallImageUrls = '[http://lh3.googleusercontent.com/X3vmGqU0FQfHiWa-RXC2H8_j5eP7YlaMaekrKHYuyqNt8PUJyTY-OKGQemj7y-q4DoGLL9krhmfCwwpE2_VHsw=s90]',totalTimeInSeconds = '1500',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/PEwp_Rt5ikN1kriUXm34UMwVMINSK3L9GEecCkGX900bH6FIQYMH9ex7FlqAADz_qZmpZHe4mG_xFyrxs0S_=s90-c'}',ingredients = '[rice noodles, dark brown sugar, lower sodium soy sauce, fish sauce, fresh lime juice, Sriracha, canola oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh basil]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-1085805'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.5',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.16666666666666666',bitter = '0.8333333333333334',piquant = '0.16666666666666666'}',sourceDisplayName = 'Williams-Sonoma',smallImageUrls = '[http://lh4.ggpht.com/cNeTmf82YRoFFXbJ7kpBIZAZ1tOKGtMau_kEzLZcHuCsoeEL7GcoPhPVoTDKpnmpJL5X_bxPoKZm9lU_ltaS=s90]',totalTimeInSeconds = '600',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh4.ggpht.com/bnrxERK9dvDKbsEb7PabRSFC-n2VXlWXj3_2GLtjtVmmAhZoFikVq7CtggANrTwYz_LdidpSFCcdC6cWKdUS_g=s90-c'}',ingredients = '[rice noodles, asian fish sauce, fresh lime juice, sugar, canola oil, medium shrimp, garlic cloves, red pepper flakes, eggs, bean sprouts, unsalted roasted peanuts, sliced green onions, chopped fresh cilantro, chopped fresh mint]',attributes = 'Attributes{course = 'null',holiday = 'null',cuisine = '[Asian, Thai]'}',id = 'Pad-Thai-641068'}]',totalMatchCount = '1361',q = 'null',allowedIngredient = 'null',excludedIngredient = 'null'}
[INFO ] 2019-05-05 12:38:52.219 [main] YummlyDataGrabber - $$$$$$$$$$ Ingredients: minced garlic
[INFO ] 2019-05-05 12:38:52.222 [main] YummlyDataGrabber - $$$$$$$$$$ Matches: [MatchesItem{recipeName = 'Classic Pad Thai',flavors = 'null',sourceDisplayName = 'Taste',smallImageUrls = '[https://lh3.googleusercontent.com/n6-iEQ-eB_tZ2xZ_9MQ7VrviKyNUG22WwXOrQ4sCnoc3k_R3ROGhVruW2nf74SqKiqTYVpIHj4WEVPROsUEBnH0=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9YxdRCk-f2qJ6aVEuyFIfBOyK2ae_qMABx-WAboDFPkt-V_4rk3OCW6zqbBGDlq8XkPBo7v7m_FMoqhaRBHLM0=s90-c'}',ingredients = '[minced garlic, thai chiles, palm sugar, tamarind paste, asian fish sauce, fresh lime juice, pad thai noodles, canola oil, large shrimp, red pepper flakes, eggs, extra firm tofu, carrots, bean sprouts, green onions, cilantro leaves, roasted peanuts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Classic-Pad-Thai-2151767'}, MatchesItem{recipeName = 'Shrimp Pad-Thai',flavors = 'null',sourceDisplayName = 'simple.artistic.cooking',smallImageUrls = '[https://lh3.googleusercontent.com/THkysjs-7NkPHvVlAHnMQ8QJbB83_v7glyf_LjGs6buHIusQixQ5OzzNrfiTxVUxuqbHXn4MHZ6gXJ4FN3u7qBU=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/F-3Ds9UUGjz6puJq4xVBr4ISkYWN2gxjRQHpwph7YLG54JSL13A0cJVVsErotaNDg8JPdubKEE0iv1-kTiSt=s90-c'}',ingredients = '[rice noodles, low sodium soy sauce, fish sauce, fresh lime juice, dark brown sugar, Sriracha, crushed red pepper flakes, peanut oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh cilantro, limes, ginger, unsalted peanuts]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-2694178'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'A Day In The Kitchen',smallImageUrls = '[https://lh3.googleusercontent.com/GlwJwX-yAdImsrz97yzYyRAGSlPAXKIk8Bj7itYPzjLUDvmoXnBBF58avmrlL1DlnHTsB_HgQfiAndOT_cmr5mI=s90]',totalTimeInSeconds = '3600',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9o1lAlM-DruGaSqqvBMNbEwDQjkKAaT88P84Z86YQaEicB206-ria1E6xnNUeq3kOgjWmvs5kgIlh-jEUOQ=s90-c'}',ingredients = '[pad thai noodles, deveined shrimp, eggs, small carrot, green onion, garlic cloves, light olive oil, water, tamarind paste, oyster sauce, coconut sugar, fish sauce, soy sauce, bean sprouts, chopped peanuts, dried chili flakes, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Shrimp-Pad-Thai-2511725'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'null',sourceDisplayName = 'Bookcooker',smallImageUrls = '[https://lh3.googleusercontent.com/oRA3RBaVweVu-mbgLigmJBT1a5dK8mZGJgWBijAIz5kSfGy5ctOulTP3iF7HCJR3d3rnK2h2H0BEztVoGAjb3j4=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/GHOVr9l6K3s3_MIlQRGmGjE1cLy-Xnvlj94n3-RF7JdYXM-hWfFXtAJqPIkfxHTZAAbiVjeA-F57kRpXHJ7-ww=s90-c'}',ingredients = '[pad thai noodles, raw sugar, tamarind paste, fish sauce, rice vinegar, minced ginger, minced garlic, shallot, lemongrass, peanut oil, large eggs, cooked shrimp, extra firm tofu, scallions, peanuts, bean sprouts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1753549'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.3333333333333333',sweet = '0.16666666666666666',sour = '0.3333333333333333',bitter = '0.16666666666666666',piquant = '0.6666666666666666'}',sourceDisplayName = 'The Hungry Mouse',smallImageUrls = '[https://lh3.googleusercontent.com/kjWQ0yDHnfexuAGuUUb3pkrELmSDKiox3NVVVcf2qUNac9z4GdWsXu30RQomuRLuDXWUoNAJkDA-oyXOGyeT=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/taNW2mFGX9SDg4tgPbUjD5VyOulKfgmBf07EgFKYxXy1wdJXSrvZbGIKA0dYfKhKEgid5NprMS5vrv9GlwfnfA=s90-c'}',ingredients = '[rice noodles, boiling water, vegetable oil, cilantro, red chile, large shrimp, shallots, large eggs, sugar, oyster sauce, Thai fish sauce, fresh lime juice, bean sprouts, scallions, unsalted roasted peanuts, lime]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1764933'}, MatchesItem{recipeName = 'Chicken Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.8333333333333334',bitter = '0.6666666666666666',piquant = '0.5'}',sourceDisplayName = 'Cooking Classy',smallImageUrls = '[https://lh3.googleusercontent.com/wxHAOLhlPjO1Vm0nUPYfLdhlSY9fy-_LiJheciGzbVSmFY3TwK0vUD6Squ3EbFslSyzfJm_LxV8yO2mg8GoZ=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/e2DuGFKLDaj_lzdDoTUQSHq-9KeUFtlsv7-W2meNBkzn42n308SAqVC1W1BEMw_zFkAg_K1SIvAg-EFcEbcREA=s90-c'}',ingredients = '[rice noodles, boneless, skinless chicken breasts, vegetable oil, dark brown sugar, soy sauce, rice vinegar, lime juice, fish sauce, red bell pepper, matchstick carrots, garlic, green onions, bean sprouts, large eggs, unsalted peanuts, cilantro, red pepper flakes, sesame seeds]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Chicken-Pad-Thai-2213155'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.3333333333333333',bitter = '0.6666666666666666',piquant = '0.3333333333333333'}',sourceDisplayName = 'From Jessica's Kitchen',smallImageUrls = '[http://lh5.ggpht.com/tG9DQTsQN-Q7Vgy7mt0QAEDGtpy5xIjucpNpemEpZ4FwhrhvlN-7PoNF3-ZYRBtRzXCvv8VtuxjP2py7o9PhTrY=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh5.ggpht.com/2okQfHyuVIWk5uokYUkxoKUcQGvWkoY0QMbDClsnhfFj8I125HhW-zO7TFmsSusOiqRbFJoZ8cR6hpwxJM8v1jM=s90-c'}',ingredients = '[fresh lime juice, sugar, fish sauce, chili sauce, tamarind paste, brown sugar, chicken stock, red pepper flakes, kosher salt, vegetable oil, garlic cloves, shallots, chicken, shrimp, eggs, bean sprouts, fresh cilantro, roasted peanuts, scallions, rice noodles]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-972593'}, MatchesItem{recipeName = 'Quick Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'Food & Wine',smallImageUrls = '[http://lh3.googleusercontent.com/WFJa5dApcA64f4YS5W7w-Q38pzXL8e5f1f7QNKLW9NrokqF4z5_T0k8Q01eOgECYojSj5ritfz49OYQMr3_CxS4=s90]',totalTimeInSeconds = '1800',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/18irSqmW3lj0CrrGnEUn9FaiyuzU5CLxMAYeRU-U43knhaaXzDW6hOvw_FK0uEWkZB8VrESVnd6J6WMEI1wBnow=s90-c'}',ingredients = '[thai noodles, asian fish sauce, light brown sugar, fresh lime juice, Thai bird chiles, canola oil, shallots, large garlic cloves, medium shrimp, large eggs, scallions, roasted peanuts, bean sprouts, chopped cilantro]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Quick-Shrimp-Pad-Thai-1095426'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.8333333333333334',sweet = '0.5',sour = '0.3333333333333333',bitter = '0.8333333333333334',piquant = '0.6666666666666666'}',sourceDisplayName = 'MyRecipes',smallImageUrls = '[http://lh3.googleusercontent.com/X3vmGqU0FQfHiWa-RXC2H8_j5eP7YlaMaekrKHYuyqNt8PUJyTY-OKGQemj7y-q4DoGLL9krhmfCwwpE2_VHsw=s90]',totalTimeInSeconds = '1500',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/PEwp_Rt5ikN1kriUXm34UMwVMINSK3L9GEecCkGX900bH6FIQYMH9ex7FlqAADz_qZmpZHe4mG_xFyrxs0S_=s90-c'}',ingredients = '[rice noodles, dark brown sugar, lower sodium soy sauce, fish sauce, fresh lime juice, Sriracha, canola oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh basil]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-1085805'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.5',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.16666666666666666',bitter = '0.8333333333333334',piquant = '0.16666666666666666'}',sourceDisplayName = 'Williams-Sonoma',smallImageUrls = '[http://lh4.ggpht.com/cNeTmf82YRoFFXbJ7kpBIZAZ1tOKGtMau_kEzLZcHuCsoeEL7GcoPhPVoTDKpnmpJL5X_bxPoKZm9lU_ltaS=s90]',totalTimeInSeconds = '600',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh4.ggpht.com/bnrxERK9dvDKbsEb7PabRSFC-n2VXlWXj3_2GLtjtVmmAhZoFikVq7CtggANrTwYz_LdidpSFCcdC6cWKdUS_g=s90-c'}',ingredients = '[rice noodles, asian fish sauce, fresh lime juice, sugar, canola oil, medium shrimp, garlic cloves, red pepper flakes, eggs, bean sprouts, unsalted roasted peanuts, sliced green onions, chopped fresh cilantro, chopped fresh mint]',attributes = 'Attributes{course = 'null',holiday = 'null',cuisine = '[Asian, Thai]'}',id = 'Pad-Thai-641068'}]
[INFO ] 2019-05-05 12:38:52.223 [main] YummlyDataGrabber - $$$$$$$$$$ Attribution: Attribution{logo = 'https://static.yummly.co/api-logo.png',html = 'Recipe search powered by <a href='http://www.yummly.co/recipes'><img alt='Yummly' src='https://static.yummly.co/api-logo.png'/></a>',text = 'Recipe search powered by Yummly',url = 'http://www.yummly.co/recipes/'}
[INFO ] 2019-05-05 12:38:52.223 [main] YummlyDataGrabber - $$$$$$$$$$ Facet Counts: FacetCounts{}
[INFO ] 2019-05-05 12:38:52.223 [main] YummlyDataGrabber - $$$$$$$$$$ Total Match Count: 1361
[INFO ] 2019-05-05 12:38:52.223 [main] YummlyDataGrabber - $$$$$$$$$$ Allowed Ingredients: null
[INFO ] 2019-05-05 12:38:52.223 [main] YummlyDataGrabber - $$$$$$$$$$ Excluded Ingredients: null
[INFO ] 2019-05-05 12:38:52.224 [main] YummlyDataGrabber - $$$$$$$$$$ Q: null
[INFO ] 2019-05-05 12:38:52.224 [main] TestYummlyApi - Found Criteria from Q: Classic Pad Thai
[INFO ] 2019-05-05 12:39:50.401 [http-nio-8080-exec-1] GenericDao - **********Query Using Last Name:  hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:39:54.641 [http-nio-8080-exec-1] GenericDao - **********Query by Last Name Found: [User{userId = '8', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'AdminMan'}]
[INFO ] 2019-05-05 12:39:54.642 [http-nio-8080-exec-1] GenericDao - **********Querying grocery list by user id: 8
[INFO ] 2019-05-05 12:39:54.708 [http-nio-8080-exec-1] GenericDao - *********Query found grocery lists by ID: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 12:39:54.708 [http-nio-8080-exec-1] SearchGrocerylist - Grocery List Object Results from Search by Last Name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 12:39:54.709 [http-nio-8080-exec-1] SearchGrocerylist - ********** User Information: GenericPrincipal[Tester1(AdminMan,)]
[INFO ] 2019-05-05 12:45:35.716 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-05 12:45:35.728 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-05 12:45:35.728 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-05 12:45:38.862 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 12:45:39.022 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-05 12:45:39.023 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-05 12:45:39.023 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-05 12:45:39.105 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 12:45:39.105 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 12:45:39.199 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:45:39.199 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-05 12:45:39.200 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 12:45:39.253 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:45:39.253 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:45:39.254 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 12:45:39.270 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:45:39.271 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:45:39.292 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:45:39.341 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 12:45:39.346 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-05 12:45:39.485 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:45:39.486 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-05 12:45:39.486 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 12:45:39.504 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:45:39.557 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:45:39.558 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-05 12:45:39.558 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:45:39.571 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 12:45:39.571 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:45:39.587 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 12:45:39.588 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 12:45:39.588 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:45:39.600 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 12:45:39.600 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T12:45:39.558, ingredients = []}
[INFO ] 2019-05-05 12:45:39.629 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 437, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T12:45:39.558, ingredients = []}
[INFO ] 2019-05-05 12:45:39.629 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 437, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T12:45:39.558, ingredients = []}
[INFO ] 2019-05-05 12:45:39.675 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:45:39.676 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-05 12:45:39.676 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:45:39.705 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-05 12:45:39.705 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-05 12:45:39.735 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 12:45:39.735 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 12:45:39.794 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:45:39.794 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-05 12:45:39.807 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 12:45:39.858 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:45:39.859 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-05 12:45:39.859 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 12:45:39.906 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 12:45:39.952 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:45:39.953 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-05 12:45:39.953 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:45:39.962 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 12:45:39.962 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T12:45:39.953, ingredients = []}
[INFO ] 2019-05-05 12:45:39.962 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T12:45:39.953, ingredients = []}
[INFO ] 2019-05-05 12:45:39.973 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 438, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T12:45:39.953, ingredients = []}
[INFO ] 2019-05-05 12:45:39.973 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-05 12:45:39.974 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-05 12:45:39.996 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 438, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T12:45:40, ingredients = []}]
[INFO ] 2019-05-05 12:45:39.996 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-05 12:45:39.996 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-05 12:45:40.008 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 12:45:40.009 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:45:40.022 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:45:40.113 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:45:40.114 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-05 12:45:40.118 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:45:40.124 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 12:45:40.125 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 12:45:40.129 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 12:45:40.135 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:45:40.141 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-05 12:45:40.197 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:45:40.198 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-05 12:45:40.198 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:45:40.215 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-05 12:45:40.266 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:45:40.267 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-05 12:45:40.267 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:45:40.382 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-05 12:45:40.435 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:45:40.435 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-05 12:45:40.436 [main] UserTest - -------Locale date time: 2019-05-05T12:45:40.435----------
[INFO ] 2019-05-05 12:45:40.436 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 12:45:40.444 [main] GenericDao - **********Entity inserted: User{userId = '485', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 12:45:40.445 [main] GenericDao - **********Query database by using an ID: 485, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:45:40.454 [main] GenericDao - **********Query by ID Found: User{userId = '485', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 12:45:40.520 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:45:40.521 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-05 12:45:40.521 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 12:45:40.538 [main] GenericDao - **********Saved|Updated entity: User{userId = '486', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 12:45:40.539 [main] GenericDao - **********Query database by using an ID: 486, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:45:40.545 [main] GenericDao - **********Query by ID Found: User{userId = '486', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 12:45:40.545 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:45:40.559 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-05 12:45:40.559 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-05 12:45:40.559 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 12:45:40.578 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 12:45:40.578 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:45:40.600 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 12:45:40.637 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:45:40.637 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-05 12:45:40.638 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:45:40.656 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-05 12:45:40.656 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:45:40.680 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-05 12:45:40.722 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:45:40.722 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-05 12:45:40.722 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 12:45:40.727 [main] GenericDao - **********Entity inserted: User{userId = '487', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 12:45:40.728 [main] GenericDao - **********Query database by using an ID: 487, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:45:40.731 [main] GenericDao - **********Query by ID Found: User{userId = '487', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 12:45:42.442 [main] YummlyDataGrabber - $$$$$$$$$$ Criteria Request returned Object: Criteria{facetCounts = 'FacetCounts{}',criteria = 'Criteria{facetCounts = 'null',criteria = 'null',attribution = 'null',matches = 'null',totalMatchCount = '0',q = 'Pad Thai',allowedIngredient = 'null',excludedIngredient = 'null'}',attribution = 'Attribution{logo = 'https://static.yummly.co/api-logo.png',html = 'Recipe search powered by <a href='http://www.yummly.co/recipes'><img alt='Yummly' src='https://static.yummly.co/api-logo.png'/></a>',text = 'Recipe search powered by Yummly',url = 'http://www.yummly.co/recipes/'}',matches = '[MatchesItem{recipeName = 'Classic Pad Thai',flavors = 'null',sourceDisplayName = 'Taste',smallImageUrls = '[https://lh3.googleusercontent.com/n6-iEQ-eB_tZ2xZ_9MQ7VrviKyNUG22WwXOrQ4sCnoc3k_R3ROGhVruW2nf74SqKiqTYVpIHj4WEVPROsUEBnH0=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9YxdRCk-f2qJ6aVEuyFIfBOyK2ae_qMABx-WAboDFPkt-V_4rk3OCW6zqbBGDlq8XkPBo7v7m_FMoqhaRBHLM0=s90-c'}',ingredients = '[minced garlic, thai chiles, palm sugar, tamarind paste, asian fish sauce, fresh lime juice, pad thai noodles, canola oil, large shrimp, red pepper flakes, eggs, extra firm tofu, carrots, bean sprouts, green onions, cilantro leaves, roasted peanuts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Classic-Pad-Thai-2151767'}, MatchesItem{recipeName = 'Shrimp Pad-Thai',flavors = 'null',sourceDisplayName = 'simple.artistic.cooking',smallImageUrls = '[https://lh3.googleusercontent.com/THkysjs-7NkPHvVlAHnMQ8QJbB83_v7glyf_LjGs6buHIusQixQ5OzzNrfiTxVUxuqbHXn4MHZ6gXJ4FN3u7qBU=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/F-3Ds9UUGjz6puJq4xVBr4ISkYWN2gxjRQHpwph7YLG54JSL13A0cJVVsErotaNDg8JPdubKEE0iv1-kTiSt=s90-c'}',ingredients = '[rice noodles, low sodium soy sauce, fish sauce, fresh lime juice, dark brown sugar, Sriracha, crushed red pepper flakes, peanut oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh cilantro, limes, ginger, unsalted peanuts]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-2694178'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'A Day In The Kitchen',smallImageUrls = '[https://lh3.googleusercontent.com/GlwJwX-yAdImsrz97yzYyRAGSlPAXKIk8Bj7itYPzjLUDvmoXnBBF58avmrlL1DlnHTsB_HgQfiAndOT_cmr5mI=s90]',totalTimeInSeconds = '3600',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9o1lAlM-DruGaSqqvBMNbEwDQjkKAaT88P84Z86YQaEicB206-ria1E6xnNUeq3kOgjWmvs5kgIlh-jEUOQ=s90-c'}',ingredients = '[pad thai noodles, deveined shrimp, eggs, small carrot, green onion, garlic cloves, light olive oil, water, tamarind paste, oyster sauce, coconut sugar, fish sauce, soy sauce, bean sprouts, chopped peanuts, dried chili flakes, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Shrimp-Pad-Thai-2511725'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'null',sourceDisplayName = 'Bookcooker',smallImageUrls = '[https://lh3.googleusercontent.com/oRA3RBaVweVu-mbgLigmJBT1a5dK8mZGJgWBijAIz5kSfGy5ctOulTP3iF7HCJR3d3rnK2h2H0BEztVoGAjb3j4=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/GHOVr9l6K3s3_MIlQRGmGjE1cLy-Xnvlj94n3-RF7JdYXM-hWfFXtAJqPIkfxHTZAAbiVjeA-F57kRpXHJ7-ww=s90-c'}',ingredients = '[pad thai noodles, raw sugar, tamarind paste, fish sauce, rice vinegar, minced ginger, minced garlic, shallot, lemongrass, peanut oil, large eggs, cooked shrimp, extra firm tofu, scallions, peanuts, bean sprouts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1753549'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.3333333333333333',sweet = '0.16666666666666666',sour = '0.3333333333333333',bitter = '0.16666666666666666',piquant = '0.6666666666666666'}',sourceDisplayName = 'The Hungry Mouse',smallImageUrls = '[https://lh3.googleusercontent.com/kjWQ0yDHnfexuAGuUUb3pkrELmSDKiox3NVVVcf2qUNac9z4GdWsXu30RQomuRLuDXWUoNAJkDA-oyXOGyeT=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/taNW2mFGX9SDg4tgPbUjD5VyOulKfgmBf07EgFKYxXy1wdJXSrvZbGIKA0dYfKhKEgid5NprMS5vrv9GlwfnfA=s90-c'}',ingredients = '[rice noodles, boiling water, vegetable oil, cilantro, red chile, large shrimp, shallots, large eggs, sugar, oyster sauce, Thai fish sauce, fresh lime juice, bean sprouts, scallions, unsalted roasted peanuts, lime]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1764933'}, MatchesItem{recipeName = 'Chicken Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.8333333333333334',bitter = '0.6666666666666666',piquant = '0.5'}',sourceDisplayName = 'Cooking Classy',smallImageUrls = '[https://lh3.googleusercontent.com/wxHAOLhlPjO1Vm0nUPYfLdhlSY9fy-_LiJheciGzbVSmFY3TwK0vUD6Squ3EbFslSyzfJm_LxV8yO2mg8GoZ=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/e2DuGFKLDaj_lzdDoTUQSHq-9KeUFtlsv7-W2meNBkzn42n308SAqVC1W1BEMw_zFkAg_K1SIvAg-EFcEbcREA=s90-c'}',ingredients = '[rice noodles, boneless, skinless chicken breasts, vegetable oil, dark brown sugar, soy sauce, rice vinegar, lime juice, fish sauce, red bell pepper, matchstick carrots, garlic, green onions, bean sprouts, large eggs, unsalted peanuts, cilantro, red pepper flakes, sesame seeds]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Chicken-Pad-Thai-2213155'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.3333333333333333',bitter = '0.6666666666666666',piquant = '0.3333333333333333'}',sourceDisplayName = 'From Jessica's Kitchen',smallImageUrls = '[http://lh5.ggpht.com/tG9DQTsQN-Q7Vgy7mt0QAEDGtpy5xIjucpNpemEpZ4FwhrhvlN-7PoNF3-ZYRBtRzXCvv8VtuxjP2py7o9PhTrY=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh5.ggpht.com/2okQfHyuVIWk5uokYUkxoKUcQGvWkoY0QMbDClsnhfFj8I125HhW-zO7TFmsSusOiqRbFJoZ8cR6hpwxJM8v1jM=s90-c'}',ingredients = '[fresh lime juice, sugar, fish sauce, chili sauce, tamarind paste, brown sugar, chicken stock, red pepper flakes, kosher salt, vegetable oil, garlic cloves, shallots, chicken, shrimp, eggs, bean sprouts, fresh cilantro, roasted peanuts, scallions, rice noodles]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-972593'}, MatchesItem{recipeName = 'Quick Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'Food & Wine',smallImageUrls = '[http://lh3.googleusercontent.com/WFJa5dApcA64f4YS5W7w-Q38pzXL8e5f1f7QNKLW9NrokqF4z5_T0k8Q01eOgECYojSj5ritfz49OYQMr3_CxS4=s90]',totalTimeInSeconds = '1800',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/18irSqmW3lj0CrrGnEUn9FaiyuzU5CLxMAYeRU-U43knhaaXzDW6hOvw_FK0uEWkZB8VrESVnd6J6WMEI1wBnow=s90-c'}',ingredients = '[thai noodles, asian fish sauce, light brown sugar, fresh lime juice, Thai bird chiles, canola oil, shallots, large garlic cloves, medium shrimp, large eggs, scallions, roasted peanuts, bean sprouts, chopped cilantro]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Quick-Shrimp-Pad-Thai-1095426'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.8333333333333334',sweet = '0.5',sour = '0.3333333333333333',bitter = '0.8333333333333334',piquant = '0.6666666666666666'}',sourceDisplayName = 'MyRecipes',smallImageUrls = '[http://lh3.googleusercontent.com/X3vmGqU0FQfHiWa-RXC2H8_j5eP7YlaMaekrKHYuyqNt8PUJyTY-OKGQemj7y-q4DoGLL9krhmfCwwpE2_VHsw=s90]',totalTimeInSeconds = '1500',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/PEwp_Rt5ikN1kriUXm34UMwVMINSK3L9GEecCkGX900bH6FIQYMH9ex7FlqAADz_qZmpZHe4mG_xFyrxs0S_=s90-c'}',ingredients = '[rice noodles, dark brown sugar, lower sodium soy sauce, fish sauce, fresh lime juice, Sriracha, canola oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh basil]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-1085805'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.5',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.16666666666666666',bitter = '0.8333333333333334',piquant = '0.16666666666666666'}',sourceDisplayName = 'Williams-Sonoma',smallImageUrls = '[http://lh4.ggpht.com/cNeTmf82YRoFFXbJ7kpBIZAZ1tOKGtMau_kEzLZcHuCsoeEL7GcoPhPVoTDKpnmpJL5X_bxPoKZm9lU_ltaS=s90]',totalTimeInSeconds = '600',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh4.ggpht.com/bnrxERK9dvDKbsEb7PabRSFC-n2VXlWXj3_2GLtjtVmmAhZoFikVq7CtggANrTwYz_LdidpSFCcdC6cWKdUS_g=s90-c'}',ingredients = '[rice noodles, asian fish sauce, fresh lime juice, sugar, canola oil, medium shrimp, garlic cloves, red pepper flakes, eggs, bean sprouts, unsalted roasted peanuts, sliced green onions, chopped fresh cilantro, chopped fresh mint]',attributes = 'Attributes{course = 'null',holiday = 'null',cuisine = '[Asian, Thai]'}',id = 'Pad-Thai-641068'}]',totalMatchCount = '1361',q = 'null',allowedIngredient = 'null',excludedIngredient = 'null'}
[INFO ] 2019-05-05 12:45:42.443 [main] YummlyDataGrabber - $$$$$$$$$$ Ingredients: minced garlic
[INFO ] 2019-05-05 12:45:42.447 [main] YummlyDataGrabber - $$$$$$$$$$ Matches: [MatchesItem{recipeName = 'Classic Pad Thai',flavors = 'null',sourceDisplayName = 'Taste',smallImageUrls = '[https://lh3.googleusercontent.com/n6-iEQ-eB_tZ2xZ_9MQ7VrviKyNUG22WwXOrQ4sCnoc3k_R3ROGhVruW2nf74SqKiqTYVpIHj4WEVPROsUEBnH0=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9YxdRCk-f2qJ6aVEuyFIfBOyK2ae_qMABx-WAboDFPkt-V_4rk3OCW6zqbBGDlq8XkPBo7v7m_FMoqhaRBHLM0=s90-c'}',ingredients = '[minced garlic, thai chiles, palm sugar, tamarind paste, asian fish sauce, fresh lime juice, pad thai noodles, canola oil, large shrimp, red pepper flakes, eggs, extra firm tofu, carrots, bean sprouts, green onions, cilantro leaves, roasted peanuts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Classic-Pad-Thai-2151767'}, MatchesItem{recipeName = 'Shrimp Pad-Thai',flavors = 'null',sourceDisplayName = 'simple.artistic.cooking',smallImageUrls = '[https://lh3.googleusercontent.com/THkysjs-7NkPHvVlAHnMQ8QJbB83_v7glyf_LjGs6buHIusQixQ5OzzNrfiTxVUxuqbHXn4MHZ6gXJ4FN3u7qBU=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/F-3Ds9UUGjz6puJq4xVBr4ISkYWN2gxjRQHpwph7YLG54JSL13A0cJVVsErotaNDg8JPdubKEE0iv1-kTiSt=s90-c'}',ingredients = '[rice noodles, low sodium soy sauce, fish sauce, fresh lime juice, dark brown sugar, Sriracha, crushed red pepper flakes, peanut oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh cilantro, limes, ginger, unsalted peanuts]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-2694178'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'A Day In The Kitchen',smallImageUrls = '[https://lh3.googleusercontent.com/GlwJwX-yAdImsrz97yzYyRAGSlPAXKIk8Bj7itYPzjLUDvmoXnBBF58avmrlL1DlnHTsB_HgQfiAndOT_cmr5mI=s90]',totalTimeInSeconds = '3600',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9o1lAlM-DruGaSqqvBMNbEwDQjkKAaT88P84Z86YQaEicB206-ria1E6xnNUeq3kOgjWmvs5kgIlh-jEUOQ=s90-c'}',ingredients = '[pad thai noodles, deveined shrimp, eggs, small carrot, green onion, garlic cloves, light olive oil, water, tamarind paste, oyster sauce, coconut sugar, fish sauce, soy sauce, bean sprouts, chopped peanuts, dried chili flakes, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Shrimp-Pad-Thai-2511725'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'null',sourceDisplayName = 'Bookcooker',smallImageUrls = '[https://lh3.googleusercontent.com/oRA3RBaVweVu-mbgLigmJBT1a5dK8mZGJgWBijAIz5kSfGy5ctOulTP3iF7HCJR3d3rnK2h2H0BEztVoGAjb3j4=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/GHOVr9l6K3s3_MIlQRGmGjE1cLy-Xnvlj94n3-RF7JdYXM-hWfFXtAJqPIkfxHTZAAbiVjeA-F57kRpXHJ7-ww=s90-c'}',ingredients = '[pad thai noodles, raw sugar, tamarind paste, fish sauce, rice vinegar, minced ginger, minced garlic, shallot, lemongrass, peanut oil, large eggs, cooked shrimp, extra firm tofu, scallions, peanuts, bean sprouts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1753549'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.3333333333333333',sweet = '0.16666666666666666',sour = '0.3333333333333333',bitter = '0.16666666666666666',piquant = '0.6666666666666666'}',sourceDisplayName = 'The Hungry Mouse',smallImageUrls = '[https://lh3.googleusercontent.com/kjWQ0yDHnfexuAGuUUb3pkrELmSDKiox3NVVVcf2qUNac9z4GdWsXu30RQomuRLuDXWUoNAJkDA-oyXOGyeT=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/taNW2mFGX9SDg4tgPbUjD5VyOulKfgmBf07EgFKYxXy1wdJXSrvZbGIKA0dYfKhKEgid5NprMS5vrv9GlwfnfA=s90-c'}',ingredients = '[rice noodles, boiling water, vegetable oil, cilantro, red chile, large shrimp, shallots, large eggs, sugar, oyster sauce, Thai fish sauce, fresh lime juice, bean sprouts, scallions, unsalted roasted peanuts, lime]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1764933'}, MatchesItem{recipeName = 'Chicken Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.8333333333333334',bitter = '0.6666666666666666',piquant = '0.5'}',sourceDisplayName = 'Cooking Classy',smallImageUrls = '[https://lh3.googleusercontent.com/wxHAOLhlPjO1Vm0nUPYfLdhlSY9fy-_LiJheciGzbVSmFY3TwK0vUD6Squ3EbFslSyzfJm_LxV8yO2mg8GoZ=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/e2DuGFKLDaj_lzdDoTUQSHq-9KeUFtlsv7-W2meNBkzn42n308SAqVC1W1BEMw_zFkAg_K1SIvAg-EFcEbcREA=s90-c'}',ingredients = '[rice noodles, boneless, skinless chicken breasts, vegetable oil, dark brown sugar, soy sauce, rice vinegar, lime juice, fish sauce, red bell pepper, matchstick carrots, garlic, green onions, bean sprouts, large eggs, unsalted peanuts, cilantro, red pepper flakes, sesame seeds]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Chicken-Pad-Thai-2213155'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.3333333333333333',bitter = '0.6666666666666666',piquant = '0.3333333333333333'}',sourceDisplayName = 'From Jessica's Kitchen',smallImageUrls = '[http://lh5.ggpht.com/tG9DQTsQN-Q7Vgy7mt0QAEDGtpy5xIjucpNpemEpZ4FwhrhvlN-7PoNF3-ZYRBtRzXCvv8VtuxjP2py7o9PhTrY=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh5.ggpht.com/2okQfHyuVIWk5uokYUkxoKUcQGvWkoY0QMbDClsnhfFj8I125HhW-zO7TFmsSusOiqRbFJoZ8cR6hpwxJM8v1jM=s90-c'}',ingredients = '[fresh lime juice, sugar, fish sauce, chili sauce, tamarind paste, brown sugar, chicken stock, red pepper flakes, kosher salt, vegetable oil, garlic cloves, shallots, chicken, shrimp, eggs, bean sprouts, fresh cilantro, roasted peanuts, scallions, rice noodles]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-972593'}, MatchesItem{recipeName = 'Quick Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'Food & Wine',smallImageUrls = '[http://lh3.googleusercontent.com/WFJa5dApcA64f4YS5W7w-Q38pzXL8e5f1f7QNKLW9NrokqF4z5_T0k8Q01eOgECYojSj5ritfz49OYQMr3_CxS4=s90]',totalTimeInSeconds = '1800',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/18irSqmW3lj0CrrGnEUn9FaiyuzU5CLxMAYeRU-U43knhaaXzDW6hOvw_FK0uEWkZB8VrESVnd6J6WMEI1wBnow=s90-c'}',ingredients = '[thai noodles, asian fish sauce, light brown sugar, fresh lime juice, Thai bird chiles, canola oil, shallots, large garlic cloves, medium shrimp, large eggs, scallions, roasted peanuts, bean sprouts, chopped cilantro]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Quick-Shrimp-Pad-Thai-1095426'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.8333333333333334',sweet = '0.5',sour = '0.3333333333333333',bitter = '0.8333333333333334',piquant = '0.6666666666666666'}',sourceDisplayName = 'MyRecipes',smallImageUrls = '[http://lh3.googleusercontent.com/X3vmGqU0FQfHiWa-RXC2H8_j5eP7YlaMaekrKHYuyqNt8PUJyTY-OKGQemj7y-q4DoGLL9krhmfCwwpE2_VHsw=s90]',totalTimeInSeconds = '1500',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/PEwp_Rt5ikN1kriUXm34UMwVMINSK3L9GEecCkGX900bH6FIQYMH9ex7FlqAADz_qZmpZHe4mG_xFyrxs0S_=s90-c'}',ingredients = '[rice noodles, dark brown sugar, lower sodium soy sauce, fish sauce, fresh lime juice, Sriracha, canola oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh basil]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-1085805'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.5',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.16666666666666666',bitter = '0.8333333333333334',piquant = '0.16666666666666666'}',sourceDisplayName = 'Williams-Sonoma',smallImageUrls = '[http://lh4.ggpht.com/cNeTmf82YRoFFXbJ7kpBIZAZ1tOKGtMau_kEzLZcHuCsoeEL7GcoPhPVoTDKpnmpJL5X_bxPoKZm9lU_ltaS=s90]',totalTimeInSeconds = '600',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh4.ggpht.com/bnrxERK9dvDKbsEb7PabRSFC-n2VXlWXj3_2GLtjtVmmAhZoFikVq7CtggANrTwYz_LdidpSFCcdC6cWKdUS_g=s90-c'}',ingredients = '[rice noodles, asian fish sauce, fresh lime juice, sugar, canola oil, medium shrimp, garlic cloves, red pepper flakes, eggs, bean sprouts, unsalted roasted peanuts, sliced green onions, chopped fresh cilantro, chopped fresh mint]',attributes = 'Attributes{course = 'null',holiday = 'null',cuisine = '[Asian, Thai]'}',id = 'Pad-Thai-641068'}]
[INFO ] 2019-05-05 12:45:42.451 [main] YummlyDataGrabber - $$$$$$$$$$ Attribution: Attribution{logo = 'https://static.yummly.co/api-logo.png',html = 'Recipe search powered by <a href='http://www.yummly.co/recipes'><img alt='Yummly' src='https://static.yummly.co/api-logo.png'/></a>',text = 'Recipe search powered by Yummly',url = 'http://www.yummly.co/recipes/'}
[INFO ] 2019-05-05 12:45:42.452 [main] YummlyDataGrabber - $$$$$$$$$$ Facet Counts: FacetCounts{}
[INFO ] 2019-05-05 12:45:42.453 [main] YummlyDataGrabber - $$$$$$$$$$ Total Match Count: 1361
[INFO ] 2019-05-05 12:45:42.453 [main] YummlyDataGrabber - $$$$$$$$$$ Allowed Ingredients: null
[INFO ] 2019-05-05 12:45:42.453 [main] YummlyDataGrabber - $$$$$$$$$$ Excluded Ingredients: null
[INFO ] 2019-05-05 12:45:42.454 [main] YummlyDataGrabber - $$$$$$$$$$ Q: null
[INFO ] 2019-05-05 12:45:42.454 [main] TestYummlyApi - Found Criteria from Q: Classic Pad Thai
[INFO ] 2019-05-05 12:46:31.233 [http-nio-8080-exec-3] GenericDao - **********Query Using Last Name:  hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:46:35.724 [http-nio-8080-exec-3] GenericDao - **********Query by Last Name Found: [User{userId = '8', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'AdminMan'}]
[INFO ] 2019-05-05 12:46:35.724 [http-nio-8080-exec-3] GenericDao - **********Querying grocery list by user id: 8
[INFO ] 2019-05-05 12:46:35.785 [http-nio-8080-exec-3] GenericDao - *********Query found grocery lists by ID: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 12:46:35.785 [http-nio-8080-exec-3] SearchGrocerylist - Grocery List Object Results from Search by Last Name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 12:46:35.786 [http-nio-8080-exec-3] SearchGrocerylist - ********** User Information: GenericPrincipal[Tester1(AdminMan,)]
[INFO ] 2019-05-05 12:48:06.062 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-05 12:48:06.072 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-05 12:48:06.073 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-05 12:48:09.093 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 12:48:09.238 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-05 12:48:09.239 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-05 12:48:09.239 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-05 12:48:09.320 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 12:48:09.322 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 12:48:09.416 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:48:09.417 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-05 12:48:09.417 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 12:48:09.458 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:48:09.458 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:48:09.458 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 12:48:09.479 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:48:09.479 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:48:09.501 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:48:09.537 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 12:48:09.542 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-05 12:48:09.597 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:48:09.598 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-05 12:48:09.599 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 12:48:09.624 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:48:09.675 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:48:09.676 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-05 12:48:09.677 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:48:09.694 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 12:48:09.695 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:48:09.706 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 12:48:09.706 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 12:48:09.706 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:48:09.718 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 12:48:09.718 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T12:48:09.677, ingredients = []}
[INFO ] 2019-05-05 12:48:09.755 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 440, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T12:48:09.677, ingredients = []}
[INFO ] 2019-05-05 12:48:09.757 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 440, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T12:48:09.677, ingredients = []}
[INFO ] 2019-05-05 12:48:09.809 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:48:09.809 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-05 12:48:09.809 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:48:09.837 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-05 12:48:09.838 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-05 12:48:09.865 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 12:48:09.866 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 12:48:09.914 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:48:09.914 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-05 12:48:09.933 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 12:48:09.975 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:48:09.976 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-05 12:48:09.976 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 12:48:10.031 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 12:48:10.071 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 12:48:10.072 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-05 12:48:10.072 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:48:10.087 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 12:48:10.088 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T12:48:10.072, ingredients = []}
[INFO ] 2019-05-05 12:48:10.088 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T12:48:10.072, ingredients = []}
[INFO ] 2019-05-05 12:48:10.104 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 441, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T12:48:10.072, ingredients = []}
[INFO ] 2019-05-05 12:48:10.106 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-05 12:48:10.107 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-05 12:48:10.133 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 441, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T12:48:10, ingredients = []}]
[INFO ] 2019-05-05 12:48:10.134 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-05 12:48:10.134 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-05 12:48:10.155 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 12:48:10.156 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:48:10.184 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 12:48:10.278 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:48:10.278 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-05 12:48:10.278 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:48:10.285 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 12:48:10.285 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 12:48:10.293 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 12:48:10.300 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:48:10.306 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-05 12:48:10.387 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:48:10.388 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-05 12:48:10.388 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:48:10.414 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-05 12:48:10.495 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:48:10.495 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-05 12:48:10.495 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:48:10.603 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-05 12:48:10.652 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:48:10.652 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-05 12:48:10.653 [main] UserTest - -------Locale date time: 2019-05-05T12:48:10.653----------
[INFO ] 2019-05-05 12:48:10.653 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 12:48:10.666 [main] GenericDao - **********Entity inserted: User{userId = '488', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 12:48:10.666 [main] GenericDao - **********Query database by using an ID: 488, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:48:10.677 [main] GenericDao - **********Query by ID Found: User{userId = '488', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 12:48:10.722 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:48:10.723 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-05 12:48:10.723 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 12:48:10.732 [main] GenericDao - **********Saved|Updated entity: User{userId = '489', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 12:48:10.733 [main] GenericDao - **********Query database by using an ID: 489, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:48:10.738 [main] GenericDao - **********Query by ID Found: User{userId = '489', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 12:48:10.738 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:48:10.752 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-05 12:48:10.753 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-05 12:48:10.753 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 12:48:10.765 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 12:48:10.765 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:48:10.776 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 12:48:10.821 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:48:10.822 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-05 12:48:10.822 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:48:10.839 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-05 12:48:10.839 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:48:10.867 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-05 12:48:10.912 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 12:48:10.913 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-05 12:48:10.913 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 12:48:10.923 [main] GenericDao - **********Entity inserted: User{userId = '490', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 12:48:10.923 [main] GenericDao - **********Query database by using an ID: 490, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:48:10.929 [main] GenericDao - **********Query by ID Found: User{userId = '490', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 12:48:12.446 [main] YummlyDataGrabber - $$$$$$$$$$ Criteria Request returned Object: Criteria{facetCounts = 'FacetCounts{}',criteria = 'Criteria{facetCounts = 'null',criteria = 'null',attribution = 'null',matches = 'null',totalMatchCount = '0',q = 'Pad Thai',allowedIngredient = 'null',excludedIngredient = 'null'}',attribution = 'Attribution{logo = 'https://static.yummly.co/api-logo.png',html = 'Recipe search powered by <a href='http://www.yummly.co/recipes'><img alt='Yummly' src='https://static.yummly.co/api-logo.png'/></a>',text = 'Recipe search powered by Yummly',url = 'http://www.yummly.co/recipes/'}',matches = '[MatchesItem{recipeName = 'Classic Pad Thai',flavors = 'null',sourceDisplayName = 'Taste',smallImageUrls = '[https://lh3.googleusercontent.com/n6-iEQ-eB_tZ2xZ_9MQ7VrviKyNUG22WwXOrQ4sCnoc3k_R3ROGhVruW2nf74SqKiqTYVpIHj4WEVPROsUEBnH0=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9YxdRCk-f2qJ6aVEuyFIfBOyK2ae_qMABx-WAboDFPkt-V_4rk3OCW6zqbBGDlq8XkPBo7v7m_FMoqhaRBHLM0=s90-c'}',ingredients = '[minced garlic, thai chiles, palm sugar, tamarind paste, asian fish sauce, fresh lime juice, pad thai noodles, canola oil, large shrimp, red pepper flakes, eggs, extra firm tofu, carrots, bean sprouts, green onions, cilantro leaves, roasted peanuts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Classic-Pad-Thai-2151767'}, MatchesItem{recipeName = 'Shrimp Pad-Thai',flavors = 'null',sourceDisplayName = 'simple.artistic.cooking',smallImageUrls = '[https://lh3.googleusercontent.com/THkysjs-7NkPHvVlAHnMQ8QJbB83_v7glyf_LjGs6buHIusQixQ5OzzNrfiTxVUxuqbHXn4MHZ6gXJ4FN3u7qBU=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/F-3Ds9UUGjz6puJq4xVBr4ISkYWN2gxjRQHpwph7YLG54JSL13A0cJVVsErotaNDg8JPdubKEE0iv1-kTiSt=s90-c'}',ingredients = '[rice noodles, low sodium soy sauce, fish sauce, fresh lime juice, dark brown sugar, Sriracha, crushed red pepper flakes, peanut oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh cilantro, limes, ginger, unsalted peanuts]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-2694178'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'A Day In The Kitchen',smallImageUrls = '[https://lh3.googleusercontent.com/GlwJwX-yAdImsrz97yzYyRAGSlPAXKIk8Bj7itYPzjLUDvmoXnBBF58avmrlL1DlnHTsB_HgQfiAndOT_cmr5mI=s90]',totalTimeInSeconds = '3600',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9o1lAlM-DruGaSqqvBMNbEwDQjkKAaT88P84Z86YQaEicB206-ria1E6xnNUeq3kOgjWmvs5kgIlh-jEUOQ=s90-c'}',ingredients = '[pad thai noodles, deveined shrimp, eggs, small carrot, green onion, garlic cloves, light olive oil, water, tamarind paste, oyster sauce, coconut sugar, fish sauce, soy sauce, bean sprouts, chopped peanuts, dried chili flakes, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Shrimp-Pad-Thai-2511725'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'null',sourceDisplayName = 'Bookcooker',smallImageUrls = '[https://lh3.googleusercontent.com/oRA3RBaVweVu-mbgLigmJBT1a5dK8mZGJgWBijAIz5kSfGy5ctOulTP3iF7HCJR3d3rnK2h2H0BEztVoGAjb3j4=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/GHOVr9l6K3s3_MIlQRGmGjE1cLy-Xnvlj94n3-RF7JdYXM-hWfFXtAJqPIkfxHTZAAbiVjeA-F57kRpXHJ7-ww=s90-c'}',ingredients = '[pad thai noodles, raw sugar, tamarind paste, fish sauce, rice vinegar, minced ginger, minced garlic, shallot, lemongrass, peanut oil, large eggs, cooked shrimp, extra firm tofu, scallions, peanuts, bean sprouts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1753549'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.3333333333333333',sweet = '0.16666666666666666',sour = '0.3333333333333333',bitter = '0.16666666666666666',piquant = '0.6666666666666666'}',sourceDisplayName = 'The Hungry Mouse',smallImageUrls = '[https://lh3.googleusercontent.com/kjWQ0yDHnfexuAGuUUb3pkrELmSDKiox3NVVVcf2qUNac9z4GdWsXu30RQomuRLuDXWUoNAJkDA-oyXOGyeT=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/taNW2mFGX9SDg4tgPbUjD5VyOulKfgmBf07EgFKYxXy1wdJXSrvZbGIKA0dYfKhKEgid5NprMS5vrv9GlwfnfA=s90-c'}',ingredients = '[rice noodles, boiling water, vegetable oil, cilantro, red chile, large shrimp, shallots, large eggs, sugar, oyster sauce, Thai fish sauce, fresh lime juice, bean sprouts, scallions, unsalted roasted peanuts, lime]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1764933'}, MatchesItem{recipeName = 'Chicken Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.8333333333333334',bitter = '0.6666666666666666',piquant = '0.5'}',sourceDisplayName = 'Cooking Classy',smallImageUrls = '[https://lh3.googleusercontent.com/wxHAOLhlPjO1Vm0nUPYfLdhlSY9fy-_LiJheciGzbVSmFY3TwK0vUD6Squ3EbFslSyzfJm_LxV8yO2mg8GoZ=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/e2DuGFKLDaj_lzdDoTUQSHq-9KeUFtlsv7-W2meNBkzn42n308SAqVC1W1BEMw_zFkAg_K1SIvAg-EFcEbcREA=s90-c'}',ingredients = '[rice noodles, boneless, skinless chicken breasts, vegetable oil, dark brown sugar, soy sauce, rice vinegar, lime juice, fish sauce, red bell pepper, matchstick carrots, garlic, green onions, bean sprouts, large eggs, unsalted peanuts, cilantro, red pepper flakes, sesame seeds]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Chicken-Pad-Thai-2213155'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.3333333333333333',bitter = '0.6666666666666666',piquant = '0.3333333333333333'}',sourceDisplayName = 'From Jessica's Kitchen',smallImageUrls = '[http://lh5.ggpht.com/tG9DQTsQN-Q7Vgy7mt0QAEDGtpy5xIjucpNpemEpZ4FwhrhvlN-7PoNF3-ZYRBtRzXCvv8VtuxjP2py7o9PhTrY=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh5.ggpht.com/2okQfHyuVIWk5uokYUkxoKUcQGvWkoY0QMbDClsnhfFj8I125HhW-zO7TFmsSusOiqRbFJoZ8cR6hpwxJM8v1jM=s90-c'}',ingredients = '[fresh lime juice, sugar, fish sauce, chili sauce, tamarind paste, brown sugar, chicken stock, red pepper flakes, kosher salt, vegetable oil, garlic cloves, shallots, chicken, shrimp, eggs, bean sprouts, fresh cilantro, roasted peanuts, scallions, rice noodles]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-972593'}, MatchesItem{recipeName = 'Quick Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'Food & Wine',smallImageUrls = '[http://lh3.googleusercontent.com/WFJa5dApcA64f4YS5W7w-Q38pzXL8e5f1f7QNKLW9NrokqF4z5_T0k8Q01eOgECYojSj5ritfz49OYQMr3_CxS4=s90]',totalTimeInSeconds = '1800',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/18irSqmW3lj0CrrGnEUn9FaiyuzU5CLxMAYeRU-U43knhaaXzDW6hOvw_FK0uEWkZB8VrESVnd6J6WMEI1wBnow=s90-c'}',ingredients = '[thai noodles, asian fish sauce, light brown sugar, fresh lime juice, Thai bird chiles, canola oil, shallots, large garlic cloves, medium shrimp, large eggs, scallions, roasted peanuts, bean sprouts, chopped cilantro]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Quick-Shrimp-Pad-Thai-1095426'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.8333333333333334',sweet = '0.5',sour = '0.3333333333333333',bitter = '0.8333333333333334',piquant = '0.6666666666666666'}',sourceDisplayName = 'MyRecipes',smallImageUrls = '[http://lh3.googleusercontent.com/X3vmGqU0FQfHiWa-RXC2H8_j5eP7YlaMaekrKHYuyqNt8PUJyTY-OKGQemj7y-q4DoGLL9krhmfCwwpE2_VHsw=s90]',totalTimeInSeconds = '1500',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/PEwp_Rt5ikN1kriUXm34UMwVMINSK3L9GEecCkGX900bH6FIQYMH9ex7FlqAADz_qZmpZHe4mG_xFyrxs0S_=s90-c'}',ingredients = '[rice noodles, dark brown sugar, lower sodium soy sauce, fish sauce, fresh lime juice, Sriracha, canola oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh basil]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-1085805'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.5',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.16666666666666666',bitter = '0.8333333333333334',piquant = '0.16666666666666666'}',sourceDisplayName = 'Williams-Sonoma',smallImageUrls = '[http://lh4.ggpht.com/cNeTmf82YRoFFXbJ7kpBIZAZ1tOKGtMau_kEzLZcHuCsoeEL7GcoPhPVoTDKpnmpJL5X_bxPoKZm9lU_ltaS=s90]',totalTimeInSeconds = '600',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh4.ggpht.com/bnrxERK9dvDKbsEb7PabRSFC-n2VXlWXj3_2GLtjtVmmAhZoFikVq7CtggANrTwYz_LdidpSFCcdC6cWKdUS_g=s90-c'}',ingredients = '[rice noodles, asian fish sauce, fresh lime juice, sugar, canola oil, medium shrimp, garlic cloves, red pepper flakes, eggs, bean sprouts, unsalted roasted peanuts, sliced green onions, chopped fresh cilantro, chopped fresh mint]',attributes = 'Attributes{course = 'null',holiday = 'null',cuisine = '[Asian, Thai]'}',id = 'Pad-Thai-641068'}]',totalMatchCount = '1361',q = 'null',allowedIngredient = 'null',excludedIngredient = 'null'}
[INFO ] 2019-05-05 12:48:12.447 [main] YummlyDataGrabber - $$$$$$$$$$ Ingredients: minced garlic
[INFO ] 2019-05-05 12:48:12.451 [main] YummlyDataGrabber - $$$$$$$$$$ Matches: [MatchesItem{recipeName = 'Classic Pad Thai',flavors = 'null',sourceDisplayName = 'Taste',smallImageUrls = '[https://lh3.googleusercontent.com/n6-iEQ-eB_tZ2xZ_9MQ7VrviKyNUG22WwXOrQ4sCnoc3k_R3ROGhVruW2nf74SqKiqTYVpIHj4WEVPROsUEBnH0=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9YxdRCk-f2qJ6aVEuyFIfBOyK2ae_qMABx-WAboDFPkt-V_4rk3OCW6zqbBGDlq8XkPBo7v7m_FMoqhaRBHLM0=s90-c'}',ingredients = '[minced garlic, thai chiles, palm sugar, tamarind paste, asian fish sauce, fresh lime juice, pad thai noodles, canola oil, large shrimp, red pepper flakes, eggs, extra firm tofu, carrots, bean sprouts, green onions, cilantro leaves, roasted peanuts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Classic-Pad-Thai-2151767'}, MatchesItem{recipeName = 'Shrimp Pad-Thai',flavors = 'null',sourceDisplayName = 'simple.artistic.cooking',smallImageUrls = '[https://lh3.googleusercontent.com/THkysjs-7NkPHvVlAHnMQ8QJbB83_v7glyf_LjGs6buHIusQixQ5OzzNrfiTxVUxuqbHXn4MHZ6gXJ4FN3u7qBU=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/F-3Ds9UUGjz6puJq4xVBr4ISkYWN2gxjRQHpwph7YLG54JSL13A0cJVVsErotaNDg8JPdubKEE0iv1-kTiSt=s90-c'}',ingredients = '[rice noodles, low sodium soy sauce, fish sauce, fresh lime juice, dark brown sugar, Sriracha, crushed red pepper flakes, peanut oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh cilantro, limes, ginger, unsalted peanuts]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-2694178'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'A Day In The Kitchen',smallImageUrls = '[https://lh3.googleusercontent.com/GlwJwX-yAdImsrz97yzYyRAGSlPAXKIk8Bj7itYPzjLUDvmoXnBBF58avmrlL1DlnHTsB_HgQfiAndOT_cmr5mI=s90]',totalTimeInSeconds = '3600',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9o1lAlM-DruGaSqqvBMNbEwDQjkKAaT88P84Z86YQaEicB206-ria1E6xnNUeq3kOgjWmvs5kgIlh-jEUOQ=s90-c'}',ingredients = '[pad thai noodles, deveined shrimp, eggs, small carrot, green onion, garlic cloves, light olive oil, water, tamarind paste, oyster sauce, coconut sugar, fish sauce, soy sauce, bean sprouts, chopped peanuts, dried chili flakes, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Shrimp-Pad-Thai-2511725'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'null',sourceDisplayName = 'Bookcooker',smallImageUrls = '[https://lh3.googleusercontent.com/oRA3RBaVweVu-mbgLigmJBT1a5dK8mZGJgWBijAIz5kSfGy5ctOulTP3iF7HCJR3d3rnK2h2H0BEztVoGAjb3j4=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/GHOVr9l6K3s3_MIlQRGmGjE1cLy-Xnvlj94n3-RF7JdYXM-hWfFXtAJqPIkfxHTZAAbiVjeA-F57kRpXHJ7-ww=s90-c'}',ingredients = '[pad thai noodles, raw sugar, tamarind paste, fish sauce, rice vinegar, minced ginger, minced garlic, shallot, lemongrass, peanut oil, large eggs, cooked shrimp, extra firm tofu, scallions, peanuts, bean sprouts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1753549'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.3333333333333333',sweet = '0.16666666666666666',sour = '0.3333333333333333',bitter = '0.16666666666666666',piquant = '0.6666666666666666'}',sourceDisplayName = 'The Hungry Mouse',smallImageUrls = '[https://lh3.googleusercontent.com/kjWQ0yDHnfexuAGuUUb3pkrELmSDKiox3NVVVcf2qUNac9z4GdWsXu30RQomuRLuDXWUoNAJkDA-oyXOGyeT=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/taNW2mFGX9SDg4tgPbUjD5VyOulKfgmBf07EgFKYxXy1wdJXSrvZbGIKA0dYfKhKEgid5NprMS5vrv9GlwfnfA=s90-c'}',ingredients = '[rice noodles, boiling water, vegetable oil, cilantro, red chile, large shrimp, shallots, large eggs, sugar, oyster sauce, Thai fish sauce, fresh lime juice, bean sprouts, scallions, unsalted roasted peanuts, lime]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1764933'}, MatchesItem{recipeName = 'Chicken Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.8333333333333334',bitter = '0.6666666666666666',piquant = '0.5'}',sourceDisplayName = 'Cooking Classy',smallImageUrls = '[https://lh3.googleusercontent.com/wxHAOLhlPjO1Vm0nUPYfLdhlSY9fy-_LiJheciGzbVSmFY3TwK0vUD6Squ3EbFslSyzfJm_LxV8yO2mg8GoZ=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/e2DuGFKLDaj_lzdDoTUQSHq-9KeUFtlsv7-W2meNBkzn42n308SAqVC1W1BEMw_zFkAg_K1SIvAg-EFcEbcREA=s90-c'}',ingredients = '[rice noodles, boneless, skinless chicken breasts, vegetable oil, dark brown sugar, soy sauce, rice vinegar, lime juice, fish sauce, red bell pepper, matchstick carrots, garlic, green onions, bean sprouts, large eggs, unsalted peanuts, cilantro, red pepper flakes, sesame seeds]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Chicken-Pad-Thai-2213155'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.3333333333333333',bitter = '0.6666666666666666',piquant = '0.3333333333333333'}',sourceDisplayName = 'From Jessica's Kitchen',smallImageUrls = '[http://lh5.ggpht.com/tG9DQTsQN-Q7Vgy7mt0QAEDGtpy5xIjucpNpemEpZ4FwhrhvlN-7PoNF3-ZYRBtRzXCvv8VtuxjP2py7o9PhTrY=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh5.ggpht.com/2okQfHyuVIWk5uokYUkxoKUcQGvWkoY0QMbDClsnhfFj8I125HhW-zO7TFmsSusOiqRbFJoZ8cR6hpwxJM8v1jM=s90-c'}',ingredients = '[fresh lime juice, sugar, fish sauce, chili sauce, tamarind paste, brown sugar, chicken stock, red pepper flakes, kosher salt, vegetable oil, garlic cloves, shallots, chicken, shrimp, eggs, bean sprouts, fresh cilantro, roasted peanuts, scallions, rice noodles]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-972593'}, MatchesItem{recipeName = 'Quick Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'Food & Wine',smallImageUrls = '[http://lh3.googleusercontent.com/WFJa5dApcA64f4YS5W7w-Q38pzXL8e5f1f7QNKLW9NrokqF4z5_T0k8Q01eOgECYojSj5ritfz49OYQMr3_CxS4=s90]',totalTimeInSeconds = '1800',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/18irSqmW3lj0CrrGnEUn9FaiyuzU5CLxMAYeRU-U43knhaaXzDW6hOvw_FK0uEWkZB8VrESVnd6J6WMEI1wBnow=s90-c'}',ingredients = '[thai noodles, asian fish sauce, light brown sugar, fresh lime juice, Thai bird chiles, canola oil, shallots, large garlic cloves, medium shrimp, large eggs, scallions, roasted peanuts, bean sprouts, chopped cilantro]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Quick-Shrimp-Pad-Thai-1095426'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.8333333333333334',sweet = '0.5',sour = '0.3333333333333333',bitter = '0.8333333333333334',piquant = '0.6666666666666666'}',sourceDisplayName = 'MyRecipes',smallImageUrls = '[http://lh3.googleusercontent.com/X3vmGqU0FQfHiWa-RXC2H8_j5eP7YlaMaekrKHYuyqNt8PUJyTY-OKGQemj7y-q4DoGLL9krhmfCwwpE2_VHsw=s90]',totalTimeInSeconds = '1500',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/PEwp_Rt5ikN1kriUXm34UMwVMINSK3L9GEecCkGX900bH6FIQYMH9ex7FlqAADz_qZmpZHe4mG_xFyrxs0S_=s90-c'}',ingredients = '[rice noodles, dark brown sugar, lower sodium soy sauce, fish sauce, fresh lime juice, Sriracha, canola oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh basil]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-1085805'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.5',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.16666666666666666',bitter = '0.8333333333333334',piquant = '0.16666666666666666'}',sourceDisplayName = 'Williams-Sonoma',smallImageUrls = '[http://lh4.ggpht.com/cNeTmf82YRoFFXbJ7kpBIZAZ1tOKGtMau_kEzLZcHuCsoeEL7GcoPhPVoTDKpnmpJL5X_bxPoKZm9lU_ltaS=s90]',totalTimeInSeconds = '600',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh4.ggpht.com/bnrxERK9dvDKbsEb7PabRSFC-n2VXlWXj3_2GLtjtVmmAhZoFikVq7CtggANrTwYz_LdidpSFCcdC6cWKdUS_g=s90-c'}',ingredients = '[rice noodles, asian fish sauce, fresh lime juice, sugar, canola oil, medium shrimp, garlic cloves, red pepper flakes, eggs, bean sprouts, unsalted roasted peanuts, sliced green onions, chopped fresh cilantro, chopped fresh mint]',attributes = 'Attributes{course = 'null',holiday = 'null',cuisine = '[Asian, Thai]'}',id = 'Pad-Thai-641068'}]
[INFO ] 2019-05-05 12:48:12.452 [main] YummlyDataGrabber - $$$$$$$$$$ Attribution: Attribution{logo = 'https://static.yummly.co/api-logo.png',html = 'Recipe search powered by <a href='http://www.yummly.co/recipes'><img alt='Yummly' src='https://static.yummly.co/api-logo.png'/></a>',text = 'Recipe search powered by Yummly',url = 'http://www.yummly.co/recipes/'}
[INFO ] 2019-05-05 12:48:12.453 [main] YummlyDataGrabber - $$$$$$$$$$ Facet Counts: FacetCounts{}
[INFO ] 2019-05-05 12:48:12.453 [main] YummlyDataGrabber - $$$$$$$$$$ Total Match Count: 1361
[INFO ] 2019-05-05 12:48:12.453 [main] YummlyDataGrabber - $$$$$$$$$$ Allowed Ingredients: null
[INFO ] 2019-05-05 12:48:12.453 [main] YummlyDataGrabber - $$$$$$$$$$ Excluded Ingredients: null
[INFO ] 2019-05-05 12:48:12.453 [main] YummlyDataGrabber - $$$$$$$$$$ Q: null
[INFO ] 2019-05-05 12:48:12.454 [main] TestYummlyApi - Found Criteria from Q: Classic Pad Thai
[INFO ] 2019-05-05 12:49:01.502 [http-nio-8080-exec-2] GenericDao - **********Query Using Last Name:  hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 12:49:07.006 [http-nio-8080-exec-2] GenericDao - **********Query by Last Name Found: [User{userId = '8', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'AdminMan'}]
[INFO ] 2019-05-05 12:49:07.006 [http-nio-8080-exec-2] GenericDao - **********Querying grocery list by user id: 8
[INFO ] 2019-05-05 12:49:07.064 [http-nio-8080-exec-2] GenericDao - *********Query found grocery lists by ID: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 12:49:07.065 [http-nio-8080-exec-2] SearchGrocerylist - Grocery List Object Results from Search by Last Name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 12:49:07.065 [http-nio-8080-exec-2] SearchGrocerylist - ********** User Information: GenericPrincipal[Tester1(AdminMan,)]
[INFO ] 2019-05-05 12:49:07.065 [http-nio-8080-exec-2] SearchGrocerylist - ********** Remote User: Tester1
[INFO ] 2019-05-05 13:03:04.847 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-05 13:03:04.859 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-05 13:03:04.859 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-05 13:03:07.732 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 13:03:07.824 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-05 13:03:07.825 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-05 13:03:07.826 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-05 13:03:07.896 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 13:03:07.896 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 13:03:07.983 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:03:07.983 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-05 13:03:07.984 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 13:03:08.028 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:03:08.028 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:03:08.029 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 13:03:08.044 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:03:08.044 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:03:08.062 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:03:08.105 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 13:03:08.111 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-05 13:03:08.164 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:03:08.165 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-05 13:03:08.165 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 13:03:08.191 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:03:08.246 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:03:08.246 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-05 13:03:08.247 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:03:08.260 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 13:03:08.260 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:03:08.271 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 13:03:08.272 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 13:03:08.272 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:03:08.285 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 13:03:08.285 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T13:03:08.247, ingredients = []}
[INFO ] 2019-05-05 13:03:08.305 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 443, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T13:03:08.247, ingredients = []}
[INFO ] 2019-05-05 13:03:08.306 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 443, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T13:03:08.247, ingredients = []}
[INFO ] 2019-05-05 13:03:08.361 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:03:08.361 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-05 13:03:08.362 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:03:08.390 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-05 13:03:08.391 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-05 13:03:08.426 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 13:03:08.427 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 13:03:08.478 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:03:08.478 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-05 13:03:08.493 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 13:03:08.537 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:03:08.538 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-05 13:03:08.538 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 13:03:08.597 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 13:03:08.647 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:03:08.648 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-05 13:03:08.648 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:03:08.655 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 13:03:08.656 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T13:03:08.648, ingredients = []}
[INFO ] 2019-05-05 13:03:08.656 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T13:03:08.648, ingredients = []}
[INFO ] 2019-05-05 13:03:08.662 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 444, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T13:03:08.648, ingredients = []}
[INFO ] 2019-05-05 13:03:08.662 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-05 13:03:08.662 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-05 13:03:08.680 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 444, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T13:03:09, ingredients = []}]
[INFO ] 2019-05-05 13:03:08.680 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-05 13:03:08.680 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-05 13:03:08.702 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 13:03:08.702 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:03:08.716 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:03:08.771 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:03:08.771 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-05 13:03:08.772 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:03:08.778 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 13:03:08.778 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 13:03:08.779 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 13:03:08.784 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:03:08.788 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-05 13:03:08.845 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:03:08.846 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-05 13:03:08.846 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:03:08.854 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-05 13:03:08.955 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:03:08.956 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-05 13:03:08.956 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:03:09.042 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-05 13:03:09.089 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:03:09.089 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-05 13:03:09.090 [main] UserTest - -------Locale date time: 2019-05-05T13:03:09.089----------
[INFO ] 2019-05-05 13:03:09.090 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 13:03:09.099 [main] GenericDao - **********Entity inserted: User{userId = '491', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 13:03:09.099 [main] GenericDao - **********Query database by using an ID: 491, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:03:09.107 [main] GenericDao - **********Query by ID Found: User{userId = '491', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 13:03:09.150 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:03:09.151 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-05 13:03:09.151 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 13:03:09.159 [main] GenericDao - **********Saved|Updated entity: User{userId = '492', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 13:03:09.159 [main] GenericDao - **********Query database by using an ID: 492, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:03:09.179 [main] GenericDao - **********Query by ID Found: User{userId = '492', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 13:03:09.180 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:03:09.190 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-05 13:03:09.192 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-05 13:03:09.192 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 13:03:09.202 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 13:03:09.203 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:03:09.214 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 13:03:09.253 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:03:09.254 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-05 13:03:09.254 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:03:09.271 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-05 13:03:09.271 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:03:09.301 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-05 13:03:09.342 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:03:09.342 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-05 13:03:09.342 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 13:03:09.350 [main] GenericDao - **********Entity inserted: User{userId = '493', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 13:03:09.350 [main] GenericDao - **********Query database by using an ID: 493, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:03:09.355 [main] GenericDao - **********Query by ID Found: User{userId = '493', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 13:12:14.818 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-05 13:12:14.829 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-05 13:12:14.829 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-05 13:12:17.445 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 13:12:17.602 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-05 13:12:17.603 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-05 13:12:17.603 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-05 13:12:17.688 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 13:12:17.688 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 13:12:17.856 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:12:17.856 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-05 13:12:17.857 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 13:12:17.923 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:12:17.923 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:12:17.923 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 13:12:17.940 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:12:17.940 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:12:17.981 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:12:18.047 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 13:12:18.052 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-05 13:12:18.132 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:12:18.136 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-05 13:12:18.136 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 13:12:18.180 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:12:18.245 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:12:18.245 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-05 13:12:18.246 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:12:18.261 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 13:12:18.261 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:12:18.274 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 13:12:18.274 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 13:12:18.275 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:12:18.286 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 13:12:18.287 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T13:12:18.246, ingredients = []}
[INFO ] 2019-05-05 13:12:18.348 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 446, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T13:12:18.246, ingredients = []}
[INFO ] 2019-05-05 13:12:18.348 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 446, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T13:12:18.246, ingredients = []}
[INFO ] 2019-05-05 13:12:18.398 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:12:18.399 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-05 13:12:18.401 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:12:18.436 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-05 13:12:18.437 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-05 13:12:18.459 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 13:12:18.460 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 13:12:18.543 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:12:18.543 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-05 13:12:18.561 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 13:12:18.625 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:12:18.626 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-05 13:12:18.626 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 13:12:18.684 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 13:12:18.737 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:12:18.738 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-05 13:12:18.738 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:12:18.749 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 13:12:18.749 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T13:12:18.738, ingredients = []}
[INFO ] 2019-05-05 13:12:18.749 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T13:12:18.738, ingredients = []}
[INFO ] 2019-05-05 13:12:18.758 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 447, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T13:12:18.738, ingredients = []}
[INFO ] 2019-05-05 13:12:18.759 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-05 13:12:18.759 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-05 13:12:18.781 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 447, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T13:12:19, ingredients = []}]
[INFO ] 2019-05-05 13:12:18.782 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-05 13:12:18.782 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-05 13:12:18.800 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 13:12:18.800 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:12:18.809 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:12:18.900 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:12:18.901 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-05 13:12:18.901 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:12:18.910 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 13:12:18.910 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 13:12:18.912 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 13:12:18.920 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:12:18.925 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-05 13:12:18.980 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:12:18.981 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-05 13:12:18.981 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:12:18.994 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-05 13:12:19.035 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:12:19.035 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-05 13:12:19.036 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:12:19.156 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-05 13:12:19.203 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:12:19.203 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-05 13:12:19.203 [main] UserTest - -------Locale date time: 2019-05-05T13:12:19.203----------
[INFO ] 2019-05-05 13:12:19.204 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 13:12:19.219 [main] GenericDao - **********Entity inserted: User{userId = '494', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 13:12:19.224 [main] GenericDao - **********Query database by using an ID: 494, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:12:19.235 [main] GenericDao - **********Query by ID Found: User{userId = '494', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 13:12:19.279 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:12:19.279 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-05 13:12:19.279 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 13:12:19.285 [main] GenericDao - **********Saved|Updated entity: User{userId = '495', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 13:12:19.286 [main] GenericDao - **********Query database by using an ID: 495, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:12:19.291 [main] GenericDao - **********Query by ID Found: User{userId = '495', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 13:12:19.292 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:12:19.300 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-05 13:12:19.301 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-05 13:12:19.301 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 13:12:19.315 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 13:12:19.315 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:12:19.327 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 13:12:19.398 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:12:19.398 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-05 13:12:19.399 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:12:19.416 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-05 13:12:19.416 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:12:19.443 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-05 13:12:19.484 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:12:19.485 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-05 13:12:19.486 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 13:12:19.498 [main] GenericDao - **********Entity inserted: User{userId = '496', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 13:12:19.498 [main] GenericDao - **********Query database by using an ID: 496, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:12:19.503 [main] GenericDao - **********Query by ID Found: User{userId = '496', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 13:12:21.170 [main] YummlyDataGrabber - $$$$$$$$$$ Criteria Request returned Object: Criteria{facetCounts = 'FacetCounts{}',criteria = 'Criteria{facetCounts = 'null',criteria = 'null',attribution = 'null',matches = 'null',totalMatchCount = '0',q = 'Pad Thai',allowedIngredient = 'null',excludedIngredient = 'null'}',attribution = 'Attribution{logo = 'https://static.yummly.co/api-logo.png',html = 'Recipe search powered by <a href='http://www.yummly.co/recipes'><img alt='Yummly' src='https://static.yummly.co/api-logo.png'/></a>',text = 'Recipe search powered by Yummly',url = 'http://www.yummly.co/recipes/'}',matches = '[MatchesItem{recipeName = 'Classic Pad Thai',flavors = 'null',sourceDisplayName = 'Taste',smallImageUrls = '[https://lh3.googleusercontent.com/n6-iEQ-eB_tZ2xZ_9MQ7VrviKyNUG22WwXOrQ4sCnoc3k_R3ROGhVruW2nf74SqKiqTYVpIHj4WEVPROsUEBnH0=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9YxdRCk-f2qJ6aVEuyFIfBOyK2ae_qMABx-WAboDFPkt-V_4rk3OCW6zqbBGDlq8XkPBo7v7m_FMoqhaRBHLM0=s90-c'}',ingredients = '[minced garlic, thai chiles, palm sugar, tamarind paste, asian fish sauce, fresh lime juice, pad thai noodles, canola oil, large shrimp, red pepper flakes, eggs, extra firm tofu, carrots, bean sprouts, green onions, cilantro leaves, roasted peanuts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Classic-Pad-Thai-2151767'}, MatchesItem{recipeName = 'Shrimp Pad-Thai',flavors = 'null',sourceDisplayName = 'simple.artistic.cooking',smallImageUrls = '[https://lh3.googleusercontent.com/THkysjs-7NkPHvVlAHnMQ8QJbB83_v7glyf_LjGs6buHIusQixQ5OzzNrfiTxVUxuqbHXn4MHZ6gXJ4FN3u7qBU=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/F-3Ds9UUGjz6puJq4xVBr4ISkYWN2gxjRQHpwph7YLG54JSL13A0cJVVsErotaNDg8JPdubKEE0iv1-kTiSt=s90-c'}',ingredients = '[rice noodles, low sodium soy sauce, fish sauce, fresh lime juice, dark brown sugar, Sriracha, crushed red pepper flakes, peanut oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh cilantro, limes, ginger, unsalted peanuts]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-2694178'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'A Day In The Kitchen',smallImageUrls = '[https://lh3.googleusercontent.com/GlwJwX-yAdImsrz97yzYyRAGSlPAXKIk8Bj7itYPzjLUDvmoXnBBF58avmrlL1DlnHTsB_HgQfiAndOT_cmr5mI=s90]',totalTimeInSeconds = '3600',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9o1lAlM-DruGaSqqvBMNbEwDQjkKAaT88P84Z86YQaEicB206-ria1E6xnNUeq3kOgjWmvs5kgIlh-jEUOQ=s90-c'}',ingredients = '[pad thai noodles, deveined shrimp, eggs, small carrot, green onion, garlic cloves, light olive oil, water, tamarind paste, oyster sauce, coconut sugar, fish sauce, soy sauce, bean sprouts, chopped peanuts, dried chili flakes, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Shrimp-Pad-Thai-2511725'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'null',sourceDisplayName = 'Bookcooker',smallImageUrls = '[https://lh3.googleusercontent.com/oRA3RBaVweVu-mbgLigmJBT1a5dK8mZGJgWBijAIz5kSfGy5ctOulTP3iF7HCJR3d3rnK2h2H0BEztVoGAjb3j4=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/GHOVr9l6K3s3_MIlQRGmGjE1cLy-Xnvlj94n3-RF7JdYXM-hWfFXtAJqPIkfxHTZAAbiVjeA-F57kRpXHJ7-ww=s90-c'}',ingredients = '[pad thai noodles, raw sugar, tamarind paste, fish sauce, rice vinegar, minced ginger, minced garlic, shallot, lemongrass, peanut oil, large eggs, cooked shrimp, extra firm tofu, scallions, peanuts, bean sprouts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1753549'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.3333333333333333',sweet = '0.16666666666666666',sour = '0.3333333333333333',bitter = '0.16666666666666666',piquant = '0.6666666666666666'}',sourceDisplayName = 'The Hungry Mouse',smallImageUrls = '[https://lh3.googleusercontent.com/kjWQ0yDHnfexuAGuUUb3pkrELmSDKiox3NVVVcf2qUNac9z4GdWsXu30RQomuRLuDXWUoNAJkDA-oyXOGyeT=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/taNW2mFGX9SDg4tgPbUjD5VyOulKfgmBf07EgFKYxXy1wdJXSrvZbGIKA0dYfKhKEgid5NprMS5vrv9GlwfnfA=s90-c'}',ingredients = '[rice noodles, boiling water, vegetable oil, cilantro, red chile, large shrimp, shallots, large eggs, sugar, oyster sauce, Thai fish sauce, fresh lime juice, bean sprouts, scallions, unsalted roasted peanuts, lime]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1764933'}, MatchesItem{recipeName = 'Chicken Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.8333333333333334',bitter = '0.6666666666666666',piquant = '0.5'}',sourceDisplayName = 'Cooking Classy',smallImageUrls = '[https://lh3.googleusercontent.com/wxHAOLhlPjO1Vm0nUPYfLdhlSY9fy-_LiJheciGzbVSmFY3TwK0vUD6Squ3EbFslSyzfJm_LxV8yO2mg8GoZ=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/e2DuGFKLDaj_lzdDoTUQSHq-9KeUFtlsv7-W2meNBkzn42n308SAqVC1W1BEMw_zFkAg_K1SIvAg-EFcEbcREA=s90-c'}',ingredients = '[rice noodles, boneless, skinless chicken breasts, vegetable oil, dark brown sugar, soy sauce, rice vinegar, lime juice, fish sauce, red bell pepper, matchstick carrots, garlic, green onions, bean sprouts, large eggs, unsalted peanuts, cilantro, red pepper flakes, sesame seeds]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Chicken-Pad-Thai-2213155'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.3333333333333333',bitter = '0.6666666666666666',piquant = '0.3333333333333333'}',sourceDisplayName = 'From Jessica's Kitchen',smallImageUrls = '[http://lh5.ggpht.com/tG9DQTsQN-Q7Vgy7mt0QAEDGtpy5xIjucpNpemEpZ4FwhrhvlN-7PoNF3-ZYRBtRzXCvv8VtuxjP2py7o9PhTrY=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh5.ggpht.com/2okQfHyuVIWk5uokYUkxoKUcQGvWkoY0QMbDClsnhfFj8I125HhW-zO7TFmsSusOiqRbFJoZ8cR6hpwxJM8v1jM=s90-c'}',ingredients = '[fresh lime juice, sugar, fish sauce, chili sauce, tamarind paste, brown sugar, chicken stock, red pepper flakes, kosher salt, vegetable oil, garlic cloves, shallots, chicken, shrimp, eggs, bean sprouts, fresh cilantro, roasted peanuts, scallions, rice noodles]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-972593'}, MatchesItem{recipeName = 'Quick Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'Food & Wine',smallImageUrls = '[http://lh3.googleusercontent.com/WFJa5dApcA64f4YS5W7w-Q38pzXL8e5f1f7QNKLW9NrokqF4z5_T0k8Q01eOgECYojSj5ritfz49OYQMr3_CxS4=s90]',totalTimeInSeconds = '1800',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/18irSqmW3lj0CrrGnEUn9FaiyuzU5CLxMAYeRU-U43knhaaXzDW6hOvw_FK0uEWkZB8VrESVnd6J6WMEI1wBnow=s90-c'}',ingredients = '[thai noodles, asian fish sauce, light brown sugar, fresh lime juice, Thai bird chiles, canola oil, shallots, large garlic cloves, medium shrimp, large eggs, scallions, roasted peanuts, bean sprouts, chopped cilantro]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Quick-Shrimp-Pad-Thai-1095426'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.8333333333333334',sweet = '0.5',sour = '0.3333333333333333',bitter = '0.8333333333333334',piquant = '0.6666666666666666'}',sourceDisplayName = 'MyRecipes',smallImageUrls = '[http://lh3.googleusercontent.com/X3vmGqU0FQfHiWa-RXC2H8_j5eP7YlaMaekrKHYuyqNt8PUJyTY-OKGQemj7y-q4DoGLL9krhmfCwwpE2_VHsw=s90]',totalTimeInSeconds = '1500',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/PEwp_Rt5ikN1kriUXm34UMwVMINSK3L9GEecCkGX900bH6FIQYMH9ex7FlqAADz_qZmpZHe4mG_xFyrxs0S_=s90-c'}',ingredients = '[rice noodles, dark brown sugar, lower sodium soy sauce, fish sauce, fresh lime juice, Sriracha, canola oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh basil]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-1085805'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.5',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.16666666666666666',bitter = '0.8333333333333334',piquant = '0.16666666666666666'}',sourceDisplayName = 'Williams-Sonoma',smallImageUrls = '[http://lh4.ggpht.com/cNeTmf82YRoFFXbJ7kpBIZAZ1tOKGtMau_kEzLZcHuCsoeEL7GcoPhPVoTDKpnmpJL5X_bxPoKZm9lU_ltaS=s90]',totalTimeInSeconds = '600',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh4.ggpht.com/bnrxERK9dvDKbsEb7PabRSFC-n2VXlWXj3_2GLtjtVmmAhZoFikVq7CtggANrTwYz_LdidpSFCcdC6cWKdUS_g=s90-c'}',ingredients = '[rice noodles, asian fish sauce, fresh lime juice, sugar, canola oil, medium shrimp, garlic cloves, red pepper flakes, eggs, bean sprouts, unsalted roasted peanuts, sliced green onions, chopped fresh cilantro, chopped fresh mint]',attributes = 'Attributes{course = 'null',holiday = 'null',cuisine = '[Asian, Thai]'}',id = 'Pad-Thai-641068'}]',totalMatchCount = '1361',q = 'null',allowedIngredient = 'null',excludedIngredient = 'null'}
[INFO ] 2019-05-05 13:12:21.170 [main] YummlyDataGrabber - $$$$$$$$$$ Ingredients: minced garlic
[INFO ] 2019-05-05 13:12:21.171 [main] YummlyDataGrabber - $$$$$$$$$$ Matches: [MatchesItem{recipeName = 'Classic Pad Thai',flavors = 'null',sourceDisplayName = 'Taste',smallImageUrls = '[https://lh3.googleusercontent.com/n6-iEQ-eB_tZ2xZ_9MQ7VrviKyNUG22WwXOrQ4sCnoc3k_R3ROGhVruW2nf74SqKiqTYVpIHj4WEVPROsUEBnH0=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9YxdRCk-f2qJ6aVEuyFIfBOyK2ae_qMABx-WAboDFPkt-V_4rk3OCW6zqbBGDlq8XkPBo7v7m_FMoqhaRBHLM0=s90-c'}',ingredients = '[minced garlic, thai chiles, palm sugar, tamarind paste, asian fish sauce, fresh lime juice, pad thai noodles, canola oil, large shrimp, red pepper flakes, eggs, extra firm tofu, carrots, bean sprouts, green onions, cilantro leaves, roasted peanuts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Classic-Pad-Thai-2151767'}, MatchesItem{recipeName = 'Shrimp Pad-Thai',flavors = 'null',sourceDisplayName = 'simple.artistic.cooking',smallImageUrls = '[https://lh3.googleusercontent.com/THkysjs-7NkPHvVlAHnMQ8QJbB83_v7glyf_LjGs6buHIusQixQ5OzzNrfiTxVUxuqbHXn4MHZ6gXJ4FN3u7qBU=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/F-3Ds9UUGjz6puJq4xVBr4ISkYWN2gxjRQHpwph7YLG54JSL13A0cJVVsErotaNDg8JPdubKEE0iv1-kTiSt=s90-c'}',ingredients = '[rice noodles, low sodium soy sauce, fish sauce, fresh lime juice, dark brown sugar, Sriracha, crushed red pepper flakes, peanut oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh cilantro, limes, ginger, unsalted peanuts]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-2694178'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'A Day In The Kitchen',smallImageUrls = '[https://lh3.googleusercontent.com/GlwJwX-yAdImsrz97yzYyRAGSlPAXKIk8Bj7itYPzjLUDvmoXnBBF58avmrlL1DlnHTsB_HgQfiAndOT_cmr5mI=s90]',totalTimeInSeconds = '3600',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9o1lAlM-DruGaSqqvBMNbEwDQjkKAaT88P84Z86YQaEicB206-ria1E6xnNUeq3kOgjWmvs5kgIlh-jEUOQ=s90-c'}',ingredients = '[pad thai noodles, deveined shrimp, eggs, small carrot, green onion, garlic cloves, light olive oil, water, tamarind paste, oyster sauce, coconut sugar, fish sauce, soy sauce, bean sprouts, chopped peanuts, dried chili flakes, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Shrimp-Pad-Thai-2511725'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'null',sourceDisplayName = 'Bookcooker',smallImageUrls = '[https://lh3.googleusercontent.com/oRA3RBaVweVu-mbgLigmJBT1a5dK8mZGJgWBijAIz5kSfGy5ctOulTP3iF7HCJR3d3rnK2h2H0BEztVoGAjb3j4=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/GHOVr9l6K3s3_MIlQRGmGjE1cLy-Xnvlj94n3-RF7JdYXM-hWfFXtAJqPIkfxHTZAAbiVjeA-F57kRpXHJ7-ww=s90-c'}',ingredients = '[pad thai noodles, raw sugar, tamarind paste, fish sauce, rice vinegar, minced ginger, minced garlic, shallot, lemongrass, peanut oil, large eggs, cooked shrimp, extra firm tofu, scallions, peanuts, bean sprouts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1753549'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.3333333333333333',sweet = '0.16666666666666666',sour = '0.3333333333333333',bitter = '0.16666666666666666',piquant = '0.6666666666666666'}',sourceDisplayName = 'The Hungry Mouse',smallImageUrls = '[https://lh3.googleusercontent.com/kjWQ0yDHnfexuAGuUUb3pkrELmSDKiox3NVVVcf2qUNac9z4GdWsXu30RQomuRLuDXWUoNAJkDA-oyXOGyeT=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/taNW2mFGX9SDg4tgPbUjD5VyOulKfgmBf07EgFKYxXy1wdJXSrvZbGIKA0dYfKhKEgid5NprMS5vrv9GlwfnfA=s90-c'}',ingredients = '[rice noodles, boiling water, vegetable oil, cilantro, red chile, large shrimp, shallots, large eggs, sugar, oyster sauce, Thai fish sauce, fresh lime juice, bean sprouts, scallions, unsalted roasted peanuts, lime]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1764933'}, MatchesItem{recipeName = 'Chicken Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.8333333333333334',bitter = '0.6666666666666666',piquant = '0.5'}',sourceDisplayName = 'Cooking Classy',smallImageUrls = '[https://lh3.googleusercontent.com/wxHAOLhlPjO1Vm0nUPYfLdhlSY9fy-_LiJheciGzbVSmFY3TwK0vUD6Squ3EbFslSyzfJm_LxV8yO2mg8GoZ=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/e2DuGFKLDaj_lzdDoTUQSHq-9KeUFtlsv7-W2meNBkzn42n308SAqVC1W1BEMw_zFkAg_K1SIvAg-EFcEbcREA=s90-c'}',ingredients = '[rice noodles, boneless, skinless chicken breasts, vegetable oil, dark brown sugar, soy sauce, rice vinegar, lime juice, fish sauce, red bell pepper, matchstick carrots, garlic, green onions, bean sprouts, large eggs, unsalted peanuts, cilantro, red pepper flakes, sesame seeds]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Chicken-Pad-Thai-2213155'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.3333333333333333',bitter = '0.6666666666666666',piquant = '0.3333333333333333'}',sourceDisplayName = 'From Jessica's Kitchen',smallImageUrls = '[http://lh5.ggpht.com/tG9DQTsQN-Q7Vgy7mt0QAEDGtpy5xIjucpNpemEpZ4FwhrhvlN-7PoNF3-ZYRBtRzXCvv8VtuxjP2py7o9PhTrY=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh5.ggpht.com/2okQfHyuVIWk5uokYUkxoKUcQGvWkoY0QMbDClsnhfFj8I125HhW-zO7TFmsSusOiqRbFJoZ8cR6hpwxJM8v1jM=s90-c'}',ingredients = '[fresh lime juice, sugar, fish sauce, chili sauce, tamarind paste, brown sugar, chicken stock, red pepper flakes, kosher salt, vegetable oil, garlic cloves, shallots, chicken, shrimp, eggs, bean sprouts, fresh cilantro, roasted peanuts, scallions, rice noodles]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-972593'}, MatchesItem{recipeName = 'Quick Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'Food & Wine',smallImageUrls = '[http://lh3.googleusercontent.com/WFJa5dApcA64f4YS5W7w-Q38pzXL8e5f1f7QNKLW9NrokqF4z5_T0k8Q01eOgECYojSj5ritfz49OYQMr3_CxS4=s90]',totalTimeInSeconds = '1800',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/18irSqmW3lj0CrrGnEUn9FaiyuzU5CLxMAYeRU-U43knhaaXzDW6hOvw_FK0uEWkZB8VrESVnd6J6WMEI1wBnow=s90-c'}',ingredients = '[thai noodles, asian fish sauce, light brown sugar, fresh lime juice, Thai bird chiles, canola oil, shallots, large garlic cloves, medium shrimp, large eggs, scallions, roasted peanuts, bean sprouts, chopped cilantro]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Quick-Shrimp-Pad-Thai-1095426'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.8333333333333334',sweet = '0.5',sour = '0.3333333333333333',bitter = '0.8333333333333334',piquant = '0.6666666666666666'}',sourceDisplayName = 'MyRecipes',smallImageUrls = '[http://lh3.googleusercontent.com/X3vmGqU0FQfHiWa-RXC2H8_j5eP7YlaMaekrKHYuyqNt8PUJyTY-OKGQemj7y-q4DoGLL9krhmfCwwpE2_VHsw=s90]',totalTimeInSeconds = '1500',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/PEwp_Rt5ikN1kriUXm34UMwVMINSK3L9GEecCkGX900bH6FIQYMH9ex7FlqAADz_qZmpZHe4mG_xFyrxs0S_=s90-c'}',ingredients = '[rice noodles, dark brown sugar, lower sodium soy sauce, fish sauce, fresh lime juice, Sriracha, canola oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh basil]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-1085805'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.5',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.16666666666666666',bitter = '0.8333333333333334',piquant = '0.16666666666666666'}',sourceDisplayName = 'Williams-Sonoma',smallImageUrls = '[http://lh4.ggpht.com/cNeTmf82YRoFFXbJ7kpBIZAZ1tOKGtMau_kEzLZcHuCsoeEL7GcoPhPVoTDKpnmpJL5X_bxPoKZm9lU_ltaS=s90]',totalTimeInSeconds = '600',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh4.ggpht.com/bnrxERK9dvDKbsEb7PabRSFC-n2VXlWXj3_2GLtjtVmmAhZoFikVq7CtggANrTwYz_LdidpSFCcdC6cWKdUS_g=s90-c'}',ingredients = '[rice noodles, asian fish sauce, fresh lime juice, sugar, canola oil, medium shrimp, garlic cloves, red pepper flakes, eggs, bean sprouts, unsalted roasted peanuts, sliced green onions, chopped fresh cilantro, chopped fresh mint]',attributes = 'Attributes{course = 'null',holiday = 'null',cuisine = '[Asian, Thai]'}',id = 'Pad-Thai-641068'}]
[INFO ] 2019-05-05 13:12:21.172 [main] YummlyDataGrabber - $$$$$$$$$$ Attribution: Attribution{logo = 'https://static.yummly.co/api-logo.png',html = 'Recipe search powered by <a href='http://www.yummly.co/recipes'><img alt='Yummly' src='https://static.yummly.co/api-logo.png'/></a>',text = 'Recipe search powered by Yummly',url = 'http://www.yummly.co/recipes/'}
[INFO ] 2019-05-05 13:12:21.172 [main] YummlyDataGrabber - $$$$$$$$$$ Facet Counts: FacetCounts{}
[INFO ] 2019-05-05 13:12:21.172 [main] YummlyDataGrabber - $$$$$$$$$$ Total Match Count: 1361
[INFO ] 2019-05-05 13:12:21.172 [main] YummlyDataGrabber - $$$$$$$$$$ Allowed Ingredients: null
[INFO ] 2019-05-05 13:12:21.173 [main] YummlyDataGrabber - $$$$$$$$$$ Excluded Ingredients: null
[INFO ] 2019-05-05 13:12:21.173 [main] YummlyDataGrabber - $$$$$$$$$$ Q: null
[INFO ] 2019-05-05 13:12:21.173 [main] TestYummlyApi - Found Criteria from Q: Classic Pad Thai
[INFO ] 2019-05-05 13:13:13.055 [http-nio-8080-exec-1] SearchGrocerylist - ********** Remote User: Tester1
[INFO ] 2019-05-05 13:13:13.069 [http-nio-8080-exec-1] GenericDao - **********Query database using the User Name: Tester1
[INFO ] 2019-05-05 13:13:17.547 [http-nio-8080-exec-1] GenericDao - Found User Name: [User{userId = '8', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'AdminMan'}]
[INFO ] 2019-05-05 13:13:17.548 [http-nio-8080-exec-1] GenericDao - **********Querying user recipes by ID: 8
[INFO ] 2019-05-05 13:23:14.644 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-05 13:23:14.655 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-05 13:23:14.656 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-05 13:23:17.291 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 13:23:17.439 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-05 13:23:17.440 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-05 13:23:17.440 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-05 13:23:17.512 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 13:23:17.513 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 13:23:17.601 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:23:17.601 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-05 13:23:17.602 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 13:23:17.639 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:23:17.640 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:23:17.640 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 13:23:17.661 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:23:17.661 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:23:17.681 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:23:17.720 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 13:23:17.729 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-05 13:23:17.779 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:23:17.780 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-05 13:23:17.780 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 13:23:17.796 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:23:17.860 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:23:17.861 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-05 13:23:17.862 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:23:17.874 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 13:23:17.874 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:23:17.889 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 13:23:17.890 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 13:23:17.890 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:23:17.902 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 13:23:17.903 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T13:23:17.862, ingredients = []}
[INFO ] 2019-05-05 13:23:17.933 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 449, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T13:23:17.862, ingredients = []}
[INFO ] 2019-05-05 13:23:17.934 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 449, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T13:23:17.862, ingredients = []}
[INFO ] 2019-05-05 13:23:17.999 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:23:17.999 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-05 13:23:18.000 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:23:18.032 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-05 13:23:18.033 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-05 13:23:18.071 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 13:23:18.072 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 13:23:18.118 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:23:18.118 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-05 13:23:18.134 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 13:23:18.182 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:23:18.183 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-05 13:23:18.184 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 13:23:18.245 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 13:23:18.295 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:23:18.296 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-05 13:23:18.296 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:23:18.307 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 13:23:18.307 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T13:23:18.296, ingredients = []}
[INFO ] 2019-05-05 13:23:18.308 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T13:23:18.296, ingredients = []}
[INFO ] 2019-05-05 13:23:18.319 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 450, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T13:23:18.296, ingredients = []}
[INFO ] 2019-05-05 13:23:18.319 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-05 13:23:18.320 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-05 13:23:18.339 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 450, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T13:23:18, ingredients = []}]
[INFO ] 2019-05-05 13:23:18.340 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-05 13:23:18.341 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-05 13:23:18.356 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 13:23:18.357 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:23:18.368 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:23:18.432 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:23:18.433 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-05 13:23:18.433 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:23:18.438 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 13:23:18.438 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 13:23:18.440 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 13:23:18.449 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:23:18.455 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-05 13:23:18.506 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:23:18.506 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-05 13:23:18.507 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:23:18.519 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-05 13:23:18.561 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:23:18.561 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-05 13:23:18.561 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:23:18.645 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-05 13:23:18.702 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:23:18.703 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-05 13:23:18.703 [main] UserTest - -------Locale date time: 2019-05-05T13:23:18.703----------
[INFO ] 2019-05-05 13:23:18.703 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 13:23:18.715 [main] GenericDao - **********Entity inserted: User{userId = '497', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 13:23:18.715 [main] GenericDao - **********Query database by using an ID: 497, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:23:18.722 [main] GenericDao - **********Query by ID Found: User{userId = '497', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 13:23:18.763 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:23:18.763 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-05 13:23:18.763 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 13:23:18.772 [main] GenericDao - **********Saved|Updated entity: User{userId = '498', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 13:23:18.773 [main] GenericDao - **********Query database by using an ID: 498, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:23:18.779 [main] GenericDao - **********Query by ID Found: User{userId = '498', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 13:23:18.779 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:23:18.789 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-05 13:23:18.789 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-05 13:23:18.789 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 13:23:18.804 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 13:23:18.805 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:23:18.814 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 13:23:18.858 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:23:18.859 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-05 13:23:18.859 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:23:18.877 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-05 13:23:18.877 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:23:18.909 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-05 13:23:18.949 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:23:18.949 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-05 13:23:18.949 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 13:23:18.955 [main] GenericDao - **********Entity inserted: User{userId = '499', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 13:23:18.955 [main] GenericDao - **********Query database by using an ID: 499, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:23:18.958 [main] GenericDao - **********Query by ID Found: User{userId = '499', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 13:23:20.523 [main] YummlyDataGrabber - $$$$$$$$$$ Criteria Request returned Object: Criteria{facetCounts = 'FacetCounts{}',criteria = 'Criteria{facetCounts = 'null',criteria = 'null',attribution = 'null',matches = 'null',totalMatchCount = '0',q = 'Pad Thai',allowedIngredient = 'null',excludedIngredient = 'null'}',attribution = 'Attribution{logo = 'https://static.yummly.co/api-logo.png',html = 'Recipe search powered by <a href='http://www.yummly.co/recipes'><img alt='Yummly' src='https://static.yummly.co/api-logo.png'/></a>',text = 'Recipe search powered by Yummly',url = 'http://www.yummly.co/recipes/'}',matches = '[MatchesItem{recipeName = 'Classic Pad Thai',flavors = 'null',sourceDisplayName = 'Taste',smallImageUrls = '[https://lh3.googleusercontent.com/n6-iEQ-eB_tZ2xZ_9MQ7VrviKyNUG22WwXOrQ4sCnoc3k_R3ROGhVruW2nf74SqKiqTYVpIHj4WEVPROsUEBnH0=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9YxdRCk-f2qJ6aVEuyFIfBOyK2ae_qMABx-WAboDFPkt-V_4rk3OCW6zqbBGDlq8XkPBo7v7m_FMoqhaRBHLM0=s90-c'}',ingredients = '[minced garlic, thai chiles, palm sugar, tamarind paste, asian fish sauce, fresh lime juice, pad thai noodles, canola oil, large shrimp, red pepper flakes, eggs, extra firm tofu, carrots, bean sprouts, green onions, cilantro leaves, roasted peanuts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Classic-Pad-Thai-2151767'}, MatchesItem{recipeName = 'Shrimp Pad-Thai',flavors = 'null',sourceDisplayName = 'simple.artistic.cooking',smallImageUrls = '[https://lh3.googleusercontent.com/THkysjs-7NkPHvVlAHnMQ8QJbB83_v7glyf_LjGs6buHIusQixQ5OzzNrfiTxVUxuqbHXn4MHZ6gXJ4FN3u7qBU=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/F-3Ds9UUGjz6puJq4xVBr4ISkYWN2gxjRQHpwph7YLG54JSL13A0cJVVsErotaNDg8JPdubKEE0iv1-kTiSt=s90-c'}',ingredients = '[rice noodles, low sodium soy sauce, fish sauce, fresh lime juice, dark brown sugar, Sriracha, crushed red pepper flakes, peanut oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh cilantro, limes, ginger, unsalted peanuts]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-2694178'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'A Day In The Kitchen',smallImageUrls = '[https://lh3.googleusercontent.com/GlwJwX-yAdImsrz97yzYyRAGSlPAXKIk8Bj7itYPzjLUDvmoXnBBF58avmrlL1DlnHTsB_HgQfiAndOT_cmr5mI=s90]',totalTimeInSeconds = '3600',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9o1lAlM-DruGaSqqvBMNbEwDQjkKAaT88P84Z86YQaEicB206-ria1E6xnNUeq3kOgjWmvs5kgIlh-jEUOQ=s90-c'}',ingredients = '[pad thai noodles, deveined shrimp, eggs, small carrot, green onion, garlic cloves, light olive oil, water, tamarind paste, oyster sauce, coconut sugar, fish sauce, soy sauce, bean sprouts, chopped peanuts, dried chili flakes, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Shrimp-Pad-Thai-2511725'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'null',sourceDisplayName = 'Bookcooker',smallImageUrls = '[https://lh3.googleusercontent.com/oRA3RBaVweVu-mbgLigmJBT1a5dK8mZGJgWBijAIz5kSfGy5ctOulTP3iF7HCJR3d3rnK2h2H0BEztVoGAjb3j4=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/GHOVr9l6K3s3_MIlQRGmGjE1cLy-Xnvlj94n3-RF7JdYXM-hWfFXtAJqPIkfxHTZAAbiVjeA-F57kRpXHJ7-ww=s90-c'}',ingredients = '[pad thai noodles, raw sugar, tamarind paste, fish sauce, rice vinegar, minced ginger, minced garlic, shallot, lemongrass, peanut oil, large eggs, cooked shrimp, extra firm tofu, scallions, peanuts, bean sprouts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1753549'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.3333333333333333',sweet = '0.16666666666666666',sour = '0.3333333333333333',bitter = '0.16666666666666666',piquant = '0.6666666666666666'}',sourceDisplayName = 'The Hungry Mouse',smallImageUrls = '[https://lh3.googleusercontent.com/kjWQ0yDHnfexuAGuUUb3pkrELmSDKiox3NVVVcf2qUNac9z4GdWsXu30RQomuRLuDXWUoNAJkDA-oyXOGyeT=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/taNW2mFGX9SDg4tgPbUjD5VyOulKfgmBf07EgFKYxXy1wdJXSrvZbGIKA0dYfKhKEgid5NprMS5vrv9GlwfnfA=s90-c'}',ingredients = '[rice noodles, boiling water, vegetable oil, cilantro, red chile, large shrimp, shallots, large eggs, sugar, oyster sauce, Thai fish sauce, fresh lime juice, bean sprouts, scallions, unsalted roasted peanuts, lime]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1764933'}, MatchesItem{recipeName = 'Chicken Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.8333333333333334',bitter = '0.6666666666666666',piquant = '0.5'}',sourceDisplayName = 'Cooking Classy',smallImageUrls = '[https://lh3.googleusercontent.com/wxHAOLhlPjO1Vm0nUPYfLdhlSY9fy-_LiJheciGzbVSmFY3TwK0vUD6Squ3EbFslSyzfJm_LxV8yO2mg8GoZ=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/e2DuGFKLDaj_lzdDoTUQSHq-9KeUFtlsv7-W2meNBkzn42n308SAqVC1W1BEMw_zFkAg_K1SIvAg-EFcEbcREA=s90-c'}',ingredients = '[rice noodles, boneless, skinless chicken breasts, vegetable oil, dark brown sugar, soy sauce, rice vinegar, lime juice, fish sauce, red bell pepper, matchstick carrots, garlic, green onions, bean sprouts, large eggs, unsalted peanuts, cilantro, red pepper flakes, sesame seeds]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Chicken-Pad-Thai-2213155'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.3333333333333333',bitter = '0.6666666666666666',piquant = '0.3333333333333333'}',sourceDisplayName = 'From Jessica's Kitchen',smallImageUrls = '[http://lh5.ggpht.com/tG9DQTsQN-Q7Vgy7mt0QAEDGtpy5xIjucpNpemEpZ4FwhrhvlN-7PoNF3-ZYRBtRzXCvv8VtuxjP2py7o9PhTrY=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh5.ggpht.com/2okQfHyuVIWk5uokYUkxoKUcQGvWkoY0QMbDClsnhfFj8I125HhW-zO7TFmsSusOiqRbFJoZ8cR6hpwxJM8v1jM=s90-c'}',ingredients = '[fresh lime juice, sugar, fish sauce, chili sauce, tamarind paste, brown sugar, chicken stock, red pepper flakes, kosher salt, vegetable oil, garlic cloves, shallots, chicken, shrimp, eggs, bean sprouts, fresh cilantro, roasted peanuts, scallions, rice noodles]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-972593'}, MatchesItem{recipeName = 'Quick Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'Food & Wine',smallImageUrls = '[http://lh3.googleusercontent.com/WFJa5dApcA64f4YS5W7w-Q38pzXL8e5f1f7QNKLW9NrokqF4z5_T0k8Q01eOgECYojSj5ritfz49OYQMr3_CxS4=s90]',totalTimeInSeconds = '1800',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/18irSqmW3lj0CrrGnEUn9FaiyuzU5CLxMAYeRU-U43knhaaXzDW6hOvw_FK0uEWkZB8VrESVnd6J6WMEI1wBnow=s90-c'}',ingredients = '[thai noodles, asian fish sauce, light brown sugar, fresh lime juice, Thai bird chiles, canola oil, shallots, large garlic cloves, medium shrimp, large eggs, scallions, roasted peanuts, bean sprouts, chopped cilantro]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Quick-Shrimp-Pad-Thai-1095426'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.8333333333333334',sweet = '0.5',sour = '0.3333333333333333',bitter = '0.8333333333333334',piquant = '0.6666666666666666'}',sourceDisplayName = 'MyRecipes',smallImageUrls = '[http://lh3.googleusercontent.com/X3vmGqU0FQfHiWa-RXC2H8_j5eP7YlaMaekrKHYuyqNt8PUJyTY-OKGQemj7y-q4DoGLL9krhmfCwwpE2_VHsw=s90]',totalTimeInSeconds = '1500',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/PEwp_Rt5ikN1kriUXm34UMwVMINSK3L9GEecCkGX900bH6FIQYMH9ex7FlqAADz_qZmpZHe4mG_xFyrxs0S_=s90-c'}',ingredients = '[rice noodles, dark brown sugar, lower sodium soy sauce, fish sauce, fresh lime juice, Sriracha, canola oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh basil]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-1085805'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.5',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.16666666666666666',bitter = '0.8333333333333334',piquant = '0.16666666666666666'}',sourceDisplayName = 'Williams-Sonoma',smallImageUrls = '[http://lh4.ggpht.com/cNeTmf82YRoFFXbJ7kpBIZAZ1tOKGtMau_kEzLZcHuCsoeEL7GcoPhPVoTDKpnmpJL5X_bxPoKZm9lU_ltaS=s90]',totalTimeInSeconds = '600',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh4.ggpht.com/bnrxERK9dvDKbsEb7PabRSFC-n2VXlWXj3_2GLtjtVmmAhZoFikVq7CtggANrTwYz_LdidpSFCcdC6cWKdUS_g=s90-c'}',ingredients = '[rice noodles, asian fish sauce, fresh lime juice, sugar, canola oil, medium shrimp, garlic cloves, red pepper flakes, eggs, bean sprouts, unsalted roasted peanuts, sliced green onions, chopped fresh cilantro, chopped fresh mint]',attributes = 'Attributes{course = 'null',holiday = 'null',cuisine = '[Asian, Thai]'}',id = 'Pad-Thai-641068'}]',totalMatchCount = '1361',q = 'null',allowedIngredient = 'null',excludedIngredient = 'null'}
[INFO ] 2019-05-05 13:23:20.524 [main] YummlyDataGrabber - $$$$$$$$$$ Ingredients: minced garlic
[INFO ] 2019-05-05 13:23:20.525 [main] YummlyDataGrabber - $$$$$$$$$$ Matches: [MatchesItem{recipeName = 'Classic Pad Thai',flavors = 'null',sourceDisplayName = 'Taste',smallImageUrls = '[https://lh3.googleusercontent.com/n6-iEQ-eB_tZ2xZ_9MQ7VrviKyNUG22WwXOrQ4sCnoc3k_R3ROGhVruW2nf74SqKiqTYVpIHj4WEVPROsUEBnH0=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9YxdRCk-f2qJ6aVEuyFIfBOyK2ae_qMABx-WAboDFPkt-V_4rk3OCW6zqbBGDlq8XkPBo7v7m_FMoqhaRBHLM0=s90-c'}',ingredients = '[minced garlic, thai chiles, palm sugar, tamarind paste, asian fish sauce, fresh lime juice, pad thai noodles, canola oil, large shrimp, red pepper flakes, eggs, extra firm tofu, carrots, bean sprouts, green onions, cilantro leaves, roasted peanuts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Classic-Pad-Thai-2151767'}, MatchesItem{recipeName = 'Shrimp Pad-Thai',flavors = 'null',sourceDisplayName = 'simple.artistic.cooking',smallImageUrls = '[https://lh3.googleusercontent.com/THkysjs-7NkPHvVlAHnMQ8QJbB83_v7glyf_LjGs6buHIusQixQ5OzzNrfiTxVUxuqbHXn4MHZ6gXJ4FN3u7qBU=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/F-3Ds9UUGjz6puJq4xVBr4ISkYWN2gxjRQHpwph7YLG54JSL13A0cJVVsErotaNDg8JPdubKEE0iv1-kTiSt=s90-c'}',ingredients = '[rice noodles, low sodium soy sauce, fish sauce, fresh lime juice, dark brown sugar, Sriracha, crushed red pepper flakes, peanut oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh cilantro, limes, ginger, unsalted peanuts]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-2694178'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'A Day In The Kitchen',smallImageUrls = '[https://lh3.googleusercontent.com/GlwJwX-yAdImsrz97yzYyRAGSlPAXKIk8Bj7itYPzjLUDvmoXnBBF58avmrlL1DlnHTsB_HgQfiAndOT_cmr5mI=s90]',totalTimeInSeconds = '3600',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9o1lAlM-DruGaSqqvBMNbEwDQjkKAaT88P84Z86YQaEicB206-ria1E6xnNUeq3kOgjWmvs5kgIlh-jEUOQ=s90-c'}',ingredients = '[pad thai noodles, deveined shrimp, eggs, small carrot, green onion, garlic cloves, light olive oil, water, tamarind paste, oyster sauce, coconut sugar, fish sauce, soy sauce, bean sprouts, chopped peanuts, dried chili flakes, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Shrimp-Pad-Thai-2511725'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'null',sourceDisplayName = 'Bookcooker',smallImageUrls = '[https://lh3.googleusercontent.com/oRA3RBaVweVu-mbgLigmJBT1a5dK8mZGJgWBijAIz5kSfGy5ctOulTP3iF7HCJR3d3rnK2h2H0BEztVoGAjb3j4=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/GHOVr9l6K3s3_MIlQRGmGjE1cLy-Xnvlj94n3-RF7JdYXM-hWfFXtAJqPIkfxHTZAAbiVjeA-F57kRpXHJ7-ww=s90-c'}',ingredients = '[pad thai noodles, raw sugar, tamarind paste, fish sauce, rice vinegar, minced ginger, minced garlic, shallot, lemongrass, peanut oil, large eggs, cooked shrimp, extra firm tofu, scallions, peanuts, bean sprouts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1753549'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.3333333333333333',sweet = '0.16666666666666666',sour = '0.3333333333333333',bitter = '0.16666666666666666',piquant = '0.6666666666666666'}',sourceDisplayName = 'The Hungry Mouse',smallImageUrls = '[https://lh3.googleusercontent.com/kjWQ0yDHnfexuAGuUUb3pkrELmSDKiox3NVVVcf2qUNac9z4GdWsXu30RQomuRLuDXWUoNAJkDA-oyXOGyeT=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/taNW2mFGX9SDg4tgPbUjD5VyOulKfgmBf07EgFKYxXy1wdJXSrvZbGIKA0dYfKhKEgid5NprMS5vrv9GlwfnfA=s90-c'}',ingredients = '[rice noodles, boiling water, vegetable oil, cilantro, red chile, large shrimp, shallots, large eggs, sugar, oyster sauce, Thai fish sauce, fresh lime juice, bean sprouts, scallions, unsalted roasted peanuts, lime]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1764933'}, MatchesItem{recipeName = 'Chicken Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.8333333333333334',bitter = '0.6666666666666666',piquant = '0.5'}',sourceDisplayName = 'Cooking Classy',smallImageUrls = '[https://lh3.googleusercontent.com/wxHAOLhlPjO1Vm0nUPYfLdhlSY9fy-_LiJheciGzbVSmFY3TwK0vUD6Squ3EbFslSyzfJm_LxV8yO2mg8GoZ=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/e2DuGFKLDaj_lzdDoTUQSHq-9KeUFtlsv7-W2meNBkzn42n308SAqVC1W1BEMw_zFkAg_K1SIvAg-EFcEbcREA=s90-c'}',ingredients = '[rice noodles, boneless, skinless chicken breasts, vegetable oil, dark brown sugar, soy sauce, rice vinegar, lime juice, fish sauce, red bell pepper, matchstick carrots, garlic, green onions, bean sprouts, large eggs, unsalted peanuts, cilantro, red pepper flakes, sesame seeds]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Chicken-Pad-Thai-2213155'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.3333333333333333',bitter = '0.6666666666666666',piquant = '0.3333333333333333'}',sourceDisplayName = 'From Jessica's Kitchen',smallImageUrls = '[http://lh5.ggpht.com/tG9DQTsQN-Q7Vgy7mt0QAEDGtpy5xIjucpNpemEpZ4FwhrhvlN-7PoNF3-ZYRBtRzXCvv8VtuxjP2py7o9PhTrY=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh5.ggpht.com/2okQfHyuVIWk5uokYUkxoKUcQGvWkoY0QMbDClsnhfFj8I125HhW-zO7TFmsSusOiqRbFJoZ8cR6hpwxJM8v1jM=s90-c'}',ingredients = '[fresh lime juice, sugar, fish sauce, chili sauce, tamarind paste, brown sugar, chicken stock, red pepper flakes, kosher salt, vegetable oil, garlic cloves, shallots, chicken, shrimp, eggs, bean sprouts, fresh cilantro, roasted peanuts, scallions, rice noodles]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-972593'}, MatchesItem{recipeName = 'Quick Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'Food & Wine',smallImageUrls = '[http://lh3.googleusercontent.com/WFJa5dApcA64f4YS5W7w-Q38pzXL8e5f1f7QNKLW9NrokqF4z5_T0k8Q01eOgECYojSj5ritfz49OYQMr3_CxS4=s90]',totalTimeInSeconds = '1800',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/18irSqmW3lj0CrrGnEUn9FaiyuzU5CLxMAYeRU-U43knhaaXzDW6hOvw_FK0uEWkZB8VrESVnd6J6WMEI1wBnow=s90-c'}',ingredients = '[thai noodles, asian fish sauce, light brown sugar, fresh lime juice, Thai bird chiles, canola oil, shallots, large garlic cloves, medium shrimp, large eggs, scallions, roasted peanuts, bean sprouts, chopped cilantro]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Quick-Shrimp-Pad-Thai-1095426'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.8333333333333334',sweet = '0.5',sour = '0.3333333333333333',bitter = '0.8333333333333334',piquant = '0.6666666666666666'}',sourceDisplayName = 'MyRecipes',smallImageUrls = '[http://lh3.googleusercontent.com/X3vmGqU0FQfHiWa-RXC2H8_j5eP7YlaMaekrKHYuyqNt8PUJyTY-OKGQemj7y-q4DoGLL9krhmfCwwpE2_VHsw=s90]',totalTimeInSeconds = '1500',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/PEwp_Rt5ikN1kriUXm34UMwVMINSK3L9GEecCkGX900bH6FIQYMH9ex7FlqAADz_qZmpZHe4mG_xFyrxs0S_=s90-c'}',ingredients = '[rice noodles, dark brown sugar, lower sodium soy sauce, fish sauce, fresh lime juice, Sriracha, canola oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh basil]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-1085805'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.5',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.16666666666666666',bitter = '0.8333333333333334',piquant = '0.16666666666666666'}',sourceDisplayName = 'Williams-Sonoma',smallImageUrls = '[http://lh4.ggpht.com/cNeTmf82YRoFFXbJ7kpBIZAZ1tOKGtMau_kEzLZcHuCsoeEL7GcoPhPVoTDKpnmpJL5X_bxPoKZm9lU_ltaS=s90]',totalTimeInSeconds = '600',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh4.ggpht.com/bnrxERK9dvDKbsEb7PabRSFC-n2VXlWXj3_2GLtjtVmmAhZoFikVq7CtggANrTwYz_LdidpSFCcdC6cWKdUS_g=s90-c'}',ingredients = '[rice noodles, asian fish sauce, fresh lime juice, sugar, canola oil, medium shrimp, garlic cloves, red pepper flakes, eggs, bean sprouts, unsalted roasted peanuts, sliced green onions, chopped fresh cilantro, chopped fresh mint]',attributes = 'Attributes{course = 'null',holiday = 'null',cuisine = '[Asian, Thai]'}',id = 'Pad-Thai-641068'}]
[INFO ] 2019-05-05 13:23:20.526 [main] YummlyDataGrabber - $$$$$$$$$$ Attribution: Attribution{logo = 'https://static.yummly.co/api-logo.png',html = 'Recipe search powered by <a href='http://www.yummly.co/recipes'><img alt='Yummly' src='https://static.yummly.co/api-logo.png'/></a>',text = 'Recipe search powered by Yummly',url = 'http://www.yummly.co/recipes/'}
[INFO ] 2019-05-05 13:23:20.527 [main] YummlyDataGrabber - $$$$$$$$$$ Facet Counts: FacetCounts{}
[INFO ] 2019-05-05 13:23:20.527 [main] YummlyDataGrabber - $$$$$$$$$$ Total Match Count: 1361
[INFO ] 2019-05-05 13:23:20.527 [main] YummlyDataGrabber - $$$$$$$$$$ Allowed Ingredients: null
[INFO ] 2019-05-05 13:23:20.527 [main] YummlyDataGrabber - $$$$$$$$$$ Excluded Ingredients: null
[INFO ] 2019-05-05 13:23:20.527 [main] YummlyDataGrabber - $$$$$$$$$$ Q: null
[INFO ] 2019-05-05 13:23:20.528 [main] TestYummlyApi - Found Criteria from Q: Classic Pad Thai
[INFO ] 2019-05-05 13:24:58.880 [http-nio-8080-exec-3] SearchGrocerylist - ********** Remote User: Tester1
[INFO ] 2019-05-05 13:24:58.892 [http-nio-8080-exec-3] GenericDao - **********Query database using the User Name: Tester1
[INFO ] 2019-05-05 13:25:03.224 [http-nio-8080-exec-3] GenericDao - Found User Name: [User{userId = '8', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'AdminMan'}]
[INFO ] 2019-05-05 13:25:03.227 [http-nio-8080-exec-3] GenericDao - **********Querying grocery list by user id: 8
[INFO ] 2019-05-05 13:25:03.269 [http-nio-8080-exec-3] GenericDao - *********Query found grocery lists by ID: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 13:25:03.274 [http-nio-8080-exec-3] SearchGrocerylist - ********** Grocery List Object by User Name Results: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 13:38:12.798 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-05 13:38:12.816 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-05 13:38:12.816 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-05 13:38:15.915 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 13:38:16.080 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-05 13:38:16.081 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-05 13:38:16.082 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-05 13:38:16.155 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 13:38:16.156 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 13:38:16.260 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:38:16.261 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-05 13:38:16.262 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 13:38:16.313 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:38:16.313 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:38:16.314 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 13:38:16.333 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:38:16.334 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:38:16.354 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:38:16.384 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 13:38:16.389 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-05 13:38:16.438 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:38:16.438 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-05 13:38:16.439 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 13:38:16.465 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:38:16.522 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:38:16.523 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-05 13:38:16.524 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:38:16.536 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 13:38:16.536 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:38:16.548 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 13:38:16.550 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 13:38:16.550 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:38:16.563 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 13:38:16.563 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T13:38:16.523, ingredients = []}
[INFO ] 2019-05-05 13:38:16.588 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 452, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T13:38:16.523, ingredients = []}
[INFO ] 2019-05-05 13:38:16.589 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 452, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T13:38:16.523, ingredients = []}
[INFO ] 2019-05-05 13:38:16.632 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:38:16.633 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-05 13:38:16.633 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:38:16.680 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-05 13:38:16.681 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-05 13:38:16.704 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 13:38:16.705 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 13:38:16.753 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:38:16.754 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-05 13:38:16.766 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 13:38:16.804 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:38:16.805 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-05 13:38:16.805 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 13:38:16.854 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 13:38:16.904 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:38:16.905 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-05 13:38:16.905 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:38:16.917 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 13:38:16.917 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T13:38:16.905, ingredients = []}
[INFO ] 2019-05-05 13:38:16.918 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T13:38:16.905, ingredients = []}
[INFO ] 2019-05-05 13:38:16.932 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 453, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T13:38:16.905, ingredients = []}
[INFO ] 2019-05-05 13:38:16.933 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-05 13:38:16.934 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-05 13:38:16.953 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 453, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T13:38:17, ingredients = []}]
[INFO ] 2019-05-05 13:38:16.953 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-05 13:38:16.953 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-05 13:38:16.969 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 13:38:16.970 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:38:16.977 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:38:17.041 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:38:17.041 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-05 13:38:17.042 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:38:17.048 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 13:38:17.049 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 13:38:17.051 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 13:38:17.057 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:38:17.064 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-05 13:38:17.110 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:38:17.110 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-05 13:38:17.111 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:38:17.125 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-05 13:38:17.168 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:38:17.168 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-05 13:38:17.168 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:38:17.243 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-05 13:38:17.300 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:38:17.301 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-05 13:38:17.301 [main] UserTest - -------Locale date time: 2019-05-05T13:38:17.301----------
[INFO ] 2019-05-05 13:38:17.301 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 13:38:17.310 [main] GenericDao - **********Entity inserted: User{userId = '500', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 13:38:17.312 [main] GenericDao - **********Query database by using an ID: 500, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:38:17.322 [main] GenericDao - **********Query by ID Found: User{userId = '500', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 13:38:17.355 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:38:17.356 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-05 13:38:17.356 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 13:38:17.362 [main] GenericDao - **********Saved|Updated entity: User{userId = '501', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 13:38:17.362 [main] GenericDao - **********Query database by using an ID: 501, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:38:17.366 [main] GenericDao - **********Query by ID Found: User{userId = '501', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 13:38:17.367 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:38:17.377 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-05 13:38:17.377 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-05 13:38:17.377 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 13:38:17.386 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 13:38:17.386 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:38:17.395 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 13:38:17.431 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:38:17.431 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-05 13:38:17.431 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:38:17.451 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-05 13:38:17.451 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:38:17.472 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-05 13:38:17.506 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:38:17.507 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-05 13:38:17.507 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 13:38:17.514 [main] GenericDao - **********Entity inserted: User{userId = '502', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 13:38:17.514 [main] GenericDao - **********Query database by using an ID: 502, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:38:17.518 [main] GenericDao - **********Query by ID Found: User{userId = '502', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 13:38:19.047 [main] YummlyDataGrabber - $$$$$$$$$$ Criteria Request returned Object: Criteria{facetCounts = 'FacetCounts{}',criteria = 'Criteria{facetCounts = 'null',criteria = 'null',attribution = 'null',matches = 'null',totalMatchCount = '0',q = 'Pad Thai',allowedIngredient = 'null',excludedIngredient = 'null'}',attribution = 'Attribution{logo = 'https://static.yummly.co/api-logo.png',html = 'Recipe search powered by <a href='http://www.yummly.co/recipes'><img alt='Yummly' src='https://static.yummly.co/api-logo.png'/></a>',text = 'Recipe search powered by Yummly',url = 'http://www.yummly.co/recipes/'}',matches = '[MatchesItem{recipeName = 'Classic Pad Thai',flavors = 'null',sourceDisplayName = 'Taste',smallImageUrls = '[https://lh3.googleusercontent.com/n6-iEQ-eB_tZ2xZ_9MQ7VrviKyNUG22WwXOrQ4sCnoc3k_R3ROGhVruW2nf74SqKiqTYVpIHj4WEVPROsUEBnH0=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9YxdRCk-f2qJ6aVEuyFIfBOyK2ae_qMABx-WAboDFPkt-V_4rk3OCW6zqbBGDlq8XkPBo7v7m_FMoqhaRBHLM0=s90-c'}',ingredients = '[minced garlic, thai chiles, palm sugar, tamarind paste, asian fish sauce, fresh lime juice, pad thai noodles, canola oil, large shrimp, red pepper flakes, eggs, extra firm tofu, carrots, bean sprouts, green onions, cilantro leaves, roasted peanuts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Classic-Pad-Thai-2151767'}, MatchesItem{recipeName = 'Shrimp Pad-Thai',flavors = 'null',sourceDisplayName = 'simple.artistic.cooking',smallImageUrls = '[https://lh3.googleusercontent.com/THkysjs-7NkPHvVlAHnMQ8QJbB83_v7glyf_LjGs6buHIusQixQ5OzzNrfiTxVUxuqbHXn4MHZ6gXJ4FN3u7qBU=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/F-3Ds9UUGjz6puJq4xVBr4ISkYWN2gxjRQHpwph7YLG54JSL13A0cJVVsErotaNDg8JPdubKEE0iv1-kTiSt=s90-c'}',ingredients = '[rice noodles, low sodium soy sauce, fish sauce, fresh lime juice, dark brown sugar, Sriracha, crushed red pepper flakes, peanut oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh cilantro, limes, ginger, unsalted peanuts]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-2694178'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'A Day In The Kitchen',smallImageUrls = '[https://lh3.googleusercontent.com/GlwJwX-yAdImsrz97yzYyRAGSlPAXKIk8Bj7itYPzjLUDvmoXnBBF58avmrlL1DlnHTsB_HgQfiAndOT_cmr5mI=s90]',totalTimeInSeconds = '3600',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9o1lAlM-DruGaSqqvBMNbEwDQjkKAaT88P84Z86YQaEicB206-ria1E6xnNUeq3kOgjWmvs5kgIlh-jEUOQ=s90-c'}',ingredients = '[pad thai noodles, deveined shrimp, eggs, small carrot, green onion, garlic cloves, light olive oil, water, tamarind paste, oyster sauce, coconut sugar, fish sauce, soy sauce, bean sprouts, chopped peanuts, dried chili flakes, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Shrimp-Pad-Thai-2511725'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'null',sourceDisplayName = 'Bookcooker',smallImageUrls = '[https://lh3.googleusercontent.com/oRA3RBaVweVu-mbgLigmJBT1a5dK8mZGJgWBijAIz5kSfGy5ctOulTP3iF7HCJR3d3rnK2h2H0BEztVoGAjb3j4=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/GHOVr9l6K3s3_MIlQRGmGjE1cLy-Xnvlj94n3-RF7JdYXM-hWfFXtAJqPIkfxHTZAAbiVjeA-F57kRpXHJ7-ww=s90-c'}',ingredients = '[pad thai noodles, raw sugar, tamarind paste, fish sauce, rice vinegar, minced ginger, minced garlic, shallot, lemongrass, peanut oil, large eggs, cooked shrimp, extra firm tofu, scallions, peanuts, bean sprouts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1753549'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.3333333333333333',sweet = '0.16666666666666666',sour = '0.3333333333333333',bitter = '0.16666666666666666',piquant = '0.6666666666666666'}',sourceDisplayName = 'The Hungry Mouse',smallImageUrls = '[https://lh3.googleusercontent.com/kjWQ0yDHnfexuAGuUUb3pkrELmSDKiox3NVVVcf2qUNac9z4GdWsXu30RQomuRLuDXWUoNAJkDA-oyXOGyeT=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/taNW2mFGX9SDg4tgPbUjD5VyOulKfgmBf07EgFKYxXy1wdJXSrvZbGIKA0dYfKhKEgid5NprMS5vrv9GlwfnfA=s90-c'}',ingredients = '[rice noodles, boiling water, vegetable oil, cilantro, red chile, large shrimp, shallots, large eggs, sugar, oyster sauce, Thai fish sauce, fresh lime juice, bean sprouts, scallions, unsalted roasted peanuts, lime]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1764933'}, MatchesItem{recipeName = 'Chicken Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.8333333333333334',bitter = '0.6666666666666666',piquant = '0.5'}',sourceDisplayName = 'Cooking Classy',smallImageUrls = '[https://lh3.googleusercontent.com/wxHAOLhlPjO1Vm0nUPYfLdhlSY9fy-_LiJheciGzbVSmFY3TwK0vUD6Squ3EbFslSyzfJm_LxV8yO2mg8GoZ=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/e2DuGFKLDaj_lzdDoTUQSHq-9KeUFtlsv7-W2meNBkzn42n308SAqVC1W1BEMw_zFkAg_K1SIvAg-EFcEbcREA=s90-c'}',ingredients = '[rice noodles, boneless, skinless chicken breasts, vegetable oil, dark brown sugar, soy sauce, rice vinegar, lime juice, fish sauce, red bell pepper, matchstick carrots, garlic, green onions, bean sprouts, large eggs, unsalted peanuts, cilantro, red pepper flakes, sesame seeds]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Chicken-Pad-Thai-2213155'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.3333333333333333',bitter = '0.6666666666666666',piquant = '0.3333333333333333'}',sourceDisplayName = 'From Jessica's Kitchen',smallImageUrls = '[http://lh5.ggpht.com/tG9DQTsQN-Q7Vgy7mt0QAEDGtpy5xIjucpNpemEpZ4FwhrhvlN-7PoNF3-ZYRBtRzXCvv8VtuxjP2py7o9PhTrY=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh5.ggpht.com/2okQfHyuVIWk5uokYUkxoKUcQGvWkoY0QMbDClsnhfFj8I125HhW-zO7TFmsSusOiqRbFJoZ8cR6hpwxJM8v1jM=s90-c'}',ingredients = '[fresh lime juice, sugar, fish sauce, chili sauce, tamarind paste, brown sugar, chicken stock, red pepper flakes, kosher salt, vegetable oil, garlic cloves, shallots, chicken, shrimp, eggs, bean sprouts, fresh cilantro, roasted peanuts, scallions, rice noodles]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-972593'}, MatchesItem{recipeName = 'Quick Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'Food & Wine',smallImageUrls = '[http://lh3.googleusercontent.com/WFJa5dApcA64f4YS5W7w-Q38pzXL8e5f1f7QNKLW9NrokqF4z5_T0k8Q01eOgECYojSj5ritfz49OYQMr3_CxS4=s90]',totalTimeInSeconds = '1800',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/18irSqmW3lj0CrrGnEUn9FaiyuzU5CLxMAYeRU-U43knhaaXzDW6hOvw_FK0uEWkZB8VrESVnd6J6WMEI1wBnow=s90-c'}',ingredients = '[thai noodles, asian fish sauce, light brown sugar, fresh lime juice, Thai bird chiles, canola oil, shallots, large garlic cloves, medium shrimp, large eggs, scallions, roasted peanuts, bean sprouts, chopped cilantro]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Quick-Shrimp-Pad-Thai-1095426'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.8333333333333334',sweet = '0.5',sour = '0.3333333333333333',bitter = '0.8333333333333334',piquant = '0.6666666666666666'}',sourceDisplayName = 'MyRecipes',smallImageUrls = '[http://lh3.googleusercontent.com/X3vmGqU0FQfHiWa-RXC2H8_j5eP7YlaMaekrKHYuyqNt8PUJyTY-OKGQemj7y-q4DoGLL9krhmfCwwpE2_VHsw=s90]',totalTimeInSeconds = '1500',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/PEwp_Rt5ikN1kriUXm34UMwVMINSK3L9GEecCkGX900bH6FIQYMH9ex7FlqAADz_qZmpZHe4mG_xFyrxs0S_=s90-c'}',ingredients = '[rice noodles, dark brown sugar, lower sodium soy sauce, fish sauce, fresh lime juice, Sriracha, canola oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh basil]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-1085805'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.5',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.16666666666666666',bitter = '0.8333333333333334',piquant = '0.16666666666666666'}',sourceDisplayName = 'Williams-Sonoma',smallImageUrls = '[http://lh4.ggpht.com/cNeTmf82YRoFFXbJ7kpBIZAZ1tOKGtMau_kEzLZcHuCsoeEL7GcoPhPVoTDKpnmpJL5X_bxPoKZm9lU_ltaS=s90]',totalTimeInSeconds = '600',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh4.ggpht.com/bnrxERK9dvDKbsEb7PabRSFC-n2VXlWXj3_2GLtjtVmmAhZoFikVq7CtggANrTwYz_LdidpSFCcdC6cWKdUS_g=s90-c'}',ingredients = '[rice noodles, asian fish sauce, fresh lime juice, sugar, canola oil, medium shrimp, garlic cloves, red pepper flakes, eggs, bean sprouts, unsalted roasted peanuts, sliced green onions, chopped fresh cilantro, chopped fresh mint]',attributes = 'Attributes{course = 'null',holiday = 'null',cuisine = '[Asian, Thai]'}',id = 'Pad-Thai-641068'}]',totalMatchCount = '1361',q = 'null',allowedIngredient = 'null',excludedIngredient = 'null'}
[INFO ] 2019-05-05 13:38:19.048 [main] YummlyDataGrabber - $$$$$$$$$$ Ingredients: minced garlic
[INFO ] 2019-05-05 13:38:19.049 [main] YummlyDataGrabber - $$$$$$$$$$ Matches: [MatchesItem{recipeName = 'Classic Pad Thai',flavors = 'null',sourceDisplayName = 'Taste',smallImageUrls = '[https://lh3.googleusercontent.com/n6-iEQ-eB_tZ2xZ_9MQ7VrviKyNUG22WwXOrQ4sCnoc3k_R3ROGhVruW2nf74SqKiqTYVpIHj4WEVPROsUEBnH0=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9YxdRCk-f2qJ6aVEuyFIfBOyK2ae_qMABx-WAboDFPkt-V_4rk3OCW6zqbBGDlq8XkPBo7v7m_FMoqhaRBHLM0=s90-c'}',ingredients = '[minced garlic, thai chiles, palm sugar, tamarind paste, asian fish sauce, fresh lime juice, pad thai noodles, canola oil, large shrimp, red pepper flakes, eggs, extra firm tofu, carrots, bean sprouts, green onions, cilantro leaves, roasted peanuts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Classic-Pad-Thai-2151767'}, MatchesItem{recipeName = 'Shrimp Pad-Thai',flavors = 'null',sourceDisplayName = 'simple.artistic.cooking',smallImageUrls = '[https://lh3.googleusercontent.com/THkysjs-7NkPHvVlAHnMQ8QJbB83_v7glyf_LjGs6buHIusQixQ5OzzNrfiTxVUxuqbHXn4MHZ6gXJ4FN3u7qBU=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/F-3Ds9UUGjz6puJq4xVBr4ISkYWN2gxjRQHpwph7YLG54JSL13A0cJVVsErotaNDg8JPdubKEE0iv1-kTiSt=s90-c'}',ingredients = '[rice noodles, low sodium soy sauce, fish sauce, fresh lime juice, dark brown sugar, Sriracha, crushed red pepper flakes, peanut oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh cilantro, limes, ginger, unsalted peanuts]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-2694178'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'A Day In The Kitchen',smallImageUrls = '[https://lh3.googleusercontent.com/GlwJwX-yAdImsrz97yzYyRAGSlPAXKIk8Bj7itYPzjLUDvmoXnBBF58avmrlL1DlnHTsB_HgQfiAndOT_cmr5mI=s90]',totalTimeInSeconds = '3600',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9o1lAlM-DruGaSqqvBMNbEwDQjkKAaT88P84Z86YQaEicB206-ria1E6xnNUeq3kOgjWmvs5kgIlh-jEUOQ=s90-c'}',ingredients = '[pad thai noodles, deveined shrimp, eggs, small carrot, green onion, garlic cloves, light olive oil, water, tamarind paste, oyster sauce, coconut sugar, fish sauce, soy sauce, bean sprouts, chopped peanuts, dried chili flakes, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Shrimp-Pad-Thai-2511725'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'null',sourceDisplayName = 'Bookcooker',smallImageUrls = '[https://lh3.googleusercontent.com/oRA3RBaVweVu-mbgLigmJBT1a5dK8mZGJgWBijAIz5kSfGy5ctOulTP3iF7HCJR3d3rnK2h2H0BEztVoGAjb3j4=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/GHOVr9l6K3s3_MIlQRGmGjE1cLy-Xnvlj94n3-RF7JdYXM-hWfFXtAJqPIkfxHTZAAbiVjeA-F57kRpXHJ7-ww=s90-c'}',ingredients = '[pad thai noodles, raw sugar, tamarind paste, fish sauce, rice vinegar, minced ginger, minced garlic, shallot, lemongrass, peanut oil, large eggs, cooked shrimp, extra firm tofu, scallions, peanuts, bean sprouts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1753549'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.3333333333333333',sweet = '0.16666666666666666',sour = '0.3333333333333333',bitter = '0.16666666666666666',piquant = '0.6666666666666666'}',sourceDisplayName = 'The Hungry Mouse',smallImageUrls = '[https://lh3.googleusercontent.com/kjWQ0yDHnfexuAGuUUb3pkrELmSDKiox3NVVVcf2qUNac9z4GdWsXu30RQomuRLuDXWUoNAJkDA-oyXOGyeT=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/taNW2mFGX9SDg4tgPbUjD5VyOulKfgmBf07EgFKYxXy1wdJXSrvZbGIKA0dYfKhKEgid5NprMS5vrv9GlwfnfA=s90-c'}',ingredients = '[rice noodles, boiling water, vegetable oil, cilantro, red chile, large shrimp, shallots, large eggs, sugar, oyster sauce, Thai fish sauce, fresh lime juice, bean sprouts, scallions, unsalted roasted peanuts, lime]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1764933'}, MatchesItem{recipeName = 'Chicken Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.8333333333333334',bitter = '0.6666666666666666',piquant = '0.5'}',sourceDisplayName = 'Cooking Classy',smallImageUrls = '[https://lh3.googleusercontent.com/wxHAOLhlPjO1Vm0nUPYfLdhlSY9fy-_LiJheciGzbVSmFY3TwK0vUD6Squ3EbFslSyzfJm_LxV8yO2mg8GoZ=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/e2DuGFKLDaj_lzdDoTUQSHq-9KeUFtlsv7-W2meNBkzn42n308SAqVC1W1BEMw_zFkAg_K1SIvAg-EFcEbcREA=s90-c'}',ingredients = '[rice noodles, boneless, skinless chicken breasts, vegetable oil, dark brown sugar, soy sauce, rice vinegar, lime juice, fish sauce, red bell pepper, matchstick carrots, garlic, green onions, bean sprouts, large eggs, unsalted peanuts, cilantro, red pepper flakes, sesame seeds]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Chicken-Pad-Thai-2213155'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.3333333333333333',bitter = '0.6666666666666666',piquant = '0.3333333333333333'}',sourceDisplayName = 'From Jessica's Kitchen',smallImageUrls = '[http://lh5.ggpht.com/tG9DQTsQN-Q7Vgy7mt0QAEDGtpy5xIjucpNpemEpZ4FwhrhvlN-7PoNF3-ZYRBtRzXCvv8VtuxjP2py7o9PhTrY=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh5.ggpht.com/2okQfHyuVIWk5uokYUkxoKUcQGvWkoY0QMbDClsnhfFj8I125HhW-zO7TFmsSusOiqRbFJoZ8cR6hpwxJM8v1jM=s90-c'}',ingredients = '[fresh lime juice, sugar, fish sauce, chili sauce, tamarind paste, brown sugar, chicken stock, red pepper flakes, kosher salt, vegetable oil, garlic cloves, shallots, chicken, shrimp, eggs, bean sprouts, fresh cilantro, roasted peanuts, scallions, rice noodles]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-972593'}, MatchesItem{recipeName = 'Quick Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'Food & Wine',smallImageUrls = '[http://lh3.googleusercontent.com/WFJa5dApcA64f4YS5W7w-Q38pzXL8e5f1f7QNKLW9NrokqF4z5_T0k8Q01eOgECYojSj5ritfz49OYQMr3_CxS4=s90]',totalTimeInSeconds = '1800',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/18irSqmW3lj0CrrGnEUn9FaiyuzU5CLxMAYeRU-U43knhaaXzDW6hOvw_FK0uEWkZB8VrESVnd6J6WMEI1wBnow=s90-c'}',ingredients = '[thai noodles, asian fish sauce, light brown sugar, fresh lime juice, Thai bird chiles, canola oil, shallots, large garlic cloves, medium shrimp, large eggs, scallions, roasted peanuts, bean sprouts, chopped cilantro]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Quick-Shrimp-Pad-Thai-1095426'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.8333333333333334',sweet = '0.5',sour = '0.3333333333333333',bitter = '0.8333333333333334',piquant = '0.6666666666666666'}',sourceDisplayName = 'MyRecipes',smallImageUrls = '[http://lh3.googleusercontent.com/X3vmGqU0FQfHiWa-RXC2H8_j5eP7YlaMaekrKHYuyqNt8PUJyTY-OKGQemj7y-q4DoGLL9krhmfCwwpE2_VHsw=s90]',totalTimeInSeconds = '1500',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/PEwp_Rt5ikN1kriUXm34UMwVMINSK3L9GEecCkGX900bH6FIQYMH9ex7FlqAADz_qZmpZHe4mG_xFyrxs0S_=s90-c'}',ingredients = '[rice noodles, dark brown sugar, lower sodium soy sauce, fish sauce, fresh lime juice, Sriracha, canola oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh basil]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-1085805'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.5',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.16666666666666666',bitter = '0.8333333333333334',piquant = '0.16666666666666666'}',sourceDisplayName = 'Williams-Sonoma',smallImageUrls = '[http://lh4.ggpht.com/cNeTmf82YRoFFXbJ7kpBIZAZ1tOKGtMau_kEzLZcHuCsoeEL7GcoPhPVoTDKpnmpJL5X_bxPoKZm9lU_ltaS=s90]',totalTimeInSeconds = '600',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh4.ggpht.com/bnrxERK9dvDKbsEb7PabRSFC-n2VXlWXj3_2GLtjtVmmAhZoFikVq7CtggANrTwYz_LdidpSFCcdC6cWKdUS_g=s90-c'}',ingredients = '[rice noodles, asian fish sauce, fresh lime juice, sugar, canola oil, medium shrimp, garlic cloves, red pepper flakes, eggs, bean sprouts, unsalted roasted peanuts, sliced green onions, chopped fresh cilantro, chopped fresh mint]',attributes = 'Attributes{course = 'null',holiday = 'null',cuisine = '[Asian, Thai]'}',id = 'Pad-Thai-641068'}]
[INFO ] 2019-05-05 13:38:19.050 [main] YummlyDataGrabber - $$$$$$$$$$ Attribution: Attribution{logo = 'https://static.yummly.co/api-logo.png',html = 'Recipe search powered by <a href='http://www.yummly.co/recipes'><img alt='Yummly' src='https://static.yummly.co/api-logo.png'/></a>',text = 'Recipe search powered by Yummly',url = 'http://www.yummly.co/recipes/'}
[INFO ] 2019-05-05 13:38:19.050 [main] YummlyDataGrabber - $$$$$$$$$$ Facet Counts: FacetCounts{}
[INFO ] 2019-05-05 13:38:19.050 [main] YummlyDataGrabber - $$$$$$$$$$ Total Match Count: 1361
[INFO ] 2019-05-05 13:38:19.050 [main] YummlyDataGrabber - $$$$$$$$$$ Allowed Ingredients: null
[INFO ] 2019-05-05 13:38:19.051 [main] YummlyDataGrabber - $$$$$$$$$$ Excluded Ingredients: null
[INFO ] 2019-05-05 13:38:19.051 [main] YummlyDataGrabber - $$$$$$$$$$ Q: null
[INFO ] 2019-05-05 13:38:19.051 [main] TestYummlyApi - Found Criteria from Q: Classic Pad Thai
[INFO ] 2019-05-05 13:39:15.680 [http-nio-8080-exec-3] GenericDao - **********Query Using Last Name:  hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:39:20.152 [http-nio-8080-exec-3] GenericDao - **********Query by Last Name Found: [User{userId = '8', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'AdminMan'}]
[INFO ] 2019-05-05 13:39:20.152 [http-nio-8080-exec-3] GenericDao - **********Querying grocery list by user id: 8
[INFO ] 2019-05-05 13:39:20.208 [http-nio-8080-exec-3] GenericDao - *********Query found grocery lists by ID: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 13:39:20.208 [http-nio-8080-exec-3] SearchGrocerylist - Grocery List Object Results from Search by Last Name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 13:39:25.341 [http-nio-8080-exec-4] SearchGrocerylist - ********** Remote User: Tester1
[INFO ] 2019-05-05 13:39:25.341 [http-nio-8080-exec-4] GenericDao - **********Query database using the User Name: Tester1
[INFO ] 2019-05-05 13:39:25.369 [http-nio-8080-exec-4] GenericDao - Found User Name: [User{userId = '8', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'AdminMan'}]
[INFO ] 2019-05-05 13:39:25.369 [http-nio-8080-exec-4] GenericDao - **********Querying grocery list by user id: 8
[INFO ] 2019-05-05 13:39:25.402 [http-nio-8080-exec-4] GenericDao - *********Query found grocery lists by ID: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 13:39:25.403 [http-nio-8080-exec-4] SearchGrocerylist - ********** Grocery List Object by User Name Results: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 13:39:29.580 [http-nio-8080-exec-8] GenericDao - **********Query Using Last Name:  parker, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:39:29.614 [http-nio-8080-exec-8] GenericDao - **********Query by Last Name Found: [User{userId = '9', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'AdminMan'}]
[INFO ] 2019-05-05 13:39:29.614 [http-nio-8080-exec-8] GenericDao - **********Querying grocery list by user id: 9
[INFO ] 2019-05-05 13:39:29.629 [http-nio-8080-exec-8] GenericDao - *********Query found grocery lists by ID: [GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 9, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 13:39:29.630 [http-nio-8080-exec-8] SearchGrocerylist - Grocery List Object Results from Search by Last Name: [GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 9, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 13:49:15.977 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-05 13:49:15.990 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-05 13:49:15.990 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-05 13:49:18.623 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 13:49:18.747 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-05 13:49:18.748 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-05 13:49:18.748 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-05 13:49:18.817 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 13:49:18.818 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 13:49:18.919 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:49:18.919 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-05 13:49:18.920 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 13:49:18.954 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:49:18.954 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:49:18.954 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 13:49:18.969 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:49:18.970 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:49:18.990 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:49:19.018 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 13:49:19.023 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-05 13:49:19.073 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:49:19.074 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-05 13:49:19.074 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 13:49:19.096 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:49:19.151 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:49:19.151 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-05 13:49:19.152 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:49:19.165 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 13:49:19.165 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:49:19.178 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 13:49:19.179 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 13:49:19.179 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:49:19.192 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 13:49:19.192 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T13:49:19.152, ingredients = []}
[INFO ] 2019-05-05 13:49:19.224 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 455, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T13:49:19.152, ingredients = []}
[INFO ] 2019-05-05 13:49:19.225 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 455, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T13:49:19.152, ingredients = []}
[INFO ] 2019-05-05 13:49:19.282 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:49:19.283 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-05 13:49:19.283 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:49:19.313 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-05 13:49:19.313 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-05 13:49:19.339 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 13:49:19.340 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 13:49:19.382 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:49:19.382 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-05 13:49:19.394 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 13:49:19.442 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:49:19.442 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-05 13:49:19.442 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 13:49:19.498 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 13:49:19.549 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 13:49:19.551 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-05 13:49:19.552 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:49:19.564 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 13:49:19.565 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T13:49:19.552, ingredients = []}
[INFO ] 2019-05-05 13:49:19.565 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T13:49:19.552, ingredients = []}
[INFO ] 2019-05-05 13:49:19.576 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 456, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T13:49:19.552, ingredients = []}
[INFO ] 2019-05-05 13:49:19.576 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-05 13:49:19.576 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-05 13:49:19.593 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 456, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T13:49:20, ingredients = []}]
[INFO ] 2019-05-05 13:49:19.593 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-05 13:49:19.594 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-05 13:49:19.608 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 13:49:19.609 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:49:19.620 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 13:49:19.683 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:49:19.683 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-05 13:49:19.684 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:49:19.692 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 13:49:19.693 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 13:49:19.698 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 13:49:19.704 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:49:19.708 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-05 13:49:19.758 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:49:19.759 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-05 13:49:19.760 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:49:19.770 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-05 13:49:19.809 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:49:19.809 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-05 13:49:19.810 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:49:19.878 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-05 13:49:19.917 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:49:19.917 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-05 13:49:19.917 [main] UserTest - -------Locale date time: 2019-05-05T13:49:19.917----------
[INFO ] 2019-05-05 13:49:19.918 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 13:49:19.932 [main] GenericDao - **********Entity inserted: User{userId = '503', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 13:49:19.932 [main] GenericDao - **********Query database by using an ID: 503, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:49:19.937 [main] GenericDao - **********Query by ID Found: User{userId = '503', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 13:49:19.976 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:49:19.977 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-05 13:49:19.977 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 13:49:19.982 [main] GenericDao - **********Saved|Updated entity: User{userId = '504', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 13:49:19.983 [main] GenericDao - **********Query database by using an ID: 504, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:49:19.987 [main] GenericDao - **********Query by ID Found: User{userId = '504', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 13:49:19.987 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:49:19.995 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-05 13:49:19.995 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-05 13:49:19.995 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 13:49:20.004 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 13:49:20.004 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:49:20.016 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 13:49:20.061 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:49:20.062 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-05 13:49:20.062 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:49:20.076 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-05 13:49:20.077 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:49:20.118 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-05 13:49:20.161 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 13:49:20.161 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-05 13:49:20.161 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 13:49:20.166 [main] GenericDao - **********Entity inserted: User{userId = '505', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 13:49:20.166 [main] GenericDao - **********Query database by using an ID: 505, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 13:49:20.170 [main] GenericDao - **********Query by ID Found: User{userId = '505', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 13:49:21.649 [main] YummlyDataGrabber - $$$$$$$$$$ Criteria Request returned Object: Criteria{facetCounts = 'FacetCounts{}',criteria = 'Criteria{facetCounts = 'null',criteria = 'null',attribution = 'null',matches = 'null',totalMatchCount = '0',q = 'Pad Thai',allowedIngredient = 'null',excludedIngredient = 'null'}',attribution = 'Attribution{logo = 'https://static.yummly.co/api-logo.png',html = 'Recipe search powered by <a href='http://www.yummly.co/recipes'><img alt='Yummly' src='https://static.yummly.co/api-logo.png'/></a>',text = 'Recipe search powered by Yummly',url = 'http://www.yummly.co/recipes/'}',matches = '[MatchesItem{recipeName = 'Classic Pad Thai',flavors = 'null',sourceDisplayName = 'Taste',smallImageUrls = '[https://lh3.googleusercontent.com/n6-iEQ-eB_tZ2xZ_9MQ7VrviKyNUG22WwXOrQ4sCnoc3k_R3ROGhVruW2nf74SqKiqTYVpIHj4WEVPROsUEBnH0=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9YxdRCk-f2qJ6aVEuyFIfBOyK2ae_qMABx-WAboDFPkt-V_4rk3OCW6zqbBGDlq8XkPBo7v7m_FMoqhaRBHLM0=s90-c'}',ingredients = '[minced garlic, thai chiles, palm sugar, tamarind paste, asian fish sauce, fresh lime juice, pad thai noodles, canola oil, large shrimp, red pepper flakes, eggs, extra firm tofu, carrots, bean sprouts, green onions, cilantro leaves, roasted peanuts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Classic-Pad-Thai-2151767'}, MatchesItem{recipeName = 'Shrimp Pad-Thai',flavors = 'null',sourceDisplayName = 'simple.artistic.cooking',smallImageUrls = '[https://lh3.googleusercontent.com/THkysjs-7NkPHvVlAHnMQ8QJbB83_v7glyf_LjGs6buHIusQixQ5OzzNrfiTxVUxuqbHXn4MHZ6gXJ4FN3u7qBU=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/F-3Ds9UUGjz6puJq4xVBr4ISkYWN2gxjRQHpwph7YLG54JSL13A0cJVVsErotaNDg8JPdubKEE0iv1-kTiSt=s90-c'}',ingredients = '[rice noodles, low sodium soy sauce, fish sauce, fresh lime juice, dark brown sugar, Sriracha, crushed red pepper flakes, peanut oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh cilantro, limes, ginger, unsalted peanuts]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-2694178'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'A Day In The Kitchen',smallImageUrls = '[https://lh3.googleusercontent.com/GlwJwX-yAdImsrz97yzYyRAGSlPAXKIk8Bj7itYPzjLUDvmoXnBBF58avmrlL1DlnHTsB_HgQfiAndOT_cmr5mI=s90]',totalTimeInSeconds = '3600',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9o1lAlM-DruGaSqqvBMNbEwDQjkKAaT88P84Z86YQaEicB206-ria1E6xnNUeq3kOgjWmvs5kgIlh-jEUOQ=s90-c'}',ingredients = '[pad thai noodles, deveined shrimp, eggs, small carrot, green onion, garlic cloves, light olive oil, water, tamarind paste, oyster sauce, coconut sugar, fish sauce, soy sauce, bean sprouts, chopped peanuts, dried chili flakes, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Shrimp-Pad-Thai-2511725'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'null',sourceDisplayName = 'Bookcooker',smallImageUrls = '[https://lh3.googleusercontent.com/oRA3RBaVweVu-mbgLigmJBT1a5dK8mZGJgWBijAIz5kSfGy5ctOulTP3iF7HCJR3d3rnK2h2H0BEztVoGAjb3j4=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/GHOVr9l6K3s3_MIlQRGmGjE1cLy-Xnvlj94n3-RF7JdYXM-hWfFXtAJqPIkfxHTZAAbiVjeA-F57kRpXHJ7-ww=s90-c'}',ingredients = '[pad thai noodles, raw sugar, tamarind paste, fish sauce, rice vinegar, minced ginger, minced garlic, shallot, lemongrass, peanut oil, large eggs, cooked shrimp, extra firm tofu, scallions, peanuts, bean sprouts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1753549'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.3333333333333333',sweet = '0.16666666666666666',sour = '0.3333333333333333',bitter = '0.16666666666666666',piquant = '0.6666666666666666'}',sourceDisplayName = 'The Hungry Mouse',smallImageUrls = '[https://lh3.googleusercontent.com/kjWQ0yDHnfexuAGuUUb3pkrELmSDKiox3NVVVcf2qUNac9z4GdWsXu30RQomuRLuDXWUoNAJkDA-oyXOGyeT=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/taNW2mFGX9SDg4tgPbUjD5VyOulKfgmBf07EgFKYxXy1wdJXSrvZbGIKA0dYfKhKEgid5NprMS5vrv9GlwfnfA=s90-c'}',ingredients = '[rice noodles, boiling water, vegetable oil, cilantro, red chile, large shrimp, shallots, large eggs, sugar, oyster sauce, Thai fish sauce, fresh lime juice, bean sprouts, scallions, unsalted roasted peanuts, lime]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1764933'}, MatchesItem{recipeName = 'Chicken Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.8333333333333334',bitter = '0.6666666666666666',piquant = '0.5'}',sourceDisplayName = 'Cooking Classy',smallImageUrls = '[https://lh3.googleusercontent.com/wxHAOLhlPjO1Vm0nUPYfLdhlSY9fy-_LiJheciGzbVSmFY3TwK0vUD6Squ3EbFslSyzfJm_LxV8yO2mg8GoZ=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/e2DuGFKLDaj_lzdDoTUQSHq-9KeUFtlsv7-W2meNBkzn42n308SAqVC1W1BEMw_zFkAg_K1SIvAg-EFcEbcREA=s90-c'}',ingredients = '[rice noodles, boneless, skinless chicken breasts, vegetable oil, dark brown sugar, soy sauce, rice vinegar, lime juice, fish sauce, red bell pepper, matchstick carrots, garlic, green onions, bean sprouts, large eggs, unsalted peanuts, cilantro, red pepper flakes, sesame seeds]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Chicken-Pad-Thai-2213155'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.3333333333333333',bitter = '0.6666666666666666',piquant = '0.3333333333333333'}',sourceDisplayName = 'From Jessica's Kitchen',smallImageUrls = '[http://lh5.ggpht.com/tG9DQTsQN-Q7Vgy7mt0QAEDGtpy5xIjucpNpemEpZ4FwhrhvlN-7PoNF3-ZYRBtRzXCvv8VtuxjP2py7o9PhTrY=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh5.ggpht.com/2okQfHyuVIWk5uokYUkxoKUcQGvWkoY0QMbDClsnhfFj8I125HhW-zO7TFmsSusOiqRbFJoZ8cR6hpwxJM8v1jM=s90-c'}',ingredients = '[fresh lime juice, sugar, fish sauce, chili sauce, tamarind paste, brown sugar, chicken stock, red pepper flakes, kosher salt, vegetable oil, garlic cloves, shallots, chicken, shrimp, eggs, bean sprouts, fresh cilantro, roasted peanuts, scallions, rice noodles]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-972593'}, MatchesItem{recipeName = 'Quick Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'Food & Wine',smallImageUrls = '[http://lh3.googleusercontent.com/WFJa5dApcA64f4YS5W7w-Q38pzXL8e5f1f7QNKLW9NrokqF4z5_T0k8Q01eOgECYojSj5ritfz49OYQMr3_CxS4=s90]',totalTimeInSeconds = '1800',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/18irSqmW3lj0CrrGnEUn9FaiyuzU5CLxMAYeRU-U43knhaaXzDW6hOvw_FK0uEWkZB8VrESVnd6J6WMEI1wBnow=s90-c'}',ingredients = '[thai noodles, asian fish sauce, light brown sugar, fresh lime juice, Thai bird chiles, canola oil, shallots, large garlic cloves, medium shrimp, large eggs, scallions, roasted peanuts, bean sprouts, chopped cilantro]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Quick-Shrimp-Pad-Thai-1095426'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.8333333333333334',sweet = '0.5',sour = '0.3333333333333333',bitter = '0.8333333333333334',piquant = '0.6666666666666666'}',sourceDisplayName = 'MyRecipes',smallImageUrls = '[http://lh3.googleusercontent.com/X3vmGqU0FQfHiWa-RXC2H8_j5eP7YlaMaekrKHYuyqNt8PUJyTY-OKGQemj7y-q4DoGLL9krhmfCwwpE2_VHsw=s90]',totalTimeInSeconds = '1500',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/PEwp_Rt5ikN1kriUXm34UMwVMINSK3L9GEecCkGX900bH6FIQYMH9ex7FlqAADz_qZmpZHe4mG_xFyrxs0S_=s90-c'}',ingredients = '[rice noodles, dark brown sugar, lower sodium soy sauce, fish sauce, fresh lime juice, Sriracha, canola oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh basil]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-1085805'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.5',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.16666666666666666',bitter = '0.8333333333333334',piquant = '0.16666666666666666'}',sourceDisplayName = 'Williams-Sonoma',smallImageUrls = '[http://lh4.ggpht.com/cNeTmf82YRoFFXbJ7kpBIZAZ1tOKGtMau_kEzLZcHuCsoeEL7GcoPhPVoTDKpnmpJL5X_bxPoKZm9lU_ltaS=s90]',totalTimeInSeconds = '600',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh4.ggpht.com/bnrxERK9dvDKbsEb7PabRSFC-n2VXlWXj3_2GLtjtVmmAhZoFikVq7CtggANrTwYz_LdidpSFCcdC6cWKdUS_g=s90-c'}',ingredients = '[rice noodles, asian fish sauce, fresh lime juice, sugar, canola oil, medium shrimp, garlic cloves, red pepper flakes, eggs, bean sprouts, unsalted roasted peanuts, sliced green onions, chopped fresh cilantro, chopped fresh mint]',attributes = 'Attributes{course = 'null',holiday = 'null',cuisine = '[Asian, Thai]'}',id = 'Pad-Thai-641068'}]',totalMatchCount = '1361',q = 'null',allowedIngredient = 'null',excludedIngredient = 'null'}
[INFO ] 2019-05-05 13:49:21.650 [main] YummlyDataGrabber - $$$$$$$$$$ Ingredients: minced garlic
[INFO ] 2019-05-05 13:49:21.650 [main] YummlyDataGrabber - $$$$$$$$$$ Matches: [MatchesItem{recipeName = 'Classic Pad Thai',flavors = 'null',sourceDisplayName = 'Taste',smallImageUrls = '[https://lh3.googleusercontent.com/n6-iEQ-eB_tZ2xZ_9MQ7VrviKyNUG22WwXOrQ4sCnoc3k_R3ROGhVruW2nf74SqKiqTYVpIHj4WEVPROsUEBnH0=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9YxdRCk-f2qJ6aVEuyFIfBOyK2ae_qMABx-WAboDFPkt-V_4rk3OCW6zqbBGDlq8XkPBo7v7m_FMoqhaRBHLM0=s90-c'}',ingredients = '[minced garlic, thai chiles, palm sugar, tamarind paste, asian fish sauce, fresh lime juice, pad thai noodles, canola oil, large shrimp, red pepper flakes, eggs, extra firm tofu, carrots, bean sprouts, green onions, cilantro leaves, roasted peanuts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Classic-Pad-Thai-2151767'}, MatchesItem{recipeName = 'Shrimp Pad-Thai',flavors = 'null',sourceDisplayName = 'simple.artistic.cooking',smallImageUrls = '[https://lh3.googleusercontent.com/THkysjs-7NkPHvVlAHnMQ8QJbB83_v7glyf_LjGs6buHIusQixQ5OzzNrfiTxVUxuqbHXn4MHZ6gXJ4FN3u7qBU=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/F-3Ds9UUGjz6puJq4xVBr4ISkYWN2gxjRQHpwph7YLG54JSL13A0cJVVsErotaNDg8JPdubKEE0iv1-kTiSt=s90-c'}',ingredients = '[rice noodles, low sodium soy sauce, fish sauce, fresh lime juice, dark brown sugar, Sriracha, crushed red pepper flakes, peanut oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh cilantro, limes, ginger, unsalted peanuts]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-2694178'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'A Day In The Kitchen',smallImageUrls = '[https://lh3.googleusercontent.com/GlwJwX-yAdImsrz97yzYyRAGSlPAXKIk8Bj7itYPzjLUDvmoXnBBF58avmrlL1DlnHTsB_HgQfiAndOT_cmr5mI=s90]',totalTimeInSeconds = '3600',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9o1lAlM-DruGaSqqvBMNbEwDQjkKAaT88P84Z86YQaEicB206-ria1E6xnNUeq3kOgjWmvs5kgIlh-jEUOQ=s90-c'}',ingredients = '[pad thai noodles, deveined shrimp, eggs, small carrot, green onion, garlic cloves, light olive oil, water, tamarind paste, oyster sauce, coconut sugar, fish sauce, soy sauce, bean sprouts, chopped peanuts, dried chili flakes, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Shrimp-Pad-Thai-2511725'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'null',sourceDisplayName = 'Bookcooker',smallImageUrls = '[https://lh3.googleusercontent.com/oRA3RBaVweVu-mbgLigmJBT1a5dK8mZGJgWBijAIz5kSfGy5ctOulTP3iF7HCJR3d3rnK2h2H0BEztVoGAjb3j4=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/GHOVr9l6K3s3_MIlQRGmGjE1cLy-Xnvlj94n3-RF7JdYXM-hWfFXtAJqPIkfxHTZAAbiVjeA-F57kRpXHJ7-ww=s90-c'}',ingredients = '[pad thai noodles, raw sugar, tamarind paste, fish sauce, rice vinegar, minced ginger, minced garlic, shallot, lemongrass, peanut oil, large eggs, cooked shrimp, extra firm tofu, scallions, peanuts, bean sprouts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1753549'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.3333333333333333',sweet = '0.16666666666666666',sour = '0.3333333333333333',bitter = '0.16666666666666666',piquant = '0.6666666666666666'}',sourceDisplayName = 'The Hungry Mouse',smallImageUrls = '[https://lh3.googleusercontent.com/kjWQ0yDHnfexuAGuUUb3pkrELmSDKiox3NVVVcf2qUNac9z4GdWsXu30RQomuRLuDXWUoNAJkDA-oyXOGyeT=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/taNW2mFGX9SDg4tgPbUjD5VyOulKfgmBf07EgFKYxXy1wdJXSrvZbGIKA0dYfKhKEgid5NprMS5vrv9GlwfnfA=s90-c'}',ingredients = '[rice noodles, boiling water, vegetable oil, cilantro, red chile, large shrimp, shallots, large eggs, sugar, oyster sauce, Thai fish sauce, fresh lime juice, bean sprouts, scallions, unsalted roasted peanuts, lime]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1764933'}, MatchesItem{recipeName = 'Chicken Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.8333333333333334',bitter = '0.6666666666666666',piquant = '0.5'}',sourceDisplayName = 'Cooking Classy',smallImageUrls = '[https://lh3.googleusercontent.com/wxHAOLhlPjO1Vm0nUPYfLdhlSY9fy-_LiJheciGzbVSmFY3TwK0vUD6Squ3EbFslSyzfJm_LxV8yO2mg8GoZ=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/e2DuGFKLDaj_lzdDoTUQSHq-9KeUFtlsv7-W2meNBkzn42n308SAqVC1W1BEMw_zFkAg_K1SIvAg-EFcEbcREA=s90-c'}',ingredients = '[rice noodles, boneless, skinless chicken breasts, vegetable oil, dark brown sugar, soy sauce, rice vinegar, lime juice, fish sauce, red bell pepper, matchstick carrots, garlic, green onions, bean sprouts, large eggs, unsalted peanuts, cilantro, red pepper flakes, sesame seeds]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Chicken-Pad-Thai-2213155'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.3333333333333333',bitter = '0.6666666666666666',piquant = '0.3333333333333333'}',sourceDisplayName = 'From Jessica's Kitchen',smallImageUrls = '[http://lh5.ggpht.com/tG9DQTsQN-Q7Vgy7mt0QAEDGtpy5xIjucpNpemEpZ4FwhrhvlN-7PoNF3-ZYRBtRzXCvv8VtuxjP2py7o9PhTrY=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh5.ggpht.com/2okQfHyuVIWk5uokYUkxoKUcQGvWkoY0QMbDClsnhfFj8I125HhW-zO7TFmsSusOiqRbFJoZ8cR6hpwxJM8v1jM=s90-c'}',ingredients = '[fresh lime juice, sugar, fish sauce, chili sauce, tamarind paste, brown sugar, chicken stock, red pepper flakes, kosher salt, vegetable oil, garlic cloves, shallots, chicken, shrimp, eggs, bean sprouts, fresh cilantro, roasted peanuts, scallions, rice noodles]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-972593'}, MatchesItem{recipeName = 'Quick Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'Food & Wine',smallImageUrls = '[http://lh3.googleusercontent.com/WFJa5dApcA64f4YS5W7w-Q38pzXL8e5f1f7QNKLW9NrokqF4z5_T0k8Q01eOgECYojSj5ritfz49OYQMr3_CxS4=s90]',totalTimeInSeconds = '1800',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/18irSqmW3lj0CrrGnEUn9FaiyuzU5CLxMAYeRU-U43knhaaXzDW6hOvw_FK0uEWkZB8VrESVnd6J6WMEI1wBnow=s90-c'}',ingredients = '[thai noodles, asian fish sauce, light brown sugar, fresh lime juice, Thai bird chiles, canola oil, shallots, large garlic cloves, medium shrimp, large eggs, scallions, roasted peanuts, bean sprouts, chopped cilantro]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Quick-Shrimp-Pad-Thai-1095426'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.8333333333333334',sweet = '0.5',sour = '0.3333333333333333',bitter = '0.8333333333333334',piquant = '0.6666666666666666'}',sourceDisplayName = 'MyRecipes',smallImageUrls = '[http://lh3.googleusercontent.com/X3vmGqU0FQfHiWa-RXC2H8_j5eP7YlaMaekrKHYuyqNt8PUJyTY-OKGQemj7y-q4DoGLL9krhmfCwwpE2_VHsw=s90]',totalTimeInSeconds = '1500',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/PEwp_Rt5ikN1kriUXm34UMwVMINSK3L9GEecCkGX900bH6FIQYMH9ex7FlqAADz_qZmpZHe4mG_xFyrxs0S_=s90-c'}',ingredients = '[rice noodles, dark brown sugar, lower sodium soy sauce, fish sauce, fresh lime juice, Sriracha, canola oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh basil]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-1085805'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.5',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.16666666666666666',bitter = '0.8333333333333334',piquant = '0.16666666666666666'}',sourceDisplayName = 'Williams-Sonoma',smallImageUrls = '[http://lh4.ggpht.com/cNeTmf82YRoFFXbJ7kpBIZAZ1tOKGtMau_kEzLZcHuCsoeEL7GcoPhPVoTDKpnmpJL5X_bxPoKZm9lU_ltaS=s90]',totalTimeInSeconds = '600',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh4.ggpht.com/bnrxERK9dvDKbsEb7PabRSFC-n2VXlWXj3_2GLtjtVmmAhZoFikVq7CtggANrTwYz_LdidpSFCcdC6cWKdUS_g=s90-c'}',ingredients = '[rice noodles, asian fish sauce, fresh lime juice, sugar, canola oil, medium shrimp, garlic cloves, red pepper flakes, eggs, bean sprouts, unsalted roasted peanuts, sliced green onions, chopped fresh cilantro, chopped fresh mint]',attributes = 'Attributes{course = 'null',holiday = 'null',cuisine = '[Asian, Thai]'}',id = 'Pad-Thai-641068'}]
[INFO ] 2019-05-05 13:49:21.651 [main] YummlyDataGrabber - $$$$$$$$$$ Attribution: Attribution{logo = 'https://static.yummly.co/api-logo.png',html = 'Recipe search powered by <a href='http://www.yummly.co/recipes'><img alt='Yummly' src='https://static.yummly.co/api-logo.png'/></a>',text = 'Recipe search powered by Yummly',url = 'http://www.yummly.co/recipes/'}
[INFO ] 2019-05-05 13:49:21.652 [main] YummlyDataGrabber - $$$$$$$$$$ Facet Counts: FacetCounts{}
[INFO ] 2019-05-05 13:49:21.652 [main] YummlyDataGrabber - $$$$$$$$$$ Total Match Count: 1361
[INFO ] 2019-05-05 13:49:21.652 [main] YummlyDataGrabber - $$$$$$$$$$ Allowed Ingredients: null
[INFO ] 2019-05-05 13:49:21.652 [main] YummlyDataGrabber - $$$$$$$$$$ Excluded Ingredients: null
[INFO ] 2019-05-05 13:49:21.652 [main] YummlyDataGrabber - $$$$$$$$$$ Q: null
[INFO ] 2019-05-05 13:49:21.652 [main] TestYummlyApi - Found Criteria from Q: Classic Pad Thai
[INFO ] 2019-05-05 14:05:10.074 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-05 14:05:10.085 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-05 14:05:10.086 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-05 14:05:12.664 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 14:05:12.740 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-05 14:05:12.741 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-05 14:05:12.741 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-05 14:05:12.816 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 14:05:12.817 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 14:05:12.918 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 14:05:12.918 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-05 14:05:12.918 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 14:05:12.961 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 14:05:12.961 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 14:05:12.962 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 14:05:12.989 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 14:05:12.989 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 14:05:13.010 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 14:05:13.060 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 14:05:13.073 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-05 14:05:13.128 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 14:05:13.130 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-05 14:05:13.130 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 14:05:13.152 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 14:05:13.242 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 14:05:13.242 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-05 14:05:13.246 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:05:13.275 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 14:05:13.276 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:05:13.347 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 14:05:13.348 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 14:05:13.349 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:05:13.381 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 14:05:13.381 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T14:05:13.246, ingredients = []}
[INFO ] 2019-05-05 14:05:13.416 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 458, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T14:05:13.246, ingredients = []}
[INFO ] 2019-05-05 14:05:13.416 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 458, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T14:05:13.246, ingredients = []}
[INFO ] 2019-05-05 14:05:13.480 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 14:05:13.481 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-05 14:05:13.481 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:05:13.521 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-05 14:05:13.522 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-05 14:05:13.546 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 14:05:13.547 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 14:05:13.597 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 14:05:13.597 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-05 14:05:13.620 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 14:05:13.659 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 14:05:13.660 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-05 14:05:13.660 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 14:05:13.712 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 14:05:13.767 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 14:05:13.768 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-05 14:05:13.768 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:05:13.782 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 14:05:13.784 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T14:05:13.768, ingredients = []}
[INFO ] 2019-05-05 14:05:13.784 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T14:05:13.768, ingredients = []}
[INFO ] 2019-05-05 14:05:13.797 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 459, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T14:05:13.768, ingredients = []}
[INFO ] 2019-05-05 14:05:13.798 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-05 14:05:13.798 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-05 14:05:13.821 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 459, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T14:05:14, ingredients = []}]
[INFO ] 2019-05-05 14:05:13.821 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-05 14:05:13.822 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-05 14:05:13.838 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 14:05:13.838 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 14:05:13.859 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 14:05:13.950 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 14:05:13.951 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-05 14:05:13.951 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:05:13.957 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 14:05:13.957 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 14:05:13.959 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 14:05:13.965 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:05:13.970 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-05 14:05:14.023 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 14:05:14.025 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-05 14:05:14.025 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:05:14.038 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-05 14:05:14.086 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 14:05:14.088 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-05 14:05:14.090 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:05:14.198 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-05 14:05:14.277 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 14:05:14.277 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-05 14:05:14.278 [main] UserTest - -------Locale date time: 2019-05-05T14:05:14.278----------
[INFO ] 2019-05-05 14:05:14.279 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 14:05:14.295 [main] GenericDao - **********Entity inserted: User{userId = '506', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 14:05:14.297 [main] GenericDao - **********Query database by using an ID: 506, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:05:14.315 [main] GenericDao - **********Query by ID Found: User{userId = '506', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 14:05:14.363 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 14:05:14.363 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-05 14:05:14.364 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 14:05:14.372 [main] GenericDao - **********Saved|Updated entity: User{userId = '507', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 14:05:14.373 [main] GenericDao - **********Query database by using an ID: 507, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:05:14.379 [main] GenericDao - **********Query by ID Found: User{userId = '507', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 14:05:14.379 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:05:14.388 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-05 14:05:14.388 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-05 14:05:14.388 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 14:05:14.399 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 14:05:14.399 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:05:14.413 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 14:05:14.452 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 14:05:14.452 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-05 14:05:14.453 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:05:14.468 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-05 14:05:14.468 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:05:14.500 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-05 14:05:14.536 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 14:05:14.537 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-05 14:05:14.538 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 14:05:14.544 [main] GenericDao - **********Entity inserted: User{userId = '508', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 14:05:14.545 [main] GenericDao - **********Query database by using an ID: 508, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:05:14.551 [main] GenericDao - **********Query by ID Found: User{userId = '508', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 14:05:16.459 [main] YummlyDataGrabber - $$$$$$$$$$ Criteria Request returned Object: Criteria{facetCounts = 'FacetCounts{}',criteria = 'Criteria{facetCounts = 'null',criteria = 'null',attribution = 'null',matches = 'null',totalMatchCount = '0',q = 'Pad Thai',allowedIngredient = 'null',excludedIngredient = 'null'}',attribution = 'Attribution{logo = 'https://static.yummly.co/api-logo.png',html = 'Recipe search powered by <a href='http://www.yummly.co/recipes'><img alt='Yummly' src='https://static.yummly.co/api-logo.png'/></a>',text = 'Recipe search powered by Yummly',url = 'http://www.yummly.co/recipes/'}',matches = '[MatchesItem{recipeName = 'Classic Pad Thai',flavors = 'null',sourceDisplayName = 'Taste',smallImageUrls = '[https://lh3.googleusercontent.com/n6-iEQ-eB_tZ2xZ_9MQ7VrviKyNUG22WwXOrQ4sCnoc3k_R3ROGhVruW2nf74SqKiqTYVpIHj4WEVPROsUEBnH0=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9YxdRCk-f2qJ6aVEuyFIfBOyK2ae_qMABx-WAboDFPkt-V_4rk3OCW6zqbBGDlq8XkPBo7v7m_FMoqhaRBHLM0=s90-c'}',ingredients = '[minced garlic, thai chiles, palm sugar, tamarind paste, asian fish sauce, fresh lime juice, pad thai noodles, canola oil, large shrimp, red pepper flakes, eggs, extra firm tofu, carrots, bean sprouts, green onions, cilantro leaves, roasted peanuts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Classic-Pad-Thai-2151767'}, MatchesItem{recipeName = 'Shrimp Pad-Thai',flavors = 'null',sourceDisplayName = 'simple.artistic.cooking',smallImageUrls = '[https://lh3.googleusercontent.com/THkysjs-7NkPHvVlAHnMQ8QJbB83_v7glyf_LjGs6buHIusQixQ5OzzNrfiTxVUxuqbHXn4MHZ6gXJ4FN3u7qBU=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/F-3Ds9UUGjz6puJq4xVBr4ISkYWN2gxjRQHpwph7YLG54JSL13A0cJVVsErotaNDg8JPdubKEE0iv1-kTiSt=s90-c'}',ingredients = '[rice noodles, low sodium soy sauce, fish sauce, fresh lime juice, dark brown sugar, Sriracha, crushed red pepper flakes, peanut oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh cilantro, limes, ginger, unsalted peanuts]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-2694178'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'A Day In The Kitchen',smallImageUrls = '[https://lh3.googleusercontent.com/GlwJwX-yAdImsrz97yzYyRAGSlPAXKIk8Bj7itYPzjLUDvmoXnBBF58avmrlL1DlnHTsB_HgQfiAndOT_cmr5mI=s90]',totalTimeInSeconds = '3600',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9o1lAlM-DruGaSqqvBMNbEwDQjkKAaT88P84Z86YQaEicB206-ria1E6xnNUeq3kOgjWmvs5kgIlh-jEUOQ=s90-c'}',ingredients = '[pad thai noodles, deveined shrimp, eggs, small carrot, green onion, garlic cloves, light olive oil, water, tamarind paste, oyster sauce, coconut sugar, fish sauce, soy sauce, bean sprouts, chopped peanuts, dried chili flakes, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Shrimp-Pad-Thai-2511725'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'null',sourceDisplayName = 'Bookcooker',smallImageUrls = '[https://lh3.googleusercontent.com/oRA3RBaVweVu-mbgLigmJBT1a5dK8mZGJgWBijAIz5kSfGy5ctOulTP3iF7HCJR3d3rnK2h2H0BEztVoGAjb3j4=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/GHOVr9l6K3s3_MIlQRGmGjE1cLy-Xnvlj94n3-RF7JdYXM-hWfFXtAJqPIkfxHTZAAbiVjeA-F57kRpXHJ7-ww=s90-c'}',ingredients = '[pad thai noodles, raw sugar, tamarind paste, fish sauce, rice vinegar, minced ginger, minced garlic, shallot, lemongrass, peanut oil, large eggs, cooked shrimp, extra firm tofu, scallions, peanuts, bean sprouts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1753549'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.3333333333333333',sweet = '0.16666666666666666',sour = '0.3333333333333333',bitter = '0.16666666666666666',piquant = '0.6666666666666666'}',sourceDisplayName = 'The Hungry Mouse',smallImageUrls = '[https://lh3.googleusercontent.com/kjWQ0yDHnfexuAGuUUb3pkrELmSDKiox3NVVVcf2qUNac9z4GdWsXu30RQomuRLuDXWUoNAJkDA-oyXOGyeT=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/taNW2mFGX9SDg4tgPbUjD5VyOulKfgmBf07EgFKYxXy1wdJXSrvZbGIKA0dYfKhKEgid5NprMS5vrv9GlwfnfA=s90-c'}',ingredients = '[rice noodles, boiling water, vegetable oil, cilantro, red chile, large shrimp, shallots, large eggs, sugar, oyster sauce, Thai fish sauce, fresh lime juice, bean sprouts, scallions, unsalted roasted peanuts, lime]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1764933'}, MatchesItem{recipeName = 'Chicken Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.8333333333333334',bitter = '0.6666666666666666',piquant = '0.5'}',sourceDisplayName = 'Cooking Classy',smallImageUrls = '[https://lh3.googleusercontent.com/wxHAOLhlPjO1Vm0nUPYfLdhlSY9fy-_LiJheciGzbVSmFY3TwK0vUD6Squ3EbFslSyzfJm_LxV8yO2mg8GoZ=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/e2DuGFKLDaj_lzdDoTUQSHq-9KeUFtlsv7-W2meNBkzn42n308SAqVC1W1BEMw_zFkAg_K1SIvAg-EFcEbcREA=s90-c'}',ingredients = '[rice noodles, boneless, skinless chicken breasts, vegetable oil, dark brown sugar, soy sauce, rice vinegar, lime juice, fish sauce, red bell pepper, matchstick carrots, garlic, green onions, bean sprouts, large eggs, unsalted peanuts, cilantro, red pepper flakes, sesame seeds]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Chicken-Pad-Thai-2213155'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.3333333333333333',bitter = '0.6666666666666666',piquant = '0.3333333333333333'}',sourceDisplayName = 'From Jessica's Kitchen',smallImageUrls = '[http://lh5.ggpht.com/tG9DQTsQN-Q7Vgy7mt0QAEDGtpy5xIjucpNpemEpZ4FwhrhvlN-7PoNF3-ZYRBtRzXCvv8VtuxjP2py7o9PhTrY=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh5.ggpht.com/2okQfHyuVIWk5uokYUkxoKUcQGvWkoY0QMbDClsnhfFj8I125HhW-zO7TFmsSusOiqRbFJoZ8cR6hpwxJM8v1jM=s90-c'}',ingredients = '[fresh lime juice, sugar, fish sauce, chili sauce, tamarind paste, brown sugar, chicken stock, red pepper flakes, kosher salt, vegetable oil, garlic cloves, shallots, chicken, shrimp, eggs, bean sprouts, fresh cilantro, roasted peanuts, scallions, rice noodles]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-972593'}, MatchesItem{recipeName = 'Quick Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'Food & Wine',smallImageUrls = '[http://lh3.googleusercontent.com/WFJa5dApcA64f4YS5W7w-Q38pzXL8e5f1f7QNKLW9NrokqF4z5_T0k8Q01eOgECYojSj5ritfz49OYQMr3_CxS4=s90]',totalTimeInSeconds = '1800',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/18irSqmW3lj0CrrGnEUn9FaiyuzU5CLxMAYeRU-U43knhaaXzDW6hOvw_FK0uEWkZB8VrESVnd6J6WMEI1wBnow=s90-c'}',ingredients = '[thai noodles, asian fish sauce, light brown sugar, fresh lime juice, Thai bird chiles, canola oil, shallots, large garlic cloves, medium shrimp, large eggs, scallions, roasted peanuts, bean sprouts, chopped cilantro]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Quick-Shrimp-Pad-Thai-1095426'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.8333333333333334',sweet = '0.5',sour = '0.3333333333333333',bitter = '0.8333333333333334',piquant = '0.6666666666666666'}',sourceDisplayName = 'MyRecipes',smallImageUrls = '[http://lh3.googleusercontent.com/X3vmGqU0FQfHiWa-RXC2H8_j5eP7YlaMaekrKHYuyqNt8PUJyTY-OKGQemj7y-q4DoGLL9krhmfCwwpE2_VHsw=s90]',totalTimeInSeconds = '1500',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/PEwp_Rt5ikN1kriUXm34UMwVMINSK3L9GEecCkGX900bH6FIQYMH9ex7FlqAADz_qZmpZHe4mG_xFyrxs0S_=s90-c'}',ingredients = '[rice noodles, dark brown sugar, lower sodium soy sauce, fish sauce, fresh lime juice, Sriracha, canola oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh basil]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-1085805'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.5',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.16666666666666666',bitter = '0.8333333333333334',piquant = '0.16666666666666666'}',sourceDisplayName = 'Williams-Sonoma',smallImageUrls = '[http://lh4.ggpht.com/cNeTmf82YRoFFXbJ7kpBIZAZ1tOKGtMau_kEzLZcHuCsoeEL7GcoPhPVoTDKpnmpJL5X_bxPoKZm9lU_ltaS=s90]',totalTimeInSeconds = '600',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh4.ggpht.com/bnrxERK9dvDKbsEb7PabRSFC-n2VXlWXj3_2GLtjtVmmAhZoFikVq7CtggANrTwYz_LdidpSFCcdC6cWKdUS_g=s90-c'}',ingredients = '[rice noodles, asian fish sauce, fresh lime juice, sugar, canola oil, medium shrimp, garlic cloves, red pepper flakes, eggs, bean sprouts, unsalted roasted peanuts, sliced green onions, chopped fresh cilantro, chopped fresh mint]',attributes = 'Attributes{course = 'null',holiday = 'null',cuisine = '[Asian, Thai]'}',id = 'Pad-Thai-641068'}]',totalMatchCount = '1361',q = 'null',allowedIngredient = 'null',excludedIngredient = 'null'}
[INFO ] 2019-05-05 14:05:16.460 [main] YummlyDataGrabber - $$$$$$$$$$ Ingredients: minced garlic
[INFO ] 2019-05-05 14:05:16.464 [main] YummlyDataGrabber - $$$$$$$$$$ Matches: [MatchesItem{recipeName = 'Classic Pad Thai',flavors = 'null',sourceDisplayName = 'Taste',smallImageUrls = '[https://lh3.googleusercontent.com/n6-iEQ-eB_tZ2xZ_9MQ7VrviKyNUG22WwXOrQ4sCnoc3k_R3ROGhVruW2nf74SqKiqTYVpIHj4WEVPROsUEBnH0=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9YxdRCk-f2qJ6aVEuyFIfBOyK2ae_qMABx-WAboDFPkt-V_4rk3OCW6zqbBGDlq8XkPBo7v7m_FMoqhaRBHLM0=s90-c'}',ingredients = '[minced garlic, thai chiles, palm sugar, tamarind paste, asian fish sauce, fresh lime juice, pad thai noodles, canola oil, large shrimp, red pepper flakes, eggs, extra firm tofu, carrots, bean sprouts, green onions, cilantro leaves, roasted peanuts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Classic-Pad-Thai-2151767'}, MatchesItem{recipeName = 'Shrimp Pad-Thai',flavors = 'null',sourceDisplayName = 'simple.artistic.cooking',smallImageUrls = '[https://lh3.googleusercontent.com/THkysjs-7NkPHvVlAHnMQ8QJbB83_v7glyf_LjGs6buHIusQixQ5OzzNrfiTxVUxuqbHXn4MHZ6gXJ4FN3u7qBU=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/F-3Ds9UUGjz6puJq4xVBr4ISkYWN2gxjRQHpwph7YLG54JSL13A0cJVVsErotaNDg8JPdubKEE0iv1-kTiSt=s90-c'}',ingredients = '[rice noodles, low sodium soy sauce, fish sauce, fresh lime juice, dark brown sugar, Sriracha, crushed red pepper flakes, peanut oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh cilantro, limes, ginger, unsalted peanuts]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-2694178'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'A Day In The Kitchen',smallImageUrls = '[https://lh3.googleusercontent.com/GlwJwX-yAdImsrz97yzYyRAGSlPAXKIk8Bj7itYPzjLUDvmoXnBBF58avmrlL1DlnHTsB_HgQfiAndOT_cmr5mI=s90]',totalTimeInSeconds = '3600',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9o1lAlM-DruGaSqqvBMNbEwDQjkKAaT88P84Z86YQaEicB206-ria1E6xnNUeq3kOgjWmvs5kgIlh-jEUOQ=s90-c'}',ingredients = '[pad thai noodles, deveined shrimp, eggs, small carrot, green onion, garlic cloves, light olive oil, water, tamarind paste, oyster sauce, coconut sugar, fish sauce, soy sauce, bean sprouts, chopped peanuts, dried chili flakes, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Shrimp-Pad-Thai-2511725'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'null',sourceDisplayName = 'Bookcooker',smallImageUrls = '[https://lh3.googleusercontent.com/oRA3RBaVweVu-mbgLigmJBT1a5dK8mZGJgWBijAIz5kSfGy5ctOulTP3iF7HCJR3d3rnK2h2H0BEztVoGAjb3j4=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/GHOVr9l6K3s3_MIlQRGmGjE1cLy-Xnvlj94n3-RF7JdYXM-hWfFXtAJqPIkfxHTZAAbiVjeA-F57kRpXHJ7-ww=s90-c'}',ingredients = '[pad thai noodles, raw sugar, tamarind paste, fish sauce, rice vinegar, minced ginger, minced garlic, shallot, lemongrass, peanut oil, large eggs, cooked shrimp, extra firm tofu, scallions, peanuts, bean sprouts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1753549'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.3333333333333333',sweet = '0.16666666666666666',sour = '0.3333333333333333',bitter = '0.16666666666666666',piquant = '0.6666666666666666'}',sourceDisplayName = 'The Hungry Mouse',smallImageUrls = '[https://lh3.googleusercontent.com/kjWQ0yDHnfexuAGuUUb3pkrELmSDKiox3NVVVcf2qUNac9z4GdWsXu30RQomuRLuDXWUoNAJkDA-oyXOGyeT=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/taNW2mFGX9SDg4tgPbUjD5VyOulKfgmBf07EgFKYxXy1wdJXSrvZbGIKA0dYfKhKEgid5NprMS5vrv9GlwfnfA=s90-c'}',ingredients = '[rice noodles, boiling water, vegetable oil, cilantro, red chile, large shrimp, shallots, large eggs, sugar, oyster sauce, Thai fish sauce, fresh lime juice, bean sprouts, scallions, unsalted roasted peanuts, lime]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1764933'}, MatchesItem{recipeName = 'Chicken Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.8333333333333334',bitter = '0.6666666666666666',piquant = '0.5'}',sourceDisplayName = 'Cooking Classy',smallImageUrls = '[https://lh3.googleusercontent.com/wxHAOLhlPjO1Vm0nUPYfLdhlSY9fy-_LiJheciGzbVSmFY3TwK0vUD6Squ3EbFslSyzfJm_LxV8yO2mg8GoZ=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/e2DuGFKLDaj_lzdDoTUQSHq-9KeUFtlsv7-W2meNBkzn42n308SAqVC1W1BEMw_zFkAg_K1SIvAg-EFcEbcREA=s90-c'}',ingredients = '[rice noodles, boneless, skinless chicken breasts, vegetable oil, dark brown sugar, soy sauce, rice vinegar, lime juice, fish sauce, red bell pepper, matchstick carrots, garlic, green onions, bean sprouts, large eggs, unsalted peanuts, cilantro, red pepper flakes, sesame seeds]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Chicken-Pad-Thai-2213155'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.3333333333333333',bitter = '0.6666666666666666',piquant = '0.3333333333333333'}',sourceDisplayName = 'From Jessica's Kitchen',smallImageUrls = '[http://lh5.ggpht.com/tG9DQTsQN-Q7Vgy7mt0QAEDGtpy5xIjucpNpemEpZ4FwhrhvlN-7PoNF3-ZYRBtRzXCvv8VtuxjP2py7o9PhTrY=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh5.ggpht.com/2okQfHyuVIWk5uokYUkxoKUcQGvWkoY0QMbDClsnhfFj8I125HhW-zO7TFmsSusOiqRbFJoZ8cR6hpwxJM8v1jM=s90-c'}',ingredients = '[fresh lime juice, sugar, fish sauce, chili sauce, tamarind paste, brown sugar, chicken stock, red pepper flakes, kosher salt, vegetable oil, garlic cloves, shallots, chicken, shrimp, eggs, bean sprouts, fresh cilantro, roasted peanuts, scallions, rice noodles]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-972593'}, MatchesItem{recipeName = 'Quick Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'Food & Wine',smallImageUrls = '[http://lh3.googleusercontent.com/WFJa5dApcA64f4YS5W7w-Q38pzXL8e5f1f7QNKLW9NrokqF4z5_T0k8Q01eOgECYojSj5ritfz49OYQMr3_CxS4=s90]',totalTimeInSeconds = '1800',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/18irSqmW3lj0CrrGnEUn9FaiyuzU5CLxMAYeRU-U43knhaaXzDW6hOvw_FK0uEWkZB8VrESVnd6J6WMEI1wBnow=s90-c'}',ingredients = '[thai noodles, asian fish sauce, light brown sugar, fresh lime juice, Thai bird chiles, canola oil, shallots, large garlic cloves, medium shrimp, large eggs, scallions, roasted peanuts, bean sprouts, chopped cilantro]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Quick-Shrimp-Pad-Thai-1095426'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.8333333333333334',sweet = '0.5',sour = '0.3333333333333333',bitter = '0.8333333333333334',piquant = '0.6666666666666666'}',sourceDisplayName = 'MyRecipes',smallImageUrls = '[http://lh3.googleusercontent.com/X3vmGqU0FQfHiWa-RXC2H8_j5eP7YlaMaekrKHYuyqNt8PUJyTY-OKGQemj7y-q4DoGLL9krhmfCwwpE2_VHsw=s90]',totalTimeInSeconds = '1500',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/PEwp_Rt5ikN1kriUXm34UMwVMINSK3L9GEecCkGX900bH6FIQYMH9ex7FlqAADz_qZmpZHe4mG_xFyrxs0S_=s90-c'}',ingredients = '[rice noodles, dark brown sugar, lower sodium soy sauce, fish sauce, fresh lime juice, Sriracha, canola oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh basil]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-1085805'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.5',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.16666666666666666',bitter = '0.8333333333333334',piquant = '0.16666666666666666'}',sourceDisplayName = 'Williams-Sonoma',smallImageUrls = '[http://lh4.ggpht.com/cNeTmf82YRoFFXbJ7kpBIZAZ1tOKGtMau_kEzLZcHuCsoeEL7GcoPhPVoTDKpnmpJL5X_bxPoKZm9lU_ltaS=s90]',totalTimeInSeconds = '600',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh4.ggpht.com/bnrxERK9dvDKbsEb7PabRSFC-n2VXlWXj3_2GLtjtVmmAhZoFikVq7CtggANrTwYz_LdidpSFCcdC6cWKdUS_g=s90-c'}',ingredients = '[rice noodles, asian fish sauce, fresh lime juice, sugar, canola oil, medium shrimp, garlic cloves, red pepper flakes, eggs, bean sprouts, unsalted roasted peanuts, sliced green onions, chopped fresh cilantro, chopped fresh mint]',attributes = 'Attributes{course = 'null',holiday = 'null',cuisine = '[Asian, Thai]'}',id = 'Pad-Thai-641068'}]
[INFO ] 2019-05-05 14:05:16.466 [main] YummlyDataGrabber - $$$$$$$$$$ Attribution: Attribution{logo = 'https://static.yummly.co/api-logo.png',html = 'Recipe search powered by <a href='http://www.yummly.co/recipes'><img alt='Yummly' src='https://static.yummly.co/api-logo.png'/></a>',text = 'Recipe search powered by Yummly',url = 'http://www.yummly.co/recipes/'}
[INFO ] 2019-05-05 14:05:16.466 [main] YummlyDataGrabber - $$$$$$$$$$ Facet Counts: FacetCounts{}
[INFO ] 2019-05-05 14:05:16.466 [main] YummlyDataGrabber - $$$$$$$$$$ Total Match Count: 1361
[INFO ] 2019-05-05 14:05:16.466 [main] YummlyDataGrabber - $$$$$$$$$$ Allowed Ingredients: null
[INFO ] 2019-05-05 14:05:16.466 [main] YummlyDataGrabber - $$$$$$$$$$ Excluded Ingredients: null
[INFO ] 2019-05-05 14:05:16.466 [main] YummlyDataGrabber - $$$$$$$$$$ Q: null
[INFO ] 2019-05-05 14:05:16.467 [main] TestYummlyApi - Found Criteria from Q: Classic Pad Thai
[INFO ] 2019-05-05 14:06:55.439 [http-nio-8080-exec-5] SearchGrocerylist - ********** Remote User: Tester1
[INFO ] 2019-05-05 14:06:55.452 [http-nio-8080-exec-5] GenericDao - **********Query database using the User Name: Tester1
[INFO ] 2019-05-05 14:07:03.195 [http-nio-8080-exec-5] GenericDao - Found User Name: [User{userId = '8', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'AdminMan'}]
[INFO ] 2019-05-05 14:07:03.198 [http-nio-8080-exec-5] GenericDao - **********Querying grocery list by user id: 8
[INFO ] 2019-05-05 14:07:03.268 [http-nio-8080-exec-5] GenericDao - *********Query found grocery lists by ID: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 14:07:03.307 [http-nio-8080-exec-5] SearchGrocerylist - ********** Grocery List Object by User Name Results: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 3, user_id = 8, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 14:09:01.447 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-05 14:09:01.457 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-05 14:09:01.458 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-05 14:09:04.136 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 14:09:04.217 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-05 14:09:04.218 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-05 14:09:04.218 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-05 14:09:04.286 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 14:09:04.287 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 14:09:04.372 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 14:09:04.372 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-05 14:09:04.373 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 14:09:04.419 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 14:09:04.420 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 14:09:04.421 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 14:09:04.437 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 14:09:04.437 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 14:09:04.453 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 14:09:04.492 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 14:09:04.497 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-05 14:09:04.548 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 14:09:04.549 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-05 14:09:04.549 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 14:09:04.567 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 14:09:04.630 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 14:09:04.631 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-05 14:09:04.632 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:09:04.650 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 14:09:04.650 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:09:04.664 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 14:09:04.664 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 14:09:04.664 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:09:04.680 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 14:09:04.681 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T14:09:04.632, ingredients = []}
[INFO ] 2019-05-05 14:09:04.709 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 461, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T14:09:04.632, ingredients = []}
[INFO ] 2019-05-05 14:09:04.713 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 461, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T14:09:04.632, ingredients = []}
[INFO ] 2019-05-05 14:09:04.755 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 14:09:04.756 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-05 14:09:04.756 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:09:04.782 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-05 14:09:04.783 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-05 14:09:04.811 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 14:09:04.812 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 14:09:04.860 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 14:09:04.861 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-05 14:09:04.872 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 14:09:04.918 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 14:09:04.919 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-05 14:09:04.919 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 14:09:04.977 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 14:09:05.029 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 14:09:05.029 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-05 14:09:05.030 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:09:05.038 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 14:09:05.039 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T14:09:05.029, ingredients = []}
[INFO ] 2019-05-05 14:09:05.039 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T14:09:05.029, ingredients = []}
[INFO ] 2019-05-05 14:09:05.046 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 462, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T14:09:05.029, ingredients = []}
[INFO ] 2019-05-05 14:09:05.046 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-05 14:09:05.047 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-05 14:09:05.064 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 462, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T14:09:05, ingredients = []}]
[INFO ] 2019-05-05 14:09:05.064 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-05 14:09:05.064 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-05 14:09:05.079 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 14:09:05.080 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 14:09:05.088 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 14:09:05.158 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 14:09:05.159 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-05 14:09:05.159 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:09:05.164 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 14:09:05.164 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 14:09:05.166 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 14:09:05.170 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:09:05.175 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-05 14:09:05.223 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 14:09:05.223 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-05 14:09:05.223 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:09:05.237 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-05 14:09:05.275 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 14:09:05.276 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-05 14:09:05.276 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:09:05.356 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-05 14:09:05.409 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 14:09:05.410 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-05 14:09:05.410 [main] UserTest - -------Locale date time: 2019-05-05T14:09:05.410----------
[INFO ] 2019-05-05 14:09:05.411 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 14:09:05.426 [main] GenericDao - **********Entity inserted: User{userId = '509', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 14:09:05.426 [main] GenericDao - **********Query database by using an ID: 509, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:09:05.433 [main] GenericDao - **********Query by ID Found: User{userId = '509', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 14:09:05.478 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 14:09:05.478 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-05 14:09:05.479 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 14:09:05.484 [main] GenericDao - **********Saved|Updated entity: User{userId = '510', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 14:09:05.484 [main] GenericDao - **********Query database by using an ID: 510, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:09:05.488 [main] GenericDao - **********Query by ID Found: User{userId = '510', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 14:09:05.488 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:09:05.498 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-05 14:09:05.498 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-05 14:09:05.498 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 14:09:05.507 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 14:09:05.508 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:09:05.516 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 14:09:05.558 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 14:09:05.558 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-05 14:09:05.559 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:09:05.573 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-05 14:09:05.573 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:09:05.594 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-05 14:09:05.635 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 14:09:05.635 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-05 14:09:05.635 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 14:09:05.641 [main] GenericDao - **********Entity inserted: User{userId = '511', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 14:09:05.641 [main] GenericDao - **********Query database by using an ID: 511, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:09:05.647 [main] GenericDao - **********Query by ID Found: User{userId = '511', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 14:09:07.083 [main] YummlyDataGrabber - $$$$$$$$$$ Criteria Request returned Object: Criteria{facetCounts = 'FacetCounts{}',criteria = 'Criteria{facetCounts = 'null',criteria = 'null',attribution = 'null',matches = 'null',totalMatchCount = '0',q = 'Pad Thai',allowedIngredient = 'null',excludedIngredient = 'null'}',attribution = 'Attribution{logo = 'https://static.yummly.co/api-logo.png',html = 'Recipe search powered by <a href='http://www.yummly.co/recipes'><img alt='Yummly' src='https://static.yummly.co/api-logo.png'/></a>',text = 'Recipe search powered by Yummly',url = 'http://www.yummly.co/recipes/'}',matches = '[MatchesItem{recipeName = 'Classic Pad Thai',flavors = 'null',sourceDisplayName = 'Taste',smallImageUrls = '[https://lh3.googleusercontent.com/n6-iEQ-eB_tZ2xZ_9MQ7VrviKyNUG22WwXOrQ4sCnoc3k_R3ROGhVruW2nf74SqKiqTYVpIHj4WEVPROsUEBnH0=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9YxdRCk-f2qJ6aVEuyFIfBOyK2ae_qMABx-WAboDFPkt-V_4rk3OCW6zqbBGDlq8XkPBo7v7m_FMoqhaRBHLM0=s90-c'}',ingredients = '[minced garlic, thai chiles, palm sugar, tamarind paste, asian fish sauce, fresh lime juice, pad thai noodles, canola oil, large shrimp, red pepper flakes, eggs, extra firm tofu, carrots, bean sprouts, green onions, cilantro leaves, roasted peanuts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Classic-Pad-Thai-2151767'}, MatchesItem{recipeName = 'Shrimp Pad-Thai',flavors = 'null',sourceDisplayName = 'simple.artistic.cooking',smallImageUrls = '[https://lh3.googleusercontent.com/THkysjs-7NkPHvVlAHnMQ8QJbB83_v7glyf_LjGs6buHIusQixQ5OzzNrfiTxVUxuqbHXn4MHZ6gXJ4FN3u7qBU=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/F-3Ds9UUGjz6puJq4xVBr4ISkYWN2gxjRQHpwph7YLG54JSL13A0cJVVsErotaNDg8JPdubKEE0iv1-kTiSt=s90-c'}',ingredients = '[rice noodles, low sodium soy sauce, fish sauce, fresh lime juice, dark brown sugar, Sriracha, crushed red pepper flakes, peanut oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh cilantro, limes, ginger, unsalted peanuts]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-2694178'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'A Day In The Kitchen',smallImageUrls = '[https://lh3.googleusercontent.com/GlwJwX-yAdImsrz97yzYyRAGSlPAXKIk8Bj7itYPzjLUDvmoXnBBF58avmrlL1DlnHTsB_HgQfiAndOT_cmr5mI=s90]',totalTimeInSeconds = '3600',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9o1lAlM-DruGaSqqvBMNbEwDQjkKAaT88P84Z86YQaEicB206-ria1E6xnNUeq3kOgjWmvs5kgIlh-jEUOQ=s90-c'}',ingredients = '[pad thai noodles, deveined shrimp, eggs, small carrot, green onion, garlic cloves, light olive oil, water, tamarind paste, oyster sauce, coconut sugar, fish sauce, soy sauce, bean sprouts, chopped peanuts, dried chili flakes, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Shrimp-Pad-Thai-2511725'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'null',sourceDisplayName = 'Bookcooker',smallImageUrls = '[https://lh3.googleusercontent.com/oRA3RBaVweVu-mbgLigmJBT1a5dK8mZGJgWBijAIz5kSfGy5ctOulTP3iF7HCJR3d3rnK2h2H0BEztVoGAjb3j4=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/GHOVr9l6K3s3_MIlQRGmGjE1cLy-Xnvlj94n3-RF7JdYXM-hWfFXtAJqPIkfxHTZAAbiVjeA-F57kRpXHJ7-ww=s90-c'}',ingredients = '[pad thai noodles, raw sugar, tamarind paste, fish sauce, rice vinegar, minced ginger, minced garlic, shallot, lemongrass, peanut oil, large eggs, cooked shrimp, extra firm tofu, scallions, peanuts, bean sprouts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1753549'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.3333333333333333',sweet = '0.16666666666666666',sour = '0.3333333333333333',bitter = '0.16666666666666666',piquant = '0.6666666666666666'}',sourceDisplayName = 'The Hungry Mouse',smallImageUrls = '[https://lh3.googleusercontent.com/kjWQ0yDHnfexuAGuUUb3pkrELmSDKiox3NVVVcf2qUNac9z4GdWsXu30RQomuRLuDXWUoNAJkDA-oyXOGyeT=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/taNW2mFGX9SDg4tgPbUjD5VyOulKfgmBf07EgFKYxXy1wdJXSrvZbGIKA0dYfKhKEgid5NprMS5vrv9GlwfnfA=s90-c'}',ingredients = '[rice noodles, boiling water, vegetable oil, cilantro, red chile, large shrimp, shallots, large eggs, sugar, oyster sauce, Thai fish sauce, fresh lime juice, bean sprouts, scallions, unsalted roasted peanuts, lime]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1764933'}, MatchesItem{recipeName = 'Chicken Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.8333333333333334',bitter = '0.6666666666666666',piquant = '0.5'}',sourceDisplayName = 'Cooking Classy',smallImageUrls = '[https://lh3.googleusercontent.com/wxHAOLhlPjO1Vm0nUPYfLdhlSY9fy-_LiJheciGzbVSmFY3TwK0vUD6Squ3EbFslSyzfJm_LxV8yO2mg8GoZ=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/e2DuGFKLDaj_lzdDoTUQSHq-9KeUFtlsv7-W2meNBkzn42n308SAqVC1W1BEMw_zFkAg_K1SIvAg-EFcEbcREA=s90-c'}',ingredients = '[rice noodles, boneless, skinless chicken breasts, vegetable oil, dark brown sugar, soy sauce, rice vinegar, lime juice, fish sauce, red bell pepper, matchstick carrots, garlic, green onions, bean sprouts, large eggs, unsalted peanuts, cilantro, red pepper flakes, sesame seeds]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Chicken-Pad-Thai-2213155'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.3333333333333333',bitter = '0.6666666666666666',piquant = '0.3333333333333333'}',sourceDisplayName = 'From Jessica's Kitchen',smallImageUrls = '[http://lh5.ggpht.com/tG9DQTsQN-Q7Vgy7mt0QAEDGtpy5xIjucpNpemEpZ4FwhrhvlN-7PoNF3-ZYRBtRzXCvv8VtuxjP2py7o9PhTrY=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh5.ggpht.com/2okQfHyuVIWk5uokYUkxoKUcQGvWkoY0QMbDClsnhfFj8I125HhW-zO7TFmsSusOiqRbFJoZ8cR6hpwxJM8v1jM=s90-c'}',ingredients = '[fresh lime juice, sugar, fish sauce, chili sauce, tamarind paste, brown sugar, chicken stock, red pepper flakes, kosher salt, vegetable oil, garlic cloves, shallots, chicken, shrimp, eggs, bean sprouts, fresh cilantro, roasted peanuts, scallions, rice noodles]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-972593'}, MatchesItem{recipeName = 'Quick Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'Food & Wine',smallImageUrls = '[http://lh3.googleusercontent.com/WFJa5dApcA64f4YS5W7w-Q38pzXL8e5f1f7QNKLW9NrokqF4z5_T0k8Q01eOgECYojSj5ritfz49OYQMr3_CxS4=s90]',totalTimeInSeconds = '1800',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/18irSqmW3lj0CrrGnEUn9FaiyuzU5CLxMAYeRU-U43knhaaXzDW6hOvw_FK0uEWkZB8VrESVnd6J6WMEI1wBnow=s90-c'}',ingredients = '[thai noodles, asian fish sauce, light brown sugar, fresh lime juice, Thai bird chiles, canola oil, shallots, large garlic cloves, medium shrimp, large eggs, scallions, roasted peanuts, bean sprouts, chopped cilantro]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Quick-Shrimp-Pad-Thai-1095426'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.8333333333333334',sweet = '0.5',sour = '0.3333333333333333',bitter = '0.8333333333333334',piquant = '0.6666666666666666'}',sourceDisplayName = 'MyRecipes',smallImageUrls = '[http://lh3.googleusercontent.com/X3vmGqU0FQfHiWa-RXC2H8_j5eP7YlaMaekrKHYuyqNt8PUJyTY-OKGQemj7y-q4DoGLL9krhmfCwwpE2_VHsw=s90]',totalTimeInSeconds = '1500',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/PEwp_Rt5ikN1kriUXm34UMwVMINSK3L9GEecCkGX900bH6FIQYMH9ex7FlqAADz_qZmpZHe4mG_xFyrxs0S_=s90-c'}',ingredients = '[rice noodles, dark brown sugar, lower sodium soy sauce, fish sauce, fresh lime juice, Sriracha, canola oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh basil]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-1085805'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.5',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.16666666666666666',bitter = '0.8333333333333334',piquant = '0.16666666666666666'}',sourceDisplayName = 'Williams-Sonoma',smallImageUrls = '[http://lh4.ggpht.com/cNeTmf82YRoFFXbJ7kpBIZAZ1tOKGtMau_kEzLZcHuCsoeEL7GcoPhPVoTDKpnmpJL5X_bxPoKZm9lU_ltaS=s90]',totalTimeInSeconds = '600',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh4.ggpht.com/bnrxERK9dvDKbsEb7PabRSFC-n2VXlWXj3_2GLtjtVmmAhZoFikVq7CtggANrTwYz_LdidpSFCcdC6cWKdUS_g=s90-c'}',ingredients = '[rice noodles, asian fish sauce, fresh lime juice, sugar, canola oil, medium shrimp, garlic cloves, red pepper flakes, eggs, bean sprouts, unsalted roasted peanuts, sliced green onions, chopped fresh cilantro, chopped fresh mint]',attributes = 'Attributes{course = 'null',holiday = 'null',cuisine = '[Asian, Thai]'}',id = 'Pad-Thai-641068'}]',totalMatchCount = '1361',q = 'null',allowedIngredient = 'null',excludedIngredient = 'null'}
[INFO ] 2019-05-05 14:09:07.084 [main] YummlyDataGrabber - $$$$$$$$$$ Ingredients: minced garlic
[INFO ] 2019-05-05 14:09:07.085 [main] YummlyDataGrabber - $$$$$$$$$$ Matches: [MatchesItem{recipeName = 'Classic Pad Thai',flavors = 'null',sourceDisplayName = 'Taste',smallImageUrls = '[https://lh3.googleusercontent.com/n6-iEQ-eB_tZ2xZ_9MQ7VrviKyNUG22WwXOrQ4sCnoc3k_R3ROGhVruW2nf74SqKiqTYVpIHj4WEVPROsUEBnH0=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9YxdRCk-f2qJ6aVEuyFIfBOyK2ae_qMABx-WAboDFPkt-V_4rk3OCW6zqbBGDlq8XkPBo7v7m_FMoqhaRBHLM0=s90-c'}',ingredients = '[minced garlic, thai chiles, palm sugar, tamarind paste, asian fish sauce, fresh lime juice, pad thai noodles, canola oil, large shrimp, red pepper flakes, eggs, extra firm tofu, carrots, bean sprouts, green onions, cilantro leaves, roasted peanuts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Classic-Pad-Thai-2151767'}, MatchesItem{recipeName = 'Shrimp Pad-Thai',flavors = 'null',sourceDisplayName = 'simple.artistic.cooking',smallImageUrls = '[https://lh3.googleusercontent.com/THkysjs-7NkPHvVlAHnMQ8QJbB83_v7glyf_LjGs6buHIusQixQ5OzzNrfiTxVUxuqbHXn4MHZ6gXJ4FN3u7qBU=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/F-3Ds9UUGjz6puJq4xVBr4ISkYWN2gxjRQHpwph7YLG54JSL13A0cJVVsErotaNDg8JPdubKEE0iv1-kTiSt=s90-c'}',ingredients = '[rice noodles, low sodium soy sauce, fish sauce, fresh lime juice, dark brown sugar, Sriracha, crushed red pepper flakes, peanut oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh cilantro, limes, ginger, unsalted peanuts]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-2694178'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'A Day In The Kitchen',smallImageUrls = '[https://lh3.googleusercontent.com/GlwJwX-yAdImsrz97yzYyRAGSlPAXKIk8Bj7itYPzjLUDvmoXnBBF58avmrlL1DlnHTsB_HgQfiAndOT_cmr5mI=s90]',totalTimeInSeconds = '3600',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9o1lAlM-DruGaSqqvBMNbEwDQjkKAaT88P84Z86YQaEicB206-ria1E6xnNUeq3kOgjWmvs5kgIlh-jEUOQ=s90-c'}',ingredients = '[pad thai noodles, deveined shrimp, eggs, small carrot, green onion, garlic cloves, light olive oil, water, tamarind paste, oyster sauce, coconut sugar, fish sauce, soy sauce, bean sprouts, chopped peanuts, dried chili flakes, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Shrimp-Pad-Thai-2511725'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'null',sourceDisplayName = 'Bookcooker',smallImageUrls = '[https://lh3.googleusercontent.com/oRA3RBaVweVu-mbgLigmJBT1a5dK8mZGJgWBijAIz5kSfGy5ctOulTP3iF7HCJR3d3rnK2h2H0BEztVoGAjb3j4=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/GHOVr9l6K3s3_MIlQRGmGjE1cLy-Xnvlj94n3-RF7JdYXM-hWfFXtAJqPIkfxHTZAAbiVjeA-F57kRpXHJ7-ww=s90-c'}',ingredients = '[pad thai noodles, raw sugar, tamarind paste, fish sauce, rice vinegar, minced ginger, minced garlic, shallot, lemongrass, peanut oil, large eggs, cooked shrimp, extra firm tofu, scallions, peanuts, bean sprouts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1753549'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.3333333333333333',sweet = '0.16666666666666666',sour = '0.3333333333333333',bitter = '0.16666666666666666',piquant = '0.6666666666666666'}',sourceDisplayName = 'The Hungry Mouse',smallImageUrls = '[https://lh3.googleusercontent.com/kjWQ0yDHnfexuAGuUUb3pkrELmSDKiox3NVVVcf2qUNac9z4GdWsXu30RQomuRLuDXWUoNAJkDA-oyXOGyeT=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/taNW2mFGX9SDg4tgPbUjD5VyOulKfgmBf07EgFKYxXy1wdJXSrvZbGIKA0dYfKhKEgid5NprMS5vrv9GlwfnfA=s90-c'}',ingredients = '[rice noodles, boiling water, vegetable oil, cilantro, red chile, large shrimp, shallots, large eggs, sugar, oyster sauce, Thai fish sauce, fresh lime juice, bean sprouts, scallions, unsalted roasted peanuts, lime]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1764933'}, MatchesItem{recipeName = 'Chicken Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.8333333333333334',bitter = '0.6666666666666666',piquant = '0.5'}',sourceDisplayName = 'Cooking Classy',smallImageUrls = '[https://lh3.googleusercontent.com/wxHAOLhlPjO1Vm0nUPYfLdhlSY9fy-_LiJheciGzbVSmFY3TwK0vUD6Squ3EbFslSyzfJm_LxV8yO2mg8GoZ=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/e2DuGFKLDaj_lzdDoTUQSHq-9KeUFtlsv7-W2meNBkzn42n308SAqVC1W1BEMw_zFkAg_K1SIvAg-EFcEbcREA=s90-c'}',ingredients = '[rice noodles, boneless, skinless chicken breasts, vegetable oil, dark brown sugar, soy sauce, rice vinegar, lime juice, fish sauce, red bell pepper, matchstick carrots, garlic, green onions, bean sprouts, large eggs, unsalted peanuts, cilantro, red pepper flakes, sesame seeds]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Chicken-Pad-Thai-2213155'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.3333333333333333',bitter = '0.6666666666666666',piquant = '0.3333333333333333'}',sourceDisplayName = 'From Jessica's Kitchen',smallImageUrls = '[http://lh5.ggpht.com/tG9DQTsQN-Q7Vgy7mt0QAEDGtpy5xIjucpNpemEpZ4FwhrhvlN-7PoNF3-ZYRBtRzXCvv8VtuxjP2py7o9PhTrY=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh5.ggpht.com/2okQfHyuVIWk5uokYUkxoKUcQGvWkoY0QMbDClsnhfFj8I125HhW-zO7TFmsSusOiqRbFJoZ8cR6hpwxJM8v1jM=s90-c'}',ingredients = '[fresh lime juice, sugar, fish sauce, chili sauce, tamarind paste, brown sugar, chicken stock, red pepper flakes, kosher salt, vegetable oil, garlic cloves, shallots, chicken, shrimp, eggs, bean sprouts, fresh cilantro, roasted peanuts, scallions, rice noodles]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-972593'}, MatchesItem{recipeName = 'Quick Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'Food & Wine',smallImageUrls = '[http://lh3.googleusercontent.com/WFJa5dApcA64f4YS5W7w-Q38pzXL8e5f1f7QNKLW9NrokqF4z5_T0k8Q01eOgECYojSj5ritfz49OYQMr3_CxS4=s90]',totalTimeInSeconds = '1800',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/18irSqmW3lj0CrrGnEUn9FaiyuzU5CLxMAYeRU-U43knhaaXzDW6hOvw_FK0uEWkZB8VrESVnd6J6WMEI1wBnow=s90-c'}',ingredients = '[thai noodles, asian fish sauce, light brown sugar, fresh lime juice, Thai bird chiles, canola oil, shallots, large garlic cloves, medium shrimp, large eggs, scallions, roasted peanuts, bean sprouts, chopped cilantro]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Quick-Shrimp-Pad-Thai-1095426'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.8333333333333334',sweet = '0.5',sour = '0.3333333333333333',bitter = '0.8333333333333334',piquant = '0.6666666666666666'}',sourceDisplayName = 'MyRecipes',smallImageUrls = '[http://lh3.googleusercontent.com/X3vmGqU0FQfHiWa-RXC2H8_j5eP7YlaMaekrKHYuyqNt8PUJyTY-OKGQemj7y-q4DoGLL9krhmfCwwpE2_VHsw=s90]',totalTimeInSeconds = '1500',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/PEwp_Rt5ikN1kriUXm34UMwVMINSK3L9GEecCkGX900bH6FIQYMH9ex7FlqAADz_qZmpZHe4mG_xFyrxs0S_=s90-c'}',ingredients = '[rice noodles, dark brown sugar, lower sodium soy sauce, fish sauce, fresh lime juice, Sriracha, canola oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh basil]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-1085805'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.5',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.16666666666666666',bitter = '0.8333333333333334',piquant = '0.16666666666666666'}',sourceDisplayName = 'Williams-Sonoma',smallImageUrls = '[http://lh4.ggpht.com/cNeTmf82YRoFFXbJ7kpBIZAZ1tOKGtMau_kEzLZcHuCsoeEL7GcoPhPVoTDKpnmpJL5X_bxPoKZm9lU_ltaS=s90]',totalTimeInSeconds = '600',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh4.ggpht.com/bnrxERK9dvDKbsEb7PabRSFC-n2VXlWXj3_2GLtjtVmmAhZoFikVq7CtggANrTwYz_LdidpSFCcdC6cWKdUS_g=s90-c'}',ingredients = '[rice noodles, asian fish sauce, fresh lime juice, sugar, canola oil, medium shrimp, garlic cloves, red pepper flakes, eggs, bean sprouts, unsalted roasted peanuts, sliced green onions, chopped fresh cilantro, chopped fresh mint]',attributes = 'Attributes{course = 'null',holiday = 'null',cuisine = '[Asian, Thai]'}',id = 'Pad-Thai-641068'}]
[INFO ] 2019-05-05 14:09:07.086 [main] YummlyDataGrabber - $$$$$$$$$$ Attribution: Attribution{logo = 'https://static.yummly.co/api-logo.png',html = 'Recipe search powered by <a href='http://www.yummly.co/recipes'><img alt='Yummly' src='https://static.yummly.co/api-logo.png'/></a>',text = 'Recipe search powered by Yummly',url = 'http://www.yummly.co/recipes/'}
[INFO ] 2019-05-05 14:09:07.086 [main] YummlyDataGrabber - $$$$$$$$$$ Facet Counts: FacetCounts{}
[INFO ] 2019-05-05 14:09:07.086 [main] YummlyDataGrabber - $$$$$$$$$$ Total Match Count: 1361
[INFO ] 2019-05-05 14:09:07.086 [main] YummlyDataGrabber - $$$$$$$$$$ Allowed Ingredients: null
[INFO ] 2019-05-05 14:09:07.086 [main] YummlyDataGrabber - $$$$$$$$$$ Excluded Ingredients: null
[INFO ] 2019-05-05 14:09:07.086 [main] YummlyDataGrabber - $$$$$$$$$$ Q: null
[INFO ] 2019-05-05 14:09:07.086 [main] TestYummlyApi - Found Criteria from Q: Classic Pad Thai
[INFO ] 2019-05-05 14:13:17.137 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-05 14:13:17.148 [main] GroceryListTest - ^^^^^^^^^^Starting test to get all grocery lists.
[INFO ] 2019-05-05 14:13:17.149 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.GroceryList
[INFO ] 2019-05-05 14:13:20.546 [main] GenericDao - **********Get All Query Found: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 5, grocerylistName = Week 5, ingredientId = 3, user_id = 5, recipe_id = 8, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 6, grocerylistName = Week 2, ingredientId = 3, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 8, grocerylistName = Week 2, ingredientId = 2, user_id = 6, recipe_id = 11, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 9, grocerylistName = Week 3, ingredientId = 3, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 14:13:20.807 [main] GroceryListTest - ----------Cleaning Database with sql script for Grocery List Testing----------
[INFO ] 2019-05-05 14:13:20.812 [main] GroceryListTest - ^^^^^^^^^Starting test to get all grocery lists by grocery list name.
[INFO ] 2019-05-05 14:13:20.813 [main] GenericDao - **********Querying grocery list by grocery list name: Week 1
[INFO ] 2019-05-05 14:13:20.955 [main] GenericDao - **********Query found grocery lists by grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 14:13:20.956 [main] GroceryListTest - ^^^^^^^^^^Test found grocery lists using grocery list name: [GroceryLists{ groceryListId = 1, grocerylistName = Week 1, ingredientId = 1, user_id = 1, recipe_id = 1, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 2, grocerylistName = Week 1, ingredientId = 4, user_id = 2, recipe_id = 4, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 3, grocerylistName = Week 1, ingredientId = 1, user_id = 3, recipe_id = 6, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 4, grocerylistName = Week 1, ingredientId = 6, user_id = 5, recipe_id = 9, ingredients = {[]}, userRecipes = {[]}, user = {[]} }, GroceryLists{ groceryListId = 7, grocerylistName = Week 1, ingredientId = 1, user_id = 6, recipe_id = 10, ingredients = {[]}, userRecipes = {[]}, user = {[]} }]
[INFO ] 2019-05-05 14:13:21.131 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 14:13:21.131 [main] UserRecipesTest - ^^^^^^^^^^Starting delete recipe process
[INFO ] 2019-05-05 14:13:21.132 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 14:13:21.248 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 14:13:21.250 [main] UserRecipesTest - ^^^^^^^^^^Grabbed recipe ID to delete a recipe: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 14:13:21.251 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 14:13:21.273 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 14:13:21.274 [main] GenericDao - **********Attempting to delete: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 14:13:21.338 [main] GenericDao - **********Successfully deleted: UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 14:13:21.460 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 14:13:21.473 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-05 14:13:21.570 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 14:13:21.571 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-05 14:13:21.572 [main] GenericDao - **********Query database by using an ID: 7, of Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 14:13:21.598 [main] GenericDao - **********Query by ID Found: UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 14:13:21.701 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 14:13:21.701 [main] UserRecipesTest - ^^^^^^^^^^Starting insert recipe process
[INFO ] 2019-05-05 14:13:21.702 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:13:21.723 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 14:13:21.724 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:13:21.766 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 14:13:21.766 [main] UserRecipesTest - ^^^^^^^^^^Grabbed user ID to insert a new recipe: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 14:13:21.766 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:13:21.787 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 14:13:21.787 [main] GenericDao - **********Attempting to insert a Entity: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T14:13:21.702, ingredients = []}
[INFO ] 2019-05-05 14:13:21.825 [main] GenericDao - **********Entity inserted: UserRecipes{recipeId = 464, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T14:13:21.702, ingredients = []}
[INFO ] 2019-05-05 14:13:21.825 [main] UserRecipesTest - ^^^^^^^^^^Inserted a new recipe: UserRecipes{recipeId = 464, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pepperoni Pizza', dateTimeCreated = 2019-05-05T14:13:21.702, ingredients = []}
[INFO ] 2019-05-05 14:13:21.888 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 14:13:21.889 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get user recipes by last name.
[INFO ] 2019-05-05 14:13:21.889 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:13:21.924 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-05 14:13:21.924 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-05 14:13:21.954 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 14:13:21.955 [main] UserRecipesTest - ^^^^^^^^^^Test found recipes by user last name: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 14:13:22.047 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 14:13:22.048 [main] GenericDao - **********Querying user recipes by ID: 1
[INFO ] 2019-05-05 14:13:22.068 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 14:13:22.127 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 14:13:22.127 [main] UserRecipesTest - ^^^^^^^^^^Starting test to get all user recipes.
[INFO ] 2019-05-05 14:13:22.127 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.UserRecipes
[INFO ] 2019-05-05 14:13:22.214 [main] GenericDao - **********Get All Query Found: [UserRecipes{recipeId = 1, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Tacos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 2, user = User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, recipeTitle = 'Shrimp Larb', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 3, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Nachos', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 4, user = User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, recipeTitle = 'Swedish Meatballs', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 6, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Lamb Shank', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 7, user = User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, recipeTitle = 'Braised Pork Belly', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 14:13:22.274 [main] UserRecipesTest - ----------Cleaning Database with sql script for User Recipe Testing----------
[INFO ] 2019-05-05 14:13:22.274 [main] UserRecipesTest - ^^^^^^^^^^Starting save or update Test
[INFO ] 2019-05-05 14:13:22.275 [main] GenericDao - **********Query database by using an ID: 5, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:13:22.291 [main] GenericDao - **********Query by ID Found: User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}
[INFO ] 2019-05-05 14:13:22.292 [main] UserRecipesTest - ^^^^^^^^^^Created user to save using save/update method: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T14:13:22.275, ingredients = []}
[INFO ] 2019-05-05 14:13:22.292 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 0, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T14:13:22.275, ingredients = []}
[INFO ] 2019-05-05 14:13:22.317 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 465, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T14:13:22.275, ingredients = []}
[INFO ] 2019-05-05 14:13:22.320 [main] UserRecipesTest - ^^^^^^^^^^New recipe saved successfully!
[INFO ] 2019-05-05 14:13:22.322 [main] GenericDao - **********Querying user recipes by ID: 5
[INFO ] 2019-05-05 14:13:22.352 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 8, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Beef Wellington', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 9, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Pad Thai', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 465, user = User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, recipeTitle = 'Rib Eye Steak', dateTimeCreated = 2019-05-05T14:13:22, ingredients = []}]
[INFO ] 2019-05-05 14:13:22.352 [main] UserRecipesTest - ^^^^^^^^^^Starting recipe update process
[INFO ] 2019-05-05 14:13:22.353 [main] GenericDao - **********Querying user recipes by ID: 6
[INFO ] 2019-05-05 14:13:22.383 [main] GenericDao - **********Query found recipes by ID : [UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Bibimbap', dateTimeCreated = 2019-03-03T13:53, ingredients = []}, UserRecipes{recipeId = 11, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Fried Chicken', dateTimeCreated = 2019-03-03T13:53, ingredients = []}]
[INFO ] 2019-05-05 14:13:22.384 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 14:13:22.400 [main] GenericDao - **********Saved|Updated entity: UserRecipes{recipeId = 10, user = User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}, recipeTitle = 'Macaroni and Cheese', dateTimeCreated = 2019-03-03T13:53, ingredients = []}
[INFO ] 2019-05-05 14:13:22.475 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 14:13:22.475 [main] UserTest - ^^^^^^^^^^Starting test to delete a user.
[INFO ] 2019-05-05 14:13:22.475 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:13:22.487 [main] GenericDao - **********Query by ID Found: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 14:13:22.488 [main] GenericDao - **********Attempting to delete: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 14:13:22.491 [main] GenericDao - **********Successfully deleted: User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}
[INFO ] 2019-05-05 14:13:22.499 [main] GenericDao - **********Query database by using an ID: 4, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:13:22.506 [main] GenericDao - **********Query by ID Found: null
[INFO ] 2019-05-05 14:13:22.558 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 14:13:22.558 [main] UserTest - ^^^^^^^^^^Starting test to get a user by ID.
[INFO ] 2019-05-05 14:13:22.559 [main] GenericDao - **********Query database by using an ID: 3, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:13:22.571 [main] GenericDao - **********Query by ID Found: User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}
[INFO ] 2019-05-05 14:13:22.620 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 14:13:22.621 [main] UserTest - ^^^^^^^^^^Starting test to get all users.
[INFO ] 2019-05-05 14:13:22.621 [main] GenericDao - **********Starting The Get All Query From Class Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:13:22.719 [main] GenericDao - **********Get All Query Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}, User{userId = '2', firstName = 'Peter', lastName = 'Parker', userName = 'Tester2', userPassword = 'Test2'}, User{userId = '3', firstName = 'Captain', lastName = 'America', userName = 'Tester3', userPassword = 'Test3'}, User{userId = '4', firstName = 'Black', lastName = 'Widow', userName = 'Tester4', userPassword = 'Test4'}, User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-05 14:13:22.786 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 14:13:22.787 [main] UserTest - ^^^^^^^^^^Starting test to check if a user recipe set is added to a user object.
[INFO ] 2019-05-05 14:13:22.787 [main] UserTest - -------Locale date time: 2019-05-05T14:13:22.787----------
[INFO ] 2019-05-05 14:13:22.788 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 14:13:22.812 [main] GenericDao - **********Entity inserted: User{userId = '512', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 14:13:22.813 [main] GenericDao - **********Query database by using an ID: 512, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:13:22.826 [main] GenericDao - **********Query by ID Found: User{userId = '512', firstName = 'Ham', lastName = 'Burgler', userName = 'CHzPlz', userPassword = 'test'}
[INFO ] 2019-05-05 14:13:22.907 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 14:13:22.908 [main] UserTest - ^^^^^^^^^^Starting Test That Saves a new User
[INFO ] 2019-05-05 14:13:22.908 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = 'null', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 14:13:22.915 [main] GenericDao - **********Saved|Updated entity: User{userId = '513', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 14:13:22.916 [main] GenericDao - **********Query database by using an ID: 513, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:13:22.924 [main] GenericDao - **********Query by ID Found: User{userId = '513', firstName = 'Black', lastName = 'Widow', userName = 'WidowMaker', userPassword = 'test33'}
[INFO ] 2019-05-05 14:13:22.925 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:13:22.944 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}
[INFO ] 2019-05-05 14:13:22.944 [main] UserTest - ^^^^^^^^^^Starting Test That Updates an existing User
[INFO ] 2019-05-05 14:13:22.944 [main] GenericDao - **********Attempting to Save|Update a Entity to the Database: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 14:13:22.956 [main] GenericDao - **********Saved|Updated entity: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 14:13:22.957 [main] GenericDao - **********Query database by using an ID: 6, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:13:22.973 [main] GenericDao - **********Query by ID Found: User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'CaptMarv33', userPassword = 'Test6'}
[INFO ] 2019-05-05 14:13:23.025 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 14:13:23.025 [main] UserTest - ^^^^^^^^^^Starting test to get a user by last name.
[INFO ] 2019-05-05 14:13:23.026 [main] GenericDao - **********Query Using Last Name:  Hulk, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:13:23.049 [main] GenericDao - **********Query by Last Name Found: [User{userId = '1', firstName = 'Incredible', lastName = 'Hulk', userName = 'Tester1', userPassword = 'Test1'}]
[INFO ] 2019-05-05 14:13:23.050 [main] GenericDao - **********Query Using Last Name:  ma, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:13:23.105 [main] GenericDao - **********Query by Last Name Found: [User{userId = '5', firstName = 'Ant', lastName = 'Man', userName = 'Tester5', userPassword = 'Test5'}, User{userId = '6', firstName = 'Captain', lastName = 'Marvel', userName = 'Tester6', userPassword = 'Test6'}]
[INFO ] 2019-05-05 14:13:23.169 [main] UserTest - ----------Cleaning Database with sql script for User Testing----------
[INFO ] 2019-05-05 14:13:23.173 [main] UserTest - ^^^^^^^^^^Starting test to insert a user.
[INFO ] 2019-05-05 14:13:23.173 [main] GenericDao - **********Attempting to insert a Entity: User{userId = 'null', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 14:13:23.187 [main] GenericDao - **********Entity inserted: User{userId = '514', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 14:13:23.188 [main] GenericDao - **********Query database by using an ID: 514, of Type: class edu.matc.entity.User
[INFO ] 2019-05-05 14:13:23.196 [main] GenericDao - **********Query by ID Found: User{userId = '514', firstName = 'Thor', lastName = 'Odinson', userName = 'Tester7', userPassword = 'test'}
[INFO ] 2019-05-05 14:13:25.526 [main] YummlyDataGrabber - $$$$$$$$$$ Criteria Request returned Object: Criteria{facetCounts = 'FacetCounts{}',criteria = 'Criteria{facetCounts = 'null',criteria = 'null',attribution = 'null',matches = 'null',totalMatchCount = '0',q = 'Pad Thai',allowedIngredient = 'null',excludedIngredient = 'null'}',attribution = 'Attribution{logo = 'https://static.yummly.co/api-logo.png',html = 'Recipe search powered by <a href='http://www.yummly.co/recipes'><img alt='Yummly' src='https://static.yummly.co/api-logo.png'/></a>',text = 'Recipe search powered by Yummly',url = 'http://www.yummly.co/recipes/'}',matches = '[MatchesItem{recipeName = 'Classic Pad Thai',flavors = 'null',sourceDisplayName = 'Taste',smallImageUrls = '[https://lh3.googleusercontent.com/n6-iEQ-eB_tZ2xZ_9MQ7VrviKyNUG22WwXOrQ4sCnoc3k_R3ROGhVruW2nf74SqKiqTYVpIHj4WEVPROsUEBnH0=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9YxdRCk-f2qJ6aVEuyFIfBOyK2ae_qMABx-WAboDFPkt-V_4rk3OCW6zqbBGDlq8XkPBo7v7m_FMoqhaRBHLM0=s90-c'}',ingredients = '[minced garlic, thai chiles, palm sugar, tamarind paste, asian fish sauce, fresh lime juice, pad thai noodles, canola oil, large shrimp, red pepper flakes, eggs, extra firm tofu, carrots, bean sprouts, green onions, cilantro leaves, roasted peanuts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Classic-Pad-Thai-2151767'}, MatchesItem{recipeName = 'Shrimp Pad-Thai',flavors = 'null',sourceDisplayName = 'simple.artistic.cooking',smallImageUrls = '[https://lh3.googleusercontent.com/THkysjs-7NkPHvVlAHnMQ8QJbB83_v7glyf_LjGs6buHIusQixQ5OzzNrfiTxVUxuqbHXn4MHZ6gXJ4FN3u7qBU=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/F-3Ds9UUGjz6puJq4xVBr4ISkYWN2gxjRQHpwph7YLG54JSL13A0cJVVsErotaNDg8JPdubKEE0iv1-kTiSt=s90-c'}',ingredients = '[rice noodles, low sodium soy sauce, fish sauce, fresh lime juice, dark brown sugar, Sriracha, crushed red pepper flakes, peanut oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh cilantro, limes, ginger, unsalted peanuts]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-2694178'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'A Day In The Kitchen',smallImageUrls = '[https://lh3.googleusercontent.com/GlwJwX-yAdImsrz97yzYyRAGSlPAXKIk8Bj7itYPzjLUDvmoXnBBF58avmrlL1DlnHTsB_HgQfiAndOT_cmr5mI=s90]',totalTimeInSeconds = '3600',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9o1lAlM-DruGaSqqvBMNbEwDQjkKAaT88P84Z86YQaEicB206-ria1E6xnNUeq3kOgjWmvs5kgIlh-jEUOQ=s90-c'}',ingredients = '[pad thai noodles, deveined shrimp, eggs, small carrot, green onion, garlic cloves, light olive oil, water, tamarind paste, oyster sauce, coconut sugar, fish sauce, soy sauce, bean sprouts, chopped peanuts, dried chili flakes, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Shrimp-Pad-Thai-2511725'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'null',sourceDisplayName = 'Bookcooker',smallImageUrls = '[https://lh3.googleusercontent.com/oRA3RBaVweVu-mbgLigmJBT1a5dK8mZGJgWBijAIz5kSfGy5ctOulTP3iF7HCJR3d3rnK2h2H0BEztVoGAjb3j4=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/GHOVr9l6K3s3_MIlQRGmGjE1cLy-Xnvlj94n3-RF7JdYXM-hWfFXtAJqPIkfxHTZAAbiVjeA-F57kRpXHJ7-ww=s90-c'}',ingredients = '[pad thai noodles, raw sugar, tamarind paste, fish sauce, rice vinegar, minced ginger, minced garlic, shallot, lemongrass, peanut oil, large eggs, cooked shrimp, extra firm tofu, scallions, peanuts, bean sprouts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1753549'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.3333333333333333',sweet = '0.16666666666666666',sour = '0.3333333333333333',bitter = '0.16666666666666666',piquant = '0.6666666666666666'}',sourceDisplayName = 'The Hungry Mouse',smallImageUrls = '[https://lh3.googleusercontent.com/kjWQ0yDHnfexuAGuUUb3pkrELmSDKiox3NVVVcf2qUNac9z4GdWsXu30RQomuRLuDXWUoNAJkDA-oyXOGyeT=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/taNW2mFGX9SDg4tgPbUjD5VyOulKfgmBf07EgFKYxXy1wdJXSrvZbGIKA0dYfKhKEgid5NprMS5vrv9GlwfnfA=s90-c'}',ingredients = '[rice noodles, boiling water, vegetable oil, cilantro, red chile, large shrimp, shallots, large eggs, sugar, oyster sauce, Thai fish sauce, fresh lime juice, bean sprouts, scallions, unsalted roasted peanuts, lime]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1764933'}, MatchesItem{recipeName = 'Chicken Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.8333333333333334',bitter = '0.6666666666666666',piquant = '0.5'}',sourceDisplayName = 'Cooking Classy',smallImageUrls = '[https://lh3.googleusercontent.com/wxHAOLhlPjO1Vm0nUPYfLdhlSY9fy-_LiJheciGzbVSmFY3TwK0vUD6Squ3EbFslSyzfJm_LxV8yO2mg8GoZ=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/e2DuGFKLDaj_lzdDoTUQSHq-9KeUFtlsv7-W2meNBkzn42n308SAqVC1W1BEMw_zFkAg_K1SIvAg-EFcEbcREA=s90-c'}',ingredients = '[rice noodles, boneless, skinless chicken breasts, vegetable oil, dark brown sugar, soy sauce, rice vinegar, lime juice, fish sauce, red bell pepper, matchstick carrots, garlic, green onions, bean sprouts, large eggs, unsalted peanuts, cilantro, red pepper flakes, sesame seeds]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Chicken-Pad-Thai-2213155'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.3333333333333333',bitter = '0.6666666666666666',piquant = '0.3333333333333333'}',sourceDisplayName = 'From Jessica's Kitchen',smallImageUrls = '[http://lh5.ggpht.com/tG9DQTsQN-Q7Vgy7mt0QAEDGtpy5xIjucpNpemEpZ4FwhrhvlN-7PoNF3-ZYRBtRzXCvv8VtuxjP2py7o9PhTrY=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh5.ggpht.com/2okQfHyuVIWk5uokYUkxoKUcQGvWkoY0QMbDClsnhfFj8I125HhW-zO7TFmsSusOiqRbFJoZ8cR6hpwxJM8v1jM=s90-c'}',ingredients = '[fresh lime juice, sugar, fish sauce, chili sauce, tamarind paste, brown sugar, chicken stock, red pepper flakes, kosher salt, vegetable oil, garlic cloves, shallots, chicken, shrimp, eggs, bean sprouts, fresh cilantro, roasted peanuts, scallions, rice noodles]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-972593'}, MatchesItem{recipeName = 'Quick Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'Food & Wine',smallImageUrls = '[http://lh3.googleusercontent.com/WFJa5dApcA64f4YS5W7w-Q38pzXL8e5f1f7QNKLW9NrokqF4z5_T0k8Q01eOgECYojSj5ritfz49OYQMr3_CxS4=s90]',totalTimeInSeconds = '1800',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/18irSqmW3lj0CrrGnEUn9FaiyuzU5CLxMAYeRU-U43knhaaXzDW6hOvw_FK0uEWkZB8VrESVnd6J6WMEI1wBnow=s90-c'}',ingredients = '[thai noodles, asian fish sauce, light brown sugar, fresh lime juice, Thai bird chiles, canola oil, shallots, large garlic cloves, medium shrimp, large eggs, scallions, roasted peanuts, bean sprouts, chopped cilantro]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Quick-Shrimp-Pad-Thai-1095426'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.8333333333333334',sweet = '0.5',sour = '0.3333333333333333',bitter = '0.8333333333333334',piquant = '0.6666666666666666'}',sourceDisplayName = 'MyRecipes',smallImageUrls = '[http://lh3.googleusercontent.com/X3vmGqU0FQfHiWa-RXC2H8_j5eP7YlaMaekrKHYuyqNt8PUJyTY-OKGQemj7y-q4DoGLL9krhmfCwwpE2_VHsw=s90]',totalTimeInSeconds = '1500',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/PEwp_Rt5ikN1kriUXm34UMwVMINSK3L9GEecCkGX900bH6FIQYMH9ex7FlqAADz_qZmpZHe4mG_xFyrxs0S_=s90-c'}',ingredients = '[rice noodles, dark brown sugar, lower sodium soy sauce, fish sauce, fresh lime juice, Sriracha, canola oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh basil]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-1085805'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.5',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.16666666666666666',bitter = '0.8333333333333334',piquant = '0.16666666666666666'}',sourceDisplayName = 'Williams-Sonoma',smallImageUrls = '[http://lh4.ggpht.com/cNeTmf82YRoFFXbJ7kpBIZAZ1tOKGtMau_kEzLZcHuCsoeEL7GcoPhPVoTDKpnmpJL5X_bxPoKZm9lU_ltaS=s90]',totalTimeInSeconds = '600',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh4.ggpht.com/bnrxERK9dvDKbsEb7PabRSFC-n2VXlWXj3_2GLtjtVmmAhZoFikVq7CtggANrTwYz_LdidpSFCcdC6cWKdUS_g=s90-c'}',ingredients = '[rice noodles, asian fish sauce, fresh lime juice, sugar, canola oil, medium shrimp, garlic cloves, red pepper flakes, eggs, bean sprouts, unsalted roasted peanuts, sliced green onions, chopped fresh cilantro, chopped fresh mint]',attributes = 'Attributes{course = 'null',holiday = 'null',cuisine = '[Asian, Thai]'}',id = 'Pad-Thai-641068'}]',totalMatchCount = '1361',q = 'null',allowedIngredient = 'null',excludedIngredient = 'null'}
[INFO ] 2019-05-05 14:13:25.531 [main] YummlyDataGrabber - $$$$$$$$$$ Ingredients: minced garlic
[INFO ] 2019-05-05 14:13:25.538 [main] YummlyDataGrabber - $$$$$$$$$$ Matches: [MatchesItem{recipeName = 'Classic Pad Thai',flavors = 'null',sourceDisplayName = 'Taste',smallImageUrls = '[https://lh3.googleusercontent.com/n6-iEQ-eB_tZ2xZ_9MQ7VrviKyNUG22WwXOrQ4sCnoc3k_R3ROGhVruW2nf74SqKiqTYVpIHj4WEVPROsUEBnH0=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9YxdRCk-f2qJ6aVEuyFIfBOyK2ae_qMABx-WAboDFPkt-V_4rk3OCW6zqbBGDlq8XkPBo7v7m_FMoqhaRBHLM0=s90-c'}',ingredients = '[minced garlic, thai chiles, palm sugar, tamarind paste, asian fish sauce, fresh lime juice, pad thai noodles, canola oil, large shrimp, red pepper flakes, eggs, extra firm tofu, carrots, bean sprouts, green onions, cilantro leaves, roasted peanuts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Classic-Pad-Thai-2151767'}, MatchesItem{recipeName = 'Shrimp Pad-Thai',flavors = 'null',sourceDisplayName = 'simple.artistic.cooking',smallImageUrls = '[https://lh3.googleusercontent.com/THkysjs-7NkPHvVlAHnMQ8QJbB83_v7glyf_LjGs6buHIusQixQ5OzzNrfiTxVUxuqbHXn4MHZ6gXJ4FN3u7qBU=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/F-3Ds9UUGjz6puJq4xVBr4ISkYWN2gxjRQHpwph7YLG54JSL13A0cJVVsErotaNDg8JPdubKEE0iv1-kTiSt=s90-c'}',ingredients = '[rice noodles, low sodium soy sauce, fish sauce, fresh lime juice, dark brown sugar, Sriracha, crushed red pepper flakes, peanut oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh cilantro, limes, ginger, unsalted peanuts]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-2694178'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'A Day In The Kitchen',smallImageUrls = '[https://lh3.googleusercontent.com/GlwJwX-yAdImsrz97yzYyRAGSlPAXKIk8Bj7itYPzjLUDvmoXnBBF58avmrlL1DlnHTsB_HgQfiAndOT_cmr5mI=s90]',totalTimeInSeconds = '3600',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/A9o1lAlM-DruGaSqqvBMNbEwDQjkKAaT88P84Z86YQaEicB206-ria1E6xnNUeq3kOgjWmvs5kgIlh-jEUOQ=s90-c'}',ingredients = '[pad thai noodles, deveined shrimp, eggs, small carrot, green onion, garlic cloves, light olive oil, water, tamarind paste, oyster sauce, coconut sugar, fish sauce, soy sauce, bean sprouts, chopped peanuts, dried chili flakes, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Shrimp-Pad-Thai-2511725'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'null',sourceDisplayName = 'Bookcooker',smallImageUrls = '[https://lh3.googleusercontent.com/oRA3RBaVweVu-mbgLigmJBT1a5dK8mZGJgWBijAIz5kSfGy5ctOulTP3iF7HCJR3d3rnK2h2H0BEztVoGAjb3j4=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/GHOVr9l6K3s3_MIlQRGmGjE1cLy-Xnvlj94n3-RF7JdYXM-hWfFXtAJqPIkfxHTZAAbiVjeA-F57kRpXHJ7-ww=s90-c'}',ingredients = '[pad thai noodles, raw sugar, tamarind paste, fish sauce, rice vinegar, minced ginger, minced garlic, shallot, lemongrass, peanut oil, large eggs, cooked shrimp, extra firm tofu, scallions, peanuts, bean sprouts, lime wedges]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1753549'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.3333333333333333',sweet = '0.16666666666666666',sour = '0.3333333333333333',bitter = '0.16666666666666666',piquant = '0.6666666666666666'}',sourceDisplayName = 'The Hungry Mouse',smallImageUrls = '[https://lh3.googleusercontent.com/kjWQ0yDHnfexuAGuUUb3pkrELmSDKiox3NVVVcf2qUNac9z4GdWsXu30RQomuRLuDXWUoNAJkDA-oyXOGyeT=s90]',totalTimeInSeconds = '1800',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/taNW2mFGX9SDg4tgPbUjD5VyOulKfgmBf07EgFKYxXy1wdJXSrvZbGIKA0dYfKhKEgid5NprMS5vrv9GlwfnfA=s90-c'}',ingredients = '[rice noodles, boiling water, vegetable oil, cilantro, red chile, large shrimp, shallots, large eggs, sugar, oyster sauce, Thai fish sauce, fresh lime juice, bean sprouts, scallions, unsalted roasted peanuts, lime]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-1764933'}, MatchesItem{recipeName = 'Chicken Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.8333333333333334',bitter = '0.6666666666666666',piquant = '0.5'}',sourceDisplayName = 'Cooking Classy',smallImageUrls = '[https://lh3.googleusercontent.com/wxHAOLhlPjO1Vm0nUPYfLdhlSY9fy-_LiJheciGzbVSmFY3TwK0vUD6Squ3EbFslSyzfJm_LxV8yO2mg8GoZ=s90]',totalTimeInSeconds = '2100',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'https://lh3.googleusercontent.com/e2DuGFKLDaj_lzdDoTUQSHq-9KeUFtlsv7-W2meNBkzn42n308SAqVC1W1BEMw_zFkAg_K1SIvAg-EFcEbcREA=s90-c'}',ingredients = '[rice noodles, boneless, skinless chicken breasts, vegetable oil, dark brown sugar, soy sauce, rice vinegar, lime juice, fish sauce, red bell pepper, matchstick carrots, garlic, green onions, bean sprouts, large eggs, unsalted peanuts, cilantro, red pepper flakes, sesame seeds]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Asian]'}',id = 'Chicken-Pad-Thai-2213155'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.3333333333333333',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.3333333333333333',bitter = '0.6666666666666666',piquant = '0.3333333333333333'}',sourceDisplayName = 'From Jessica's Kitchen',smallImageUrls = '[http://lh5.ggpht.com/tG9DQTsQN-Q7Vgy7mt0QAEDGtpy5xIjucpNpemEpZ4FwhrhvlN-7PoNF3-ZYRBtRzXCvv8VtuxjP2py7o9PhTrY=s90]',totalTimeInSeconds = '2400',rating = '4',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh5.ggpht.com/2okQfHyuVIWk5uokYUkxoKUcQGvWkoY0QMbDClsnhfFj8I125HhW-zO7TFmsSusOiqRbFJoZ8cR6hpwxJM8v1jM=s90-c'}',ingredients = '[fresh lime juice, sugar, fish sauce, chili sauce, tamarind paste, brown sugar, chicken stock, red pepper flakes, kosher salt, vegetable oil, garlic cloves, shallots, chicken, shrimp, eggs, bean sprouts, fresh cilantro, roasted peanuts, scallions, rice noodles]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Pad-Thai-972593'}, MatchesItem{recipeName = 'Quick Shrimp Pad Thai',flavors = 'null',sourceDisplayName = 'Food & Wine',smallImageUrls = '[http://lh3.googleusercontent.com/WFJa5dApcA64f4YS5W7w-Q38pzXL8e5f1f7QNKLW9NrokqF4z5_T0k8Q01eOgECYojSj5ritfz49OYQMr3_CxS4=s90]',totalTimeInSeconds = '1800',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/18irSqmW3lj0CrrGnEUn9FaiyuzU5CLxMAYeRU-U43knhaaXzDW6hOvw_FK0uEWkZB8VrESVnd6J6WMEI1wBnow=s90-c'}',ingredients = '[thai noodles, asian fish sauce, light brown sugar, fresh lime juice, Thai bird chiles, canola oil, shallots, large garlic cloves, medium shrimp, large eggs, scallions, roasted peanuts, bean sprouts, chopped cilantro]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Quick-Shrimp-Pad-Thai-1095426'}, MatchesItem{recipeName = 'Shrimp Pad Thai',flavors = 'Flavors{meaty = '0.16666666666666666',salty = '0.8333333333333334',sweet = '0.5',sour = '0.3333333333333333',bitter = '0.8333333333333334',piquant = '0.6666666666666666'}',sourceDisplayName = 'MyRecipes',smallImageUrls = '[http://lh3.googleusercontent.com/X3vmGqU0FQfHiWa-RXC2H8_j5eP7YlaMaekrKHYuyqNt8PUJyTY-OKGQemj7y-q4DoGLL9krhmfCwwpE2_VHsw=s90]',totalTimeInSeconds = '1500',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh3.googleusercontent.com/PEwp_Rt5ikN1kriUXm34UMwVMINSK3L9GEecCkGX900bH6FIQYMH9ex7FlqAADz_qZmpZHe4mG_xFyrxs0S_=s90-c'}',ingredients = '[rice noodles, dark brown sugar, lower sodium soy sauce, fish sauce, fresh lime juice, Sriracha, canola oil, green onion, large shrimp, garlic cloves, bean sprouts, unsalted dry roasted peanuts, fresh basil]',attributes = 'Attributes{course = '[Main Dishes]',holiday = 'null',cuisine = '[Thai, Asian]'}',id = 'Shrimp-Pad-Thai-1085805'}, MatchesItem{recipeName = 'Pad Thai',flavors = 'Flavors{meaty = '0.5',salty = '0.8333333333333334',sweet = '0.3333333333333333',sour = '0.16666666666666666',bitter = '0.8333333333333334',piquant = '0.16666666666666666'}',sourceDisplayName = 'Williams-Sonoma',smallImageUrls = '[http://lh4.ggpht.com/cNeTmf82YRoFFXbJ7kpBIZAZ1tOKGtMau_kEzLZcHuCsoeEL7GcoPhPVoTDKpnmpJL5X_bxPoKZm9lU_ltaS=s90]',totalTimeInSeconds = '600',rating = '3',imageUrlsBySize = 'ImageUrlsBySize{90 = 'http://lh4.ggpht.com/bnrxERK9dvDKbsEb7PabRSFC-n2VXlWXj3_2GLtjtVmmAhZoFikVq7CtggANrTwYz_LdidpSFCcdC6cWKdUS_g=s90-c'}',ingredients = '[rice noodles, asian fish sauce, fresh lime juice, sugar, canola oil, medium shrimp, garlic cloves, red pepper flakes, eggs, bean sprouts, unsalted roasted peanuts, sliced green onions, chopped fresh cilantro, chopped fresh mint]',attributes = 'Attributes{course = 'null',holiday = 'null',cuisine = '[Asian, Thai]'}',id = 'Pad-Thai-641068'}]
[INFO ] 2019-05-05 14:13:25.541 [main] YummlyDataGrabber - $$$$$$$$$$ Attribution: Attribution{logo = 'https://static.yummly.co/api-logo.png',html = 'Recipe search powered by <a href='http://www.yummly.co/recipes'><img alt='Yummly' src='https://static.yummly.co/api-logo.png'/></a>',text = 'Recipe search powered by Yummly',url = 'http://www.yummly.co/recipes/'}
[INFO ] 2019-05-05 14:13:25.543 [main] YummlyDataGrabber - $$$$$$$$$$ Facet Counts: FacetCounts{}
[INFO ] 2019-05-05 14:13:25.546 [main] YummlyDataGrabber - $$$$$$$$$$ Total Match Count: 1361
[INFO ] 2019-05-05 14:13:25.547 [main] YummlyDataGrabber - $$$$$$$$$$ Allowed Ingredients: null
[INFO ] 2019-05-05 14:13:25.547 [main] YummlyDataGrabber - $$$$$$$$$$ Excluded Ingredients: null
[INFO ] 2019-05-05 14:13:25.548 [main] YummlyDataGrabber - $$$$$$$$$$ Q: null
[INFO ] 2019-05-05 14:13:25.548 [main] TestYummlyApi - Found Criteria from Q: Classic Pad Thai
